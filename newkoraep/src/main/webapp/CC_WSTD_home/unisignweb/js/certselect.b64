remoteFunction('var __certselect=function(a){var C=function(h){function q(){if(!a.certsList)return null;var b=null,b=a.certsList,c=b.list.length,d=[],f=h.args.dn,e=null;null!=a.ESVS.Policy&&(-1!=a.ESVS.Policy.indexOf("|")?e=a.ESVS.Policy.split("|"):(e=[],e[0]=a.ESVS.Policy));var g=null;null!=a.ESVS.Organization&&(-1!=a.ESVS.Organization.indexOf("|")?g=a.ESVS.Organization.split("|"):(g=[],g[0]=a.ESVS.Organization));for(var z=0;z<c;z++){a.usWebToolkit.x509Certificate.parser(b.list[z].cert,"Base64");var m=a.usWebToolkit.x509Certificate.getCertificatePoliciesOid(),l=a.usWebToolkit.x509Certificate.getSubjectName(),L=a.usWebToolkit.x509Certificate.getNotAfter(),p=a.usWebToolkit.x509Certificate.getNotAfter(),q=b.list[z].index,n=a.certUtil().getIssuerName(m);"undefined"==n&&(n=a.certUtil().getO(l));if(null==f||"DIGITAL_SIGNATURE_P1"!=h.type&&"DIGITAL_SIGNATURE_P7"!=h.type&&"DIGITAL_SIGNATURE_P7_EXT"!=h.type||l.toLowerCase()==f.toLowerCase()){if(null!=a.ESVS.Policy){for(var k=0;k<e.length&&e[k]!=m;k++);if(e.length<=k)continue}if(null!=a.ESVS.Organization&&("CERT_RENEWAL"==h.type||"CERT_REVOCATION"==h.type||"CERT_SOE"==h.type)){for(k=0;k<g.length&&g[k].toLowerCase()!=a.certUtil().getO(l).toLowerCase();k++);if(g.length<=k)continue}if(a.ESVS.ShowExpiredCerts||"DIGITAL_SIGNATURE_P1"!=h.type&&"DIGITAL_SIGNATURE_P7"!=h.type&&"DIGITAL_SIGNATURE_P7_EXT"!=h.type||2!==a.certUtil().getExpirationStateValue(p))k=[""],k[1]=a.certUtil().getCertType(m),k[2]=a.certUtil().getCN(l),k[3]=n,k[4]=a.certUtil().getLocalDate(L),k[5]=q,k[6]=a.certUtil().getExpirationStateValue(p),d.push(k)}}return b={list:d}}function s(b,c,d,f,e,g,h){if(a.CONST.__USFB_M_DISK.device>c||0>d||!f)return-1;var m=0;t=d;a.certsList&&(a.certsList=null);a.nimservice()?a.nimservice().GetAllUserCertListNum(c,d,"",a.ESVS.Policy,function(c){m=c;if(0<m)a.nimservice().GetAllUserCert(c,function(c){a.certsList={list:c};c=q();"draw"==b?c?l.drawList(g,g.length,c.list,c.list.length,k++,h):l.drawList(g,g.length,null,0,k++,h):"redraw"==b&&(c?l.redrawList(c.list,c.list.length):l.redrawList(null,0))});else{if(0!==m&&-1!==m){c=a.nimservice().GetLastErrorCode();var d=a.nimservice().GetLastErrorMessage();n.log("***** GetCerts *****");n.log("Err Code : ",c,"\nErr Msg : ",d);a.uiUtil().errMsgBox(__text.IDS_MSGBOX_COMMON_ERROR_GET_CERT,c)}a.certsList=null;done=1}}):a.uiUtil().msgBox(__text.IDS_MSGBOX_NIM_ERROR_UNLOAD)}function r(b,c,d,f){if(a.CONST.__USFB_M_DISK.device>b||0>c||!d)return-1;var e=0,g=0;t=c;a.certsList&&(a.certsList=null);if(a.CONST.__PF_M_LS.device===b&&2&a.ESVS.Mode){if(!a.PFSH)return-1;try{a.PFSH.SelectStorage(1)}catch(h){n.log("***** Plugin Free SelectStorage error *****"),n.log("e.code : ",h.code,"e.message : ",h.message,"e.detail : ",h.detail)}try{a.PFSH.LoadAllCerts(document.domain)}catch(m){301E5===m.code?(a.PFSH.InstallCACerts(document.domain),a.PFSH.LoadAllCerts(document.domain)):(n.log("***** Plugin Free LoadAllCerts error *****"),n.log("e.code : ",m.code,"e.message : ",m.message,"e.detail : ",m.detail))}b=null;try{b=a.PFSH.GetUserCerts(document.domain),a.PFUC=b}catch(l){n.log("***** Plugin Free GetUserCerts error *****"),n.log("e.code : ",l.code,"e.message : ",l.message,"e.detail : ",l.detail)}b&&(e=b.length-1);n.log("***** Plugin Free *****");n.log("user certificate counts : ",e);if(0<e){c=[];for(d=0;d<e;d++){f=d+1;var k={};k.index=f;k.cert=b[f].signcert;c[d]=k}a.certsList={list:c}}else a.certsList=null,g=0}else if(a.CONST.__PF_M_LS.device!==b&&1&a.ESVS.Mode)if(a.plugin().valid)if("GPKI"==a.ESVS.PKI?a.plugin().SetGPKI():a.ESVS.PKI&&"NPKI"!=a.ESVS.PKI&&a.plugin().SetPCA(a.ESVS.PKI),e=a.CONST.__USFB_M_SMARTCARD.device===b?a.plugin().GetAllUserCertListNum(b,c,f):a.plugin().GetAllUserCertListNum(b,c,""),0<e){c=[];for(d=0;d<e;d++)f=d+1,k={},k.index=f,k.cert=a.plugin().GetUserSignCertFromCertList(f),c[d]=k;a.certsList={list:c}}else 0===e?g=0:(e=a.plugin().GetLastErrorCode(),g=a.plugin().GetLastErrorMessage(),n.log("***** GetCerts *****"),n.log("Err Code : ",e,"\nErr Msg : ",g),g=e),a.certsList=null;else return a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),-1;return g}function M(b,c){if(!b||!c)return!1;if(!a.certsList||0>l.selectedIndex())return a.uiUtil().msgBox(c.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;var d=a.loadUI("certverify")({type:null,args:{idx:parseInt(l.selectedIndex())},onConfirm:function(){d.dispose();b.focus()},onCancel:function(){d.dispose();b.focus()}});d.show();return!0}function N(b,c){if(!b||!c)return!1;if(!a.certsList||0>l.selectedIndex())return a.uiUtil().msgBox(c.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;var d=a.loadUI("certview")({type:null,args:{type:"Base64",idx:parseInt(l.selectedIndex()),cert:a.certsList.list[parseInt(l.selectedIndex())-1].cert},onConfirm:function(){d.dispose();b.focus()},onCancel:function(){d.dispose();b.focus()}});d.show();return!0}function D(b,c,d,f){if(a.CONST.__USFB_M_DISK.device>b||!c||!d||!f)return!1;var e=a.loadUI("driveselect")({type:"DEVICE_REMOVABLE_DISK",args:c,onConfirm:function(c){0<c&&(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p?s("redraw",b,c,f,""):(c=r(b,c,f,""),0!=c?(a.uiUtil().errMsgBox(f.IDS_MSGBOX_COMMON_ERROR_GET_CERT,c),l.redrawList(null,0)):(c=q())?l.redrawList(c.list,c.list.length):l.redrawList(null,0)));a.ESVS.Embedded?setTimeout(function(){e.dispose()},10):e.dispose();d.focus()},onCancel:function(){e.dispose();d.focus()}});e.show();return!0}function E(b,c,d,f){if(a.CONST.__USFB_M_DISK.device>b||!c||!d||!f)return!1;var e=a.loadUI("sectokenselect")({type:b,args:c,onConfirm:function(c){if(0<c)if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)s("redraw",b,c,f,"");else if(c=r(b,c,f,""),0!=c){switch(c){case 4812E4:case 4813E4:a.uiUtil().msgBox(f.IDS_MSGBOX_HSM_ERROR_CONNECTION);break;default:a.uiUtil().errMsgBox(f.IDS_MSGBOX_COMMON_ERROR_GET_CERT,c)}l.redrawList(null,0)}else(c=q())?l.redrawList(c.list,c.list.length):l.redrawList(null,0);a.ESVS.Embedded?setTimeout(function(){e.dispose()},10):e.dispose();d.focus()},onCancel:function(){e.dispose();d.focus()}});e.show();return!0}function C(b,c,d,f){if(a.CONST.__USFB_M_DISK.device>b||!c||!d||!f)return!1;var e=a.loadUI("driveselect")({type:"DEVICE_SAVE_TOKEN",args:c,onConfirm:function(c){e.dispose();if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)s("redraw",b,c,f,"");else if(a.plugin().valid){var h=a.plugin().CheckSmartCard();0===h?(PINDialog=a.loadUI("pin")({type:"PIN_SAVE_TOKEN",args:null,onConfirm:function(c){h=a.plugin().CheckPinNumberSCard(c);if(0!=h){switch(h){case 49000004:a.uiUtil().msgBox(f.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN);break;case 49000005:a.uiUtil().msgBox(f.IDS_MSGBOX_PW_ERROR_SAVE_TOKEN_PIN_LOCKED);break;default:a.uiUtil().errMsgBox(f.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN,e)}l.redrawList(null,0)}else{var e=r(b,0,f,c);0!=e?(a.uiUtil().errMsgBox(f.IDS_MSGBOX_COMMON_ERROR_GET_CERT,e),l.redrawList(null,0)):(c=q())?l.redrawList(c.list,c.list.length):l.redrawList(null,0)}a.ESVS.Embedded?setTimeout(function(){PINDialog.dispose()},10):PINDialog.dispose();setTimeout(function(){d.focus()},10)},onCancel:function(){PINDialog.dispose();setTimeout(function(){d.focus()},10)}}),PINDialog.show()):(a.uiUtil().msgBox(f.IDS_MSGBOX_SMART_CARD_UNCONNECTED),setTimeout(function(){d.focus()},10))}else a.uiUtil().msgBox(f.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),setTimeout(function(){d.focus()},10)},onCancel:function(){e.dispose();d.focus()}});e.show();return!0}function O(b,c){if(!b||!c)return!1;var d=0,f=null;p=a.CONST.__USFB_M_DISK.device;t=0;a.certsList&&(a.certsList=null);l.redrawList(null,-1);w(c);u();if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)if(a.nimservice())a.nimservice().GetDiskListNum(a.CONST.__USFB_M_DISK.device,function(d){if(0<d){for(var e=[],g=0;g<d;g++){var h=g+1,m={};m.index=h;m.name=a.nimservice().GetDiskDriveName(h);e[g]=m}f={list:e}}else return-1===d&&(d=a.nimservice().GetLastErrorCode(),e=a.nimservice().GetLastErrorMessage(),n.log("***** GetCertsFromRemovable *****"),n.log("Err Code : ",d,"\nErr Msg : ",e)),a.certsList=null,!1;D(a.CONST.__USFB_M_DISK.device,f,b,c)});else return a.uiUtil().msgBox(c.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1;else{if(a.plugin().valid)if(d=a.plugin().GetDiskListNum(),0<d){for(var e=[],g=0;g<d;g++){var h=g+1,m={};m.index=h;m.name=a.plugin().GetDiskDriveName(h);e[g]=m}f={list:e}}else return-1===d&&(d=a.plugin().GetLastErrorCode(),e=a.plugin().GetLastErrorMessage(),n.log("***** GetCertsFromRemovable *****"),n.log("Err Code : ",d,"\nErr Msg : ",e)),a.certsList=null,!1;else return a.uiUtil().msgBox(c.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),!1;D(a.CONST.__USFB_M_DISK.device,f,b,c)}return!0}function P(b,c){if(!b||!c)return!1;var d=0,f=null;p=a.CONST.__USFB_M_HSMKEY.device;t=0;a.certsList&&(a.certsList=null);l.redrawList(null,-1);Q(c);u();if(1&a.ESVS.Mode)if(a.plugin().valid){var e=[],d=a.plugin().GetHSMInstallListNum();if(0<d)for(var g=0;g<d;g++){var h=g+1,m={},k=a.plugin().GetHSMInstallDriverName(h).split("|");m.index=h;m.name=k[0];m.driver=k[1];m.passage=k[2];m.validity=k[3];e[g]=m}else-1===d&&(d=a.plugin().GetLastErrorCode(),g=a.plugin().GetLastErrorMessage(),n.log("***** GetCertsFromSecToken *****"),n.log("Err Code : ",d,"\nErr Msg : ",g));f={list:e}}else return a.uiUtil().msgBox(c.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),!1;else if(4&a.ESVS.Mode)if(a.nimservice())a.nimservice().GetDiskListNum(a.CONST.__USFB_M_HSMKEY.device,function(d){if(0<d){for(var e=[],g=0;g<d;g++){var h=g+1,m={},k=a.nimservice().GetSecureTokenName(h).split("|");m.index=h;m.name=k[0];m.driver=k[1];m.passage=k[2];e[g]=m}f={list:e}}else a.nimservice().GetLastErrorCode();E(a.CONST.__USFB_M_HSMKEY.device,f,b,c)});else return a.uiUtil().msgBox(c.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1;4&a.ESVS.Mode||E(a.CONST.__USFB_M_HSMKEY.device,f,b,c);return!0}function R(b,c){if(!b||!c)return!1;p=a.CONST.__USFB_M_MOBILETOKEN.device;t=0;a.certsList&&(a.certsList=null);l.redrawList(null,-1);w(c);u();if(4&a.ESVS.Mode)if(a.nimservice())a.nimservice().GetDiskListNum(a.CONST.__USFB_M_MOBILETOKEN.device,function(c){if(0<c)for(var b=0;b<c;b++){var e=b+1;a.nimservice().GetSecureTokenName(e).split("|")[0].indexOf("Mobile_SmartCert")&&document.getElementById("us-confirm-btn").click()}else a.nimservice().GetLastErrorCode()});else return a.uiUtil().msgBox(c.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1;return!0}function x(b,c){if(!b||!c)return!1;a.uiUtil().MsgBox(c.IDS_MSGBOX_NOT_SUPPORTED_MEDIA);return!0}function w(a){if(!a)return!1;var c=document.getElementById("us-lbl-pw");c.removeChild(c.lastChild);c.appendChild(document.createTextNode(a.IDS_PASSWORD));document.getElementById("us-lbl-pw2").innerHTML=A.IDS_PASSWORD_DESCRIPTION;return!0}function Q(a){if(!a)return!1;var c=document.getElementById("us-lbl-pw");c.removeChild(c.lastChild);c.appendChild(document.createTextNode(a.IDS_PIN));document.getElementById("us-lbl-pw2").innerHTML="";return!0}function F(a){if(null==a||0>=a.length)return!1;var c=document.getElementById("us-pw-text");c.value=a;c.readOnly=!0;return c.disabled=!0}function u(){var a=document.getElementById("us-pw-text");a.value="";a.readOnly=!1;a.disabled=!1}function G(b,c,d){if(null==c||0>=c.length||null==d)return!1;a.certsList&&(a.certsList=null);if(0<b){d=[];var f={},e=null;f.index=b;f.cert=a.plugin().GetUserSignCertFromCertList(b);d[0]=f;a.certsList={list:d};if(e=q())return l.redrawList(e.list,e.list.length),F(c),!0}else switch(b=a.plugin().GetLastErrorCode(),c=a.plugin().GetLastErrorMessage(),n.log("***** GetCertFromPFX *****"),n.log("Err Code : ",b,"\nErr Msg : ",c),b){case 4301E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b)}a.certsList&&(a.certsList=null);l.redrawList(null,-1);u();return!1}function S(b,c,d){if(null==b||0>=b.length||null==c||0>=c.length||null==d)return!1;var f=!1;a.plugin().valid?(b=a.plugin().GetPfxCertList(b,c),f=G(b,c,d)):a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);return f}function T(b,c,d){if(null==b||0>=b.length||null==c||0>=c.length||null==d)return!1;var f=!1;if(1&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)a.plugin().valid?(f=a.plugin().GetPfxCertListString(b,c),f=G(f,c,d)):a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);else a:if(b&&c&&d){var f=0,e={};try{var g=a.PFSH.SetP12OnMemory(b,c),f=g.index;a.PFUC=e=g.aluc}catch(h){n.log("***** Plugin Free SetP12OnMemory error *****");n.log("e.code : ",h.code,"e.message : ",h.message,"e.detail : ",h.detail);switch(h.code){case 1E7:0<=h.detail.indexOf("115010")?a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED):a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,h.detail);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,h.code)}f=!1;break a}a.certsList&&(a.certsList=null);d=[];b={};g=null;b.index=f;b.cert=e[f].signcert;d[0]=b;a.certsList={list:d};(g=q())?(l.redrawList(g.list,g.list.length),F(c),f=!0):(a.certsList=null,l.redrawList(null,-1),u(),f=!1)}else f=!1;return f}function H(b,c){if(null==b||0>=b.length||null==c)return!1;if(0<b.length&&-1<b.indexOf(".")){var d=b.split("."),d=d[d.length-1].toLowerCase();if("pfx"!=d&&"p12"!=d)return a.uiUtil().msgBox(c.IDS_MSGBOX_FILE_ERROR_NOT_PFX),!1}else return a.uiUtil().msgBox(c.IDS_MSGBOX_FILE_ERROR_READ),!1;return!0}function U(b,c){if(!b||!c)return!1;var d=null,f=null,e=document.getElementById("us-confirm-btn"),g=document.getElementById("us-cert-search-btn");if("opera"==a.browserName||"safari"==a.browserName)b.style.display="none";if(window.FileReader){var h=b.files;if(0<h.length){var m=h[0];if(!0==H(m.name,c)){var k=new FileReader;k.readAsBinaryString?(k.readAsBinaryString(m),k.addEventListener("load",function(){var b=k.result,d=b.length;if(m.size===d)f=a.usWebToolkit.util.encode64(b,d);else return a.uiUtil().msgBox(c.IDS_MSGBOX_FILE_ERROR_READ),!1})):(k.readAsArrayBuffer(m),k.addEventListener("load",function(){var b=k.result,d=null;try{var e=String.fromCharCode.apply(null,Array.prototype.slice.apply(new Uint8Array(b)));try{d=decodeURIComponent(escape(e))}catch(g){if(g instanceof URIError)d=e;else throw g;}}catch(h){return a.uiUtil().msgBox(c.IDS_MSGBOX_FILE_ERROR_READ),!1}b=d.length;if(m.size===b)f=a.usWebToolkit.util.encode64(d,b);else return a.uiUtil().msgBox(c.IDS_MSGBOX_FILE_ERROR_READ),!1}))}else return setTimeout(function(){g.focus()},10),!1}else return setTimeout(function(){g.focus()},10),!1}else{if("msie"==a.browserName&&8===parseInt(a.browserVersion))h=document.getElementById("us-div-cert-select"),h.onselectstart=function(){return!0},b.select(),d=document.selection.createRange().text,b.style.display="none",h.onselectstart=function(){return!1};else if("msie"==a.browserName&&9===parseInt(a.browserVersion)){if(d=b.value,-1<d.indexOf("fakepath"))return a.uiUtil().msgBox(c.IDS_MSGBOX_SEARCH_CERT_GUIDE_FOR_IE9),setTimeout(function(){g.focus()},10),!1}else d=b.value,n.log("file full path : ",d);if(!1==H(d,c))return setTimeout(function(){g.focus()},10),!1}Dialog=a.loadUI("password")({type:null,args:null,onConfirm:function(a){var b=!1,b=null!=d?S(d,a,c):T(f,a,c);a="";Dialog.dispose();!0===b?setTimeout(function(){e.focus()},10):setTimeout(function(){g.focus()},10)},onCancel:function(){Dialog.dispose();setTimeout(function(){g.focus()},10)}});Dialog.show();return!0}function V(b){function c(){I++;I>=a.ESVS.LimitNumOfTimesToTryToInputPW?a.ESVS.Embedded?(f.value="",f.focus()):(a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_OVER_NUMBER_OF_ALLOWED_BEFORE+a.ESVS.LimitNumOfTimesToTryToInputPW+d.IDS_MSGBOX_PW_ERROR_OVER_NUMBER_OF_ALLOWED_AFTER),B()):(f.value="",f.focus())}l.restoreOnMouseEvent();if(!b)return!1;var d=b;if(!a.certsList||0>l.selectedIndex())return a.uiUtil().msgBox(d.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;var f=document.getElementById("us-pw-text");if(1&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p){if(!f.value)return a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PLEASE_INPUT_PASSWORD),f.focus(),!1;if(a.plugin().valid){var e=parseInt(l.selectedIndex()),g=0;p===a.CONST.__USFB_M_HSMKEY.device&&0<t||(g=a.plugin().CheckUserCertPassword(e,f.value));if(0!=g)a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED),c();else{g=a.plugin().SetCurrentUserCert(e,f.value);if(0!=g){e=a.plugin().GetLastErrorCode();b=a.plugin().GetLastErrorMessage();n.log("***** SetCurrentUserCert *****");n.log("Err Code : ",e,"\nErr Msg : ",b);switch(e){case 4823E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SEC_TOKEN_PIN);c();break;case 4825E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SEC_TOKEN_PIN_LOCKED);c();break;default:a.uiUtil().errMsgBox("Fail to set the certificate",e)}return!1}"VID_VERIFICATION"!=h.type&&(f.value="");if("DIGITAL_SIGNATURE_P1"==h.type){g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;a.usWebToolkit.x509Certificate.parser(g,"Base64");b=a.usWebToolkit.x509Certificate.getSubjectName();if(!b||0>=b.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-2),!1;h.onConfirm(g,b,d.IDS_MSGBOX_SIGN_ERROR)}else if("DIGITAL_SIGNATURE_P7"==h.type){g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;g=a.certUtil().getTheCertAttributes(g,"Base64");h.onConfirm(d.IDS_MSGBOX_SIGN_ERROR,g)}else if("DIGITAL_SIGNATURE_P7_EXT"==h.type||"DIGITAL_SIGNATURE_P7_EXT_DISABLE_SECTOKEN"==h.type)h.onConfirm(d.IDS_MSGBOX_SIGN_ERROR,e);else if("CERT_RENEWAL"==h.type){g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_RENEW_ERROR,-1),!1;a.usWebToolkit.x509Certificate.parser(g,"Base64");g=a.usWebToolkit.x509Certificate.getNotAfter();if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_RENEW_ERROR,-2),!1;h.onConfirm(g,b.IDS_CONFIRMBOX_CERT_RENEWAL)}else if("CERT_REVOCATION"==h.type)h.onConfirm(d.IDS_CONFIRMBOX_CERT_REVOCATION);else if("CERT_SOE"==h.type)h.onConfirm(d.IDS_CONFIRMBOX_CERT_SOE);else if("VID_VERIFICATION"==h.type)h.onConfirm(e,f.value,d.IDS_MSGBOX_VID_SUCCESS_VERIFICATION,d.IDS_MSGBOX_VID_ERROR_VERIFICATION),f.value="";else h.onConfirm();a.ESVS.Embedded&&u();return!0}}else f.value="",a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD)}else{if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p){if(!a.nimservice())return!1;e=parseInt(l.selectedIndex());if("DIGITAL_SIGNATURE_P7"===h.type){g=a.nimservice().GetCert(e);if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;if(!f.value)return a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PLEASE_INPUT_PASSWORD),f.focus(),!1;g=a.certUtil().getTheCertAttributes(g,"Base64");h.onConfirm(d.IDS_MSGBOX_SIGN_ERROR,g,e,f.value,p)}else if("DIGITAL_SIGNATURE_P1"===h.type){g=a.nimservice().GetCert(e);if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;if(!f.value)return a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PLEASE_INPUT_PASSWORD),f.focus(),!1;a.usWebToolkit.x509Certificate.parser(g,"Base64");b=a.usWebToolkit.x509Certificate.getSubjectName();if(!b||0>=b.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-2),!1;h.onConfirm(g,b,d.IDS_MSGBOX_SIGN_ERROR,e,f.value,p)}else if("CERT_RENEWAL"==h.type){g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_RENEW_ERROR,-1),!1;a.usWebToolkit.x509Certificate.parser(g,"Base64");g=a.usWebToolkit.x509Certificate.getNotAfter();if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_RENEW_ERROR,-2),!1;h.onConfirm(g,b.IDS_CONFIRMBOX_CERT_RENEWAL,p,t,e)}else if("CERT_REVOCATION"==h.type)h.onConfirm(d.IDS_CONFIRMBOX_CERT_REVOCATION,e,f.value,p,t);else if("DIGITAL_SIGNATURE_P7_AND_VID_VERIFICATION"===h.type){b={signErr:d.IDS_MSGBOX_SIGN_ERROR,verifySuc:d.IDS_MSGBOX_VID_SUCCESS_VERIFICATION,verifyErr:d.IDS_MSGBOX_VID_ERROR_VERIFICATION};g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;g=a.certUtil().getTheCertAttributes(g,"Base64");h.onConfirm(e,f.value,b,g,p);f.value=""}else if("DIGITAL_SIGNATURE_P7_FILE"===h.type){g=a.certsList.list[e-1].cert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;g=GetTheCertAttributes(g,"Base64");h.onConfirm(d.IDS_MSGBOX_SIGN_ERROR,d.IDS_CONFIRMBOX_FILE_ALREADY_EXIT,g,p)}else if("ENCRYPT_P7"==h.type)h.onConfirm(e,d.IDS_MSGBOX_ENCRYPT_ERROR);else if("VID_VERIFICATION"===h.type)h.onConfirm(e,f.value,d.IDS_MSGBOX_VID_SUCCESS_VERIFICATION,d.IDS_MSGBOX_VID_ERROR_VERIFICATION,"NIM");else h.onConfirm();f.value="";a.ESVS.Embedded&&u();return!0}if(!f.value)return a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PLEASE_INPUT_PASSWORD),f.focus(),!1;if(!a.PFUC)return!1;e=parseInt(l.selectedIndex());b=null;try{b=a.usWebToolkit.pkcs8.encryptedPrivateKeyFromBase64(a.PFUC[e].signpri)}catch(k){n.log("***** encryptedPrivateKeyFromBase64 error *****"),n.log("Err Code : ",k.code,"\nErr Msg : ",k.message)}g=!1;try{g=a.usWebToolkit.pkcs8.checkUserCertPassword(b,f.value)}catch(m){n.log("***** CheckUserCertPassword error *****"),n.log("Err Code : ",m.code,"\nErr Msg : ",m.message)}finally{b=""}if(!1===g)a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED),c();else{if("DIGITAL_SIGNATURE_P7"===h.type){g=a.PFUC[e].signcert;if(!g||0>=g.length)return a.uiUtil().errMsgBox(d.IDS_MSGBOX_SIGN_ERROR,-1),!1;g=a.certUtil().getTheCertAttributes(g,"Base64");h.onConfirm(d.IDS_MSGBOX_SIGN_ERROR,g,e,f.value,p)}else if("CERT_REVOCATION"===h.type)h.onConfirm(d.IDS_CONFIRMBOX_CERT_REVOCATION,e,f.value);else if("VID_VERIFICATION"===h.type)h.onConfirm(e,f.value,d.IDS_MSGBOX_VID_SUCCESS_VERIFICATION,d.IDS_MSGBOX_VID_ERROR_VERIFICATION,"PFS");else h.onConfirm();f.value="";a.ESVS.Embedded&&u();return!0}}return!1}function W(b,c){if(!b||!c)return!1;J=a.loadUI("gridlist");l=J({type:"certslist",tblid:"us-tbl-list",tbltitleid:"us-tbl-list-th",titlelistid:"us-grid-head-div",titlerowid:"us-list-title-row",titleelementid:"us-list-title-element",titledividerid:"us-list-title-divider",titlelistcn:"us-layout-grid-head-div",titlerowcn:"us-layout-grid-head-row",titleelementcn:"us-layout-grid-row-title-element",titledividercn:"us-layout-grid-row-title-divider",tblbodyid:"us-tbl-list-td",datalistid:"us-grid-body-div",datarowid:"us-list-body-row",dataelementid:"us-list-data-element",datalistcn:"us-layout-grid-body-div",datarowcn:"us-layout-grid-body-row",dataelementcn:"us-layout-grid-row-data-element",dataselectcn:"us-layout-grid-row-data-selected-element"});var d=!0;"opera"==a.browserName&&(d=!1);if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)s("draw",p,0,c,"",b,d);else{var f=r(p,0,c,"");0!=f?a.uiUtil().errMsgBox(c.IDS_MSGBOX_COMMON_ERROR_GET_CERT,f):(f=q())?l.drawList(b,b.length,f.list,f.list.length,k++,d):l.drawList(b,b.length,null,0,k++,d)}return!0}function v(b){if(!b)return!1;y(b,A,"close");for(var c=a.ESVS.Media.list.split("|"),d=0;d<c.length;d++){var f=a.CONST.medias[c[d]];void 0!=f&&null!=f&&(f=document.getElementById("us-btn-"+f.name),void 0!=f&&null!=f&&"us-layout-storage-btn-none"!=f.className&&(b===f?(f.className="us-layout-storage-btn-on",f.focus()):f.className="us-layout-storage-btn-off"))}return!0}function X(b){if(null==b||void 0==b)return!1;var c=!a.uiUtil().isItSupportingThisStorage(b);!1==c&&null!=a.ESVS.Media&&null!=a.ESVS.Media.list&&0>a.ESVS.Media.list.indexOf(b.name)&&(c=!0);if(c)return!1;var c=document.getElementById("us-storage-btn-list"),d=document.createElement("li");d.setAttribute("id","us-storage-btn-li-"+b.name,0);d.setAttribute("mediaIndex",b.mediaIndex,0);7==b.mediaIndex&&(d.className="line-first");"hidden"===b.visibility?(d.style.display="none",d.style.visibility="hidden"):(d.style.display="block",d.style.visibility="visible");var f=document.createElement("button");f.setAttribute("type","button",0);f.setAttribute("id","us-btn-"+b.name,0);f.setAttribute("title",b.label,0);f.setAttribute("tabindex",b.tabIndex,0);b.disabled?(f.onclick=function(){a.uiUtil().msgBox(A.IDS_MSGBOX_NOT_SUPPORTED_MEDIA)},f.className="us-layout-storage-btn-none"):(f.onclick=b.onclick,b.device===p?(f.className="us-layout-storage-btn-on",f.focus()):f.className="us-layout-storage-btn-off");d.appendChild(f);if("harddisk"!==b.name&&"webstorage"!==b.name){var e=document.createElement("span");e.className="us-drive-select";f.appendChild(e)}e=document.createElement("span");e.className="us-img-storage";var g=document.createElement("img");g.setAttribute("id","us-img-"+b.name,0);g.setAttribute("alt",b.label,0);b.disabled?g.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_"+b.name+"_d.png",0):g.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_"+b.name+".png",0);e.appendChild(g);f.appendChild(e);e=document.createElement("span");e.setAttribute("id","us-lbl-"+b.name,0);e.className="us-layout-lbl-storage";e.appendChild(document.createTextNode(b.label));f.appendChild(e);d.appendChild(f);c.appendChild(d);return!0}function y(b,c,d){if("no_more"==d)a.uiUtil().msgBox(c.IDS_MSGBOX_NOT_MORE_MEDIA);else{b=document.getElementById("us-storage-wrap");"open"==d?(b.className="us-layout-storage-more-wrap",b=document.getElementById("us-storage-more-btn"),b.setAttribute("title",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_HIDDEN+c.IDS_BUTTON,0),b.onclick=function(){y(this,c,"close")},b=document.getElementById("us-storage-more-btn-img"),b.setAttribute("alt",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_HIDDEN,0),b.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_close.png",0)):(b.className="us-layout-storage-wrap",b=document.getElementById("us-storage-more-btn"),b.setAttribute("title",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_SHOW+c.IDS_BUTTON,0),b.onclick=function(){y(this,c,"open")},b=document.getElementById("us-storage-more-btn-img"),b.setAttribute("alt",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_SHOW+c.IDS_BUTTON,0),b.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_open.png",0));b=a.ESVS.Media.list.split("|");for(var f=0;f<b.length;f++){var e=a.CONST.medias[b[f]];if(void 0!=e&&null!=e){var g=document.getElementById("us-storage-btn-li-"+e.name);if(void 0!=g&&null!=g){var h=g.getAttribute("mediaIndex");"open"==d?(g.style.display="block",g.style.visibility="visible"):6<h?(g.style.display="none",g.style.visibility="hidden"):(g.style.display="block",g.style.visibility="visible");1==h&&document.getElementById("us-btn-"+e.name).focus()}}}}return!0}function B(){l.restoreOnMouseEvent();h.onCancel()}var Y=function(){var b;b=window.XMLHttpRequest?new window.XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");b.open("GET",a.ESVS.SRCPath+(a.ESVS.Embedded?"unisignweb/rsrc/layout/certselect_embedded.html?version="+a.ver:"unisignweb/rsrc/layout/certselect.html?version="+a.ver),!1);b.send(null);return b.responseText},K=function(){var b;b=window.XMLHttpRequest?new window.XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");b.open("GET",a.ESVS.SRCPath+"unisignweb/rsrc/lang/certselect_"+a.ESVS.Language+".js?version="+a.ver,!1);b.send(null);return b.responseText},A=eval(eval(K)()),J=null,l=null,I=0,k=a.ESVS.TabIndex,p=a.CONST.__USFB_M_HDD.device,t=0;null!=a.ESVS.Media&&null!=a.ESVS.Media.defaultdevice?p=a.uiUtil().getMediaDevice(a.ESVS.Media.defaultdevice):2==a.ESVS.Mode&&(p=a.CONST.__PF_M_LS.device);var n=window.console||{log:function(){}};return function(){var b=eval(Y),c=eval(eval(K)());a.ESVS.TargetObj.innerHTML=b();a.ESVS.Embedded?(b=document.getElementById("us-lbl-title"),b.appendChild(document.createTextNode(c.IDS_CERT_SELECTION+" "+c.IDS_CERT_SELECTION_PURPOSE_SIGN)),b.setAttribute("tabindex",k++,0),b=document.getElementById("us-cursor-disabled"),b.setAttribute("tabindex",k++,0)):(b=document.getElementById("us-lbl-title"),b.appendChild(document.createTextNode(c.IDS_CERT_SELECTION)),b.setAttribute("tabindex",k++,0),b=document.getElementById("us-cursor-disabled"),b.setAttribute("title",c.IDS_SENSE_READER_INTRO,0),b.setAttribute("tabindex",k++,0),b=document.getElementById("us-logo-img"),b.setAttribute("alt",c.IDS_LOGO,0),b.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/main_cert_logo.png",0),b.setAttribute("tabindex",k++,0),b=document.getElementById("us-legend-storage"),b.appendChild(document.createTextNode(c.IDS_STORAGE_SELECT)));for(var b=0,d=a.ESVS.Media.list.split("|"),f=0;f<d.length;f++){var e=a.CONST.medias[d[f]];if(void 0!=e&&null!=e){switch(e.device){case a.CONST.__USFB_M_DISK.device:e.label=c.IDS_STORAGE_REMOVABLE;e.disabled=2==a.ESVS.Mode;e.onclick=function(){O(this,c);v(this)};break;case a.CONST.__USFB_M_HSMKEY.device:e.label=c.IDS_STORAGE_SECTOKEN;e.disabled=!("win"==a.osName&&2!=a.ESVS.Mode);e.onclick=function(){P(this,c);v(this)};break;case a.CONST.__USFB_M_SMARTCARD.device:e.label=c.IDS_STORAGE_SAVETOKEN;e.disabled=!("win"==a.osName&&2!=a.ESVS.Mode);e.onclick=function(){if(this&&c){var b=null;p=a.CONST.__USFB_M_SMARTCARD.device;t=0;a.certsList&&(a.certsList=null);l.redrawList(null,-1);w(c);u();var b=[],d={};d.index=a.CONST.__USFB_M_SMARTCARD.device;d.name=c.IDS_SAVETOKEN_SMART_CARD;b[0]=d;b={list:b};C(a.CONST.__USFB_M_SMARTCARD.device,b,this,c)}v(this)};break;case a.CONST.__USFB_M_MOBILE.device:e.label=c.IDS_STORAGE_MOBILEPHONE;e.disabled=!0;e.onclick=function(){this&&c&&(p=a.CONST.__USFB_M_MOBILE.device,t=0,a.certsList&&(a.certsList=null),l.redrawList(null,-1),w(c),u());v(this)};break;case a.CONST.__USFB_M_HDD.device:e.label=c.IDS_STORAGE_HARDDISK;e.disabled=2==a.ESVS.Mode;e.onclick=function(){if(this&&c)if(p=a.CONST.__USFB_M_HDD.device,t=0,a.certsList&&(a.certsList=null),l.redrawList(null,-1),w(c),u(),4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)s("redraw",a.CONST.__USFB_M_HDD.device,0,c,"");else{var b=r(a.CONST.__USFB_M_HDD.device,0,c,"");0!=b?(a.uiUtil().errMsgBox(c.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b),l.redrawList(null,0)):(b=q())?l.redrawList(b.list,b.list.length):l.redrawList(null,0)}v(this)};break;case a.CONST.__USFB_M_MOBILETOKEN.device:e.label=c.IDS_STORAGE_MOBILETOKEN;e.disabled=2==a.ESVS.Mode;e.onclick=function(){R(this,c);v(this)};break;case a.CONST.__PF_M_LS.device:e.label=c.IDS_STORAGE_LS;e.disabled=1==a.ESVS.Mode;e.onclick=function(){if(this&&c)if(p=a.CONST.__PF_M_LS.device,t=0,a.certsList&&(a.certsList=null),l.redrawList(null,-1),w(c),u(),4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==p)s("redraw",a.CONST.__PF_M_LS.device,0,c,"");else{var b=r(a.CONST.__PF_M_LS.device,0,c,"");0!=b?(a.uiUtil().errMsgBox(c.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b),l.redrawList(null,0)):(b=q())?l.redrawList(b.list,b.list.length):l.redrawList(null,0)}v(this)};break;case a.CONST.__PF_M_TOUCHSIGN.device:e.label=c.IDS_STORAGE_TOUCHSIGN;e.disabled=!0;e.onclick=function(){x(this,c)};break;case a.CONST.__PF_M_SMARTSIGN.device:e.label=c.IDS_STORAGE_SMARTSIGN;e.disabled=!0;e.onclick=function(){x(this,c)};break;case a.CONST.__PF_M_WEBSECTOKEN.device:e.label=c.IDS_STORAGE_WEBSECTOKEN;e.disabled=!0;e.onclick=function(){x(this,c)};break;case a.CONST.__PF_M_WEBSOFTTOKEN.device:e.label=c.IDS_STORAGE_WEBSOFTTOKEN;e.disabled=!0;e.onclick=function(){x(this,c)};break;default:e.label=c.IDS_STORAGE_ETC,e.disabled=!0,e.onclick=function(){x(this,c)}}e.tabIndex=k;e.mediaIndex=b+1;e.visibility=6<e.mediaIndex?"hidden":"visible";X(e)&&(k++,b++)}}d=document.getElementById("us-storage-more-btn");null!=d&&void 0!=d&&(d.setAttribute("title",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_SHOW+c.IDS_BUTTON,0),6<b?(d.style.display="block",d.style.visibility="visible",d.setAttribute("tabindex",k++,0),d.onclick=function(){y(this,c,"open")}):(d.setAttribute("disabled","disabled",0),d.style.display="none",d.style.visibility="hidden",d.onclick=function(){y(this,c,"no_more")}),b=document.getElementById("us-storage-more-btn-img"),b.setAttribute("alt",c.IDS_STORAGE_MORE_VIEW+c.IDS_STORAGE_MORE_VIEW_SHOW,0),b.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_open.png",0));document.getElementById("us-tbl-list").style.summary=c.IDS_CERT_LIST_TABLE_SUMMARY;document.getElementById("us-tbl-list-caption").appendChild(document.createTextNode(c.IDS_CERT_LIST_CAPTION));W([{title:c.IDS_CERT_STATUS},{title:c.IDS_CERT_CLASSIFY},{title:c.IDS_CERT_USER},{title:c.IDS_CERT_ISSUER},{title:c.IDS_CERT_EXPIRATION_DAY}],c);document.getElementById("us-lbl-pw").appendChild(document.createTextNode(c.IDS_PASSWORD));document.getElementById("us-lbl-pw2").innerHTML=c.IDS_PASSWORD_DESCRIPTION;document.getElementById("us-file-search-hidden").onchange=function(){U(this,c)};b=document.getElementById("us-cert-search-btn");b.setAttribute("value",c.IDS_CERT_SEARCH,0);b.setAttribute("title",c.IDS_CERT_SEARCH+c.IDS_BUTTON,0);b.onclick=function(){if(null!=c){var b=document.getElementById("us-file-search-hidden");if("safari"==a.browserName&&6>parseFloat(a.browserVersion))a.uiUtil().msgBox(c.IDS_MSGBOX_SEARCH_CERT_GUIDE_FOR_SAFARI);else{if("opera"==a.browserName||"safari"==a.browserName||"msie"==a.browserName&&8===parseInt(a.browserVersion))b.style.display="block";b.value="";if(""!=b.value){var d=b.onchange,e=b.parentNode;e.removeChild(b);b=document.createElement("input");b.setAttribute("type","file",0);b.setAttribute("accept","application/x-pkcs12",0);b.setAttribute("id","us-file-search-hidden",0);b.className="us-layout-file-search-hidden";b.onchange=d;e.appendChild(b)}b.click()}}};4&a.ESVS.Mode&&(b.readOnly=!0,b.disabled=!0);d=document.getElementById("us-pw-text");d.value="";d.onkeydown=function(a){if(a=a?a:event)a=a||window.event,13==(a.which||a.keyCode)&&document.getElementById("us-confirm-btn").click()};a.ESVS.Embedded||(4&a.ESVS.Mode&&("CERT_RENEWAL"==h.type||"CERT_REVOCATION"==h.type)?(document.getElementById("us-div-cert").style.display="none",document.getElementById("disabledpw").innerHTML='<input id="us-confirm-btn" class="us-normal-btn btn-confirm h35" type="button" />'):document.getElementById("enabledpw").innerHTML='<input id="us-confirm-btn" class="us-normal-btn btn-confirm h35" type="button" />');f=document.getElementById("us-confirm-btn");f.setAttribute("value",c.IDS_CONFIRM,0);f.setAttribute("title",c.IDS_CONFIRM+c.IDS_BUTTON,0);f.onclick=function(){V(c)};if(e=document.getElementById("us-cert-verify-btn"))e.setAttribute("value",c.IDS_CERT_VERIFY,0),e.setAttribute("title",c.IDS_CERT_VERIFY+c.IDS_BUTTON,0),e.onclick=function(){M(this,c)},2===(255&a.ESVS.Mode)&&(e.readOnly=!0,e.disabled=!0);var g=document.getElementById("us-cert-view-btn");g.setAttribute("value",c.IDS_CERT_VIEW,0);g.setAttribute("title",c.IDS_CERT_VIEW+c.IDS_BUTTON,0);g.onclick=function(){N(this,c)};var n=document.getElementById("us-cert-proposal-btn");n.setAttribute("value",c.IDS_CERT_PROPOSAL,0);n.setAttribute("title",c.IDS_CERT_PROPOSAL+c.IDS_BUTTON,0);n.onclick=function(){this&&("firefox"==a.browserName?window.open("https://raadmin.crosscert.com/customer/tk/Main.jsp?","crosscert_url","scrollbars=1"):window.open("https://raadmin.crosscert.com/customer/tk/Main.jsp?"),this.focus())};a.ESVS.Embedded?(d.setAttribute("tabindex",k++,0),f.setAttribute("tabindex",k++,0),b.setAttribute("tabindex",k++,0),n.setAttribute("tabindex",k++,0),g.setAttribute("tabindex",k++,0),e&&e.setAttribute("tabindex",k++,0)):(d.setAttribute("tabindex",k++,0),f.setAttribute("tabindex",k++,0),b.setAttribute("tabindex",k++,0),n.setAttribute("tabindex",k++,0),g.setAttribute("tabindex",k++,0),e&&e.setAttribute("tabindex",k++,0),b=document.getElementById("us-cls-btn"),b.setAttribute("value",c.IDS_CLOSE,0),b.setAttribute("title",c.IDS_CLOSE+c.IDS_BUTTON,0),b.setAttribute("tabindex",k++,0),b.onclick=function(){B()},document.getElementById("us-lbl-notice").appendChild(document.createTextNode(c.IDS_NOTICE)),b=document.getElementById("us-cls-img-btn"),b.setAttribute("title",c.IDS_CLOSE_CERT_SELECTION_CLOSE,0),b.setAttribute("tabindex",k++,0),b.onclick=function(){B()},document.getElementById("us-cls-btn-img").setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/cert_close_btn.png",0));return document.getElementById("us-div-cert-select")}()};return function(h){var q=C({type:h.type,args:h.args,onConfirm:h.onConfirm,onCancel:h.onCancel});if(!a.ESVS.Embedded){h=a.uiLayerLevel;var s=a.uiUtil().getOverlay(h);q.style.zIndex=h+1;document.body.insertBefore(s,document.body.firstChild)}var r=window.onresize;return{show:function(){if(!a.ESVS.Embedded){draggable(q,document.getElementById("us-div-title"));s.style.display="block";var h=a.uiUtil().getNumSize(a.uiUtil().getStyle(q,"height","height"));q.style.top=-1===h?a.uiUtil().getScrollTop()+a.uiUtil().getViewportHeight()/6+"px":a.uiUtil().getScrollTop()+(a.uiUtil().getViewportHeight()-h)/3+"px"}q.style.left=a.uiUtil().getScrollLeft()+(a.uiUtil().getViewportWidth()-a.uiUtil().getNumSize(a.uiUtil().getStyle(q,"width","width")))/2+"px";q.style.display="block";window.onresize=a.ESVS.Embedded?function(){q&&(q.style.left=a.uiUtil().getScrollLeft()+(a.uiUtil().getViewportWidth()-a.uiUtil().getNumSize(a.uiUtil().getStyle(q,"width","width")))/2+"px");r&&r()}:function(){if(q){var h=a.uiUtil().getNumSize(a.uiUtil().getStyle(q,"height","height"));q.style.top=-1===h?a.uiUtil().getScrollTop()+a.uiUtil().getViewportHeight()/6+"px":a.uiUtil().getScrollTop()+(a.uiUtil().getViewportHeight()-h)/3+"px";q.style.left=a.uiUtil().getScrollLeft()+(a.uiUtil().getViewportWidth()-a.uiUtil().getNumSize(a.uiUtil().getStyle(q,"width","width")))/2+"px"}r&&r()};a.uiLayerLevel+=10;a.ESVS.TabIndex+=30;setTimeout(function(){var a=q.getElementsByTagName("p");if(0<a.length)for(var h=0;h<a.length;h++)"us-lbl-title"==a[h].id&&a[h].focus()},10)},hide:function(){a.ESVS.Embedded||(s.style.display="none",q.style.display="none")},dispose:function(){window.onresize=function(){r&&r()};a.ESVS.Embedded||(q.parentNode.removeChild(q),s.parentNode.removeChild(s),a.uiLayerLevel-=10,a.ESVS.TabIndex-=30)}}}};');