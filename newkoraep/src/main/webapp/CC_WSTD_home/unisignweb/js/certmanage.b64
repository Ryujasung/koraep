remoteFunction('var __certmanage=function(a){var L=function(x){function v(){if(!a.certsList)return null;for(var c=null,c=a.certsList,b=c.list.length,f=[],d=0;d<b;d++){a.usWebToolkit.x509Certificate.parser(c.list[d].cert,"Base64");var g=a.usWebToolkit.x509Certificate.getCertificatePoliciesOid(),e=a.usWebToolkit.x509Certificate.getSubjectName(),l=a.usWebToolkit.x509Certificate.getNotAfter(),k=a.usWebToolkit.x509Certificate.getNotAfter(),m=c.list[d].index,h=a.certUtil().getIssuerName(g);"undefined"==h&&(h=a.certUtil().getO(e));var y=[""];y[1]=a.certUtil().getCertType(g);y[2]=a.certUtil().getCN(e);y[3]=h;y[4]=a.certUtil().getLocalDate(l);y[5]=m;y[6]=a.certUtil().getExpirationStateValue(k);f.push(y)}return c={list:f}}function u(c,b,f,d,g,e,l){if(a.CONST.__USFB_M_DISK.device>b||0>f||!d)return-1;var k=0;r=f;a.certsList&&(a.certsList=null);a.nimservice()?a.nimservice().GetAllUserCertListNum(b,f,"",a.ESVS.Policy,function(b){p.log("certsCnt:%d",b);k=b;if(0<k)a.nimservice().GetAllUserCert(b,function(b){a.certsList={list:b};b=v();"draw"==c?b?h.drawList(e,e.length,b.list,b.list.length,q++,l):h.drawList(e,e.length,null,0,q++,l):"redraw"==c&&(b?h.redrawList(b.list,b.list.length):h.redrawList(null,0))});else{if(0!==k)if(-1===k)alert(F.IDS_MSGBOX_NOT_INSTALL_VESTCERT),window.open(a.ESVS.SRCPath+"install/VestCert_Obj_check.html");else{b=a.nimservice().GetLastErrorCode();var d=a.nimservice().GetLastErrorMessage();p.log("***** GetCerts *****");p.log("Err Code : ",b,"\nErr Msg : ",d);a.uiUtil().errMsgBox(F.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b)}a.certsList=null;done=1}}):a.uiUtil().msgBox(__text.IDS_MSGBOX_NIM_ERROR_UNLOAD)}function s(c,b,f,d){if(a.CONST.__USFB_M_DISK.device>c||0>b||!f)return-1;var g=0,e=0;r=b;a.certsList&&(a.certsList=null);if(a.CONST.__PF_M_LS.device===c){if(!a.PFSH)return-1;try{a.PFSH.SelectStorage(1)}catch(l){p.log("***** Plugin Free SelectStorage error *****"),p.log("e.code : ",l.code,"e.message : ",l.message,"e.detail : ",l.detail)}try{a.PFSH.LoadAllCerts(document.domain)}catch(k){301E5===k.code?(a.PFSH.InstallCACerts(document.domain),a.PFSH.LoadAllCerts(document.domain)):(p.log("***** Plugin Free LoadAllCerts error *****"),p.log("e.code : ",k.code,"e.message : ",k.message,"e.detail : ",k.detail))}c=null;try{c=a.PFSH.GetUserCerts(document.domain),a.PFUC=c}catch(m){p.log("***** Plugin Free GetCerts error *****"),p.log("e.code : ",m.code,"e.message : ",m.message,"e.detail : ",m.detail),a.uiUtil().errMsgBox(m.message,m.code)}null!=c&&void 0!=c&&void 0!=c.length&&(g=c.length-1);p.log("***** Plugin Free *****");p.log("user certificate counts : ",g);if(0<g){b=[];for(f=0;f<g;f++){d=f+1;var h={};h.index=d;h.cert=c[d].signcert;b[f]=h}a.certsList={list:b}}else a.certsList=null,e=0}else if(a.CONST.__PF_M_LS.device!==c&&1&a.ESVS.Mode)if(a.plugin().valid)if("GPKI"==a.ESVS.PKI?a.plugin().SetGPKI():a.ESVS.PKI&&"NPKI"!=a.ESVS.PKI&&a.plugin().SetPCA(a.ESVS.PKI),g=a.CONST.__USFB_M_SMARTCARD.device===c?a.plugin().GetAllUserCertListNum(c,b,d):a.plugin().GetAllUserCertListNum(c,b,""),0<g){b=[];for(f=0;f<g;f++)d=f+1,h={},h.index=d,h.cert=a.plugin().GetUserSignCertFromCertList(d),b[f]=h;a.certsList={list:b}}else 0===g?e=0:(g=a.plugin().GetLastErrorCode(),e=a.plugin().GetLastErrorMessage(),p.log("***** GetCerts *****"),p.log("Err Code : ",g,"\nErr Msg : ",e),e=g),a.certsList=null;else return a.uiUtil().msgBox(f.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),-1;return e}function C(c,b){if(!c||!b)return!1;if(!a.certsList)return a.uiUtil().msgBox(b.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;var f=a.loadUI("certview")({type:null,args:{type:"Base64",idx:parseInt(h.selectedIndex()),cert:a.certsList.list[parseInt(h.selectedIndex())-1].cert},onConfirm:function(){f.dispose();c.focus()},onCancel:function(){f.dispose();c.focus()}});f.show();return!0}function M(c,b){if(!c||!b)return!1;if(!a.certsList)return a.uiUtil().msgBox(b.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;Dialog=a.loadUI("storageselect")({type:"CERT_COPY",args:{sourceDevice:n,sourceDrive:r},onConfirm:function(c,d){Dialog.dispose();if(a.nimservice())a.nimservice().GetDiskListNum(n,function(g){if(0<g){for(var e=[],l=0;l<g;l++){var k=l+1,m={};m.index=k;m.name=a.nimservice().GetDiskDriveName(k);e[l]=m}driveList={list:e}}else a.nimservice().GetLastErrorCode();a.nimservice().CopyCert(n,r,c,d,h.selectedIndex(),!1,function(c){"object"==typeof c?a.uiUtil().errMsgBox(c.msg,c.code):"ok"==c?a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_COPY_SUCCESS):a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_COPY_ERROR,c)})});else return a.uiUtil().msgBox(b.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1},onCancel:function(){Dialog.dispose();c.focus()}});Dialog.show();return!0}function N(c,b){if(!c||!b)return!1;if(!a.certsList)return a.uiUtil().msgBox(b.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;4<=a.ESVS.Mode?a.nimservice()?a.nimservice().ChangePassword(n,r,parseInt(h.selectedIndex()),function(c){"object"==typeof c?a.uiUtil().errMsgBox(c.msg,c.code):"ok"==c?(u("redraw",n,r,b,""),a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_SUCCESS)):a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_ERROR,c)}):a.uiUtil().msgBox(b.IDS_MSGBOX_NIM_ERROR_UNLOAD):(Dialog=a.loadUI("changepassword")({type:null,args:null,onConfirm:function(f,d){if(null==f||0>=f.length||null==d||0>=d.length)return a.uiUtil().msgBox(b.IDS_MSGBOX_PW_ERROR_PLEASE_INPUT_PASSWORD),!1;var g=parseInt(h.selectedIndex());if(1>g)return a.uiUtil().msgBox(b.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;if(a.CONST.__PF_M_LS.device===n)try{var e=a.PFUC[g],l,k;l=k=null;var m=a.usWebToolkit.pkcs8.encryptedPrivateKeyFromBase64(e.signpri),t=a.usWebToolkit.pkcs8.checkUserCertPassword(m,f);if(!1===t){var m=null,y={code:-1,message:b.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD};throw y;}l=a.usWebToolkit.pkcs8.changePassword(m,f,d,"Base64");m=null;if("undefined"!==typeof e.kmcert){m=a.usWebToolkit.pkcs8.encryptedPrivateKeyFromBase64(e.kmpri);t=a.usWebToolkit.pkcs8.checkUserCertPassword(m,f);if(!1===t)throw m=null,y={code:-1,message:b.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD},y;k=a.usWebToolkit.pkcs8.changePassword(m,f,d,"Base64")}m=null;try{g={};g.signcert=e.signcert;g.signpri=l;null!==k&&(g.kmcert=e.kmcert,g.kmpri=k);a.PFSH.SaveUserCert(e.ca,g,document.domain,!1);e=g=null;s(n,r,b,"");var J=v();J?h.redrawList(J.list,J.list.length):h.redrawList(null,0);a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_SUCCESS)}catch(z){switch(p.log("***** SANDBOX.PFSH.SaveUserCert *****"),p.log("e.code : ",z.code,"e.message : ",z.message,"e.detail : ",z.detail),z.code){case 1E7:0<=z.detail.indexOf("115010")?a.uiUtil().msgBox(b.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED):a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_ERROR,z.detail);break;default:a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_ERROR,z.code);break}}finally{}}catch(G){p.log("***** ChangePW error *****"),p.log("Err Code : ",G.code,"\nErr Msg : ",G.message),a.uiUtil().errMsgBox(G.message,G.code)}finally{}else a.plugin().valid?(e=a.plugin().CheckUserCertPassword(g,f),0===e?(e=a.plugin().ChangeUserCertPassword(g,f,d),0===e?a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_SUCCESS):(g=a.plugin().GetLastErrorCode(),a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_CHANGE_PW_ERROR,g))):a.uiUtil().msgBox(b.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD)):a.uiUtil().msgBox(b.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);f=d="";Dialog.dispose();setTimeout(function(){c.focus()},10)},onCancel:function(){Dialog.dispose();setTimeout(function(){c.focus()},10)}}),Dialog.show());return!0}function O(c,b){function f(b,c){if(1>b||null==c||0>=c.length)return!1;if(a.CONST.__PF_M_LS.device===n)try{a.PFSH.DeleteUserCertByIndex(b,document.domain)}catch(f){return p.log("***** Plugin Free DeleteToDevice error *****"),p.log("e.code : ",f.code,"e.message : ",f.message,"e.detail : ",f.detail),a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_DELETE_ERROR,f.code),!1}finally{}else{var g=a.plugin().DeleteCert(b,c);if(0!==g){switch(g){case 4823E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SEC_TOKEN_PIN);break;case 4825E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SEC_TOKEN_PIN_LOCKED);break;case 49000004:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN);break;case 49000005:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SAVE_TOKEN_PIN_LOCKED);break;default:g=a.plugin().GetLastErrorCode(),a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_DELETE_ERROR,g)}return!1}}a.certsList&&(a.certsList=null);s(n,r,d,"");(g=v())?h.redrawList(g.list,g.list.length):h.redrawList(null,0);a.uiUtil().msgBox(d.IDS_MSGBOX_CERT_DELETE_SUCCESS);return!0}if(!c||!b)return!1;var d=b;if(!a.certsList)return a.uiUtil().msgBox(d.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;if(confirm(d.IDS_CONFIRMBOX_WARNING_DELETE_CERT))if(4<=a.ESVS.Mode)a.nimservice()?a.nimservice().DeleteCertificate(n,r,parseInt(h.selectedIndex()),function(b){"object"==typeof b?a.uiUtil().errMsgBox(b.msg,b.code):"ok"==b?(u("redraw",n,r,d,""),a.uiUtil().msgBox(d.IDS_MSGBOX_CERT_DELETE_SUCCESS)):a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_DELETE_ERROR,b)}):a.uiUtil().msgBox(d.IDS_MSGBOX_NIM_ERROR_UNLOAD);else{var g=null,g=a.CONST.__USFB_M_HSMKEY.device===n?a.loadUI("pin"):a.loadUI("password");Dialog=g({type:null,args:null,onConfirm:function(b){var g=parseInt(h.selectedIndex());if(1&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)if(a.plugin().valid){var k=0;a.CONST.__USFB_M_HSMKEY.device!==n&&(k=a.plugin().CheckUserCertPassword(g,b));0===k?f(g,b):a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD)}else a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);else{if(!a.PFUC)return b="",p.log("[error] SANDBOX.PFUC is null"),!1;try{var k=a.usWebToolkit.pkcs8.encryptedPrivateKeyFromBase64(a.PFUC[g].signpri),m=a.usWebToolkit.pkcs8.checkUserCertPassword(k,b),k="";!1===m?a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD):f(g,b)}catch(t){p.log("***** CheckUserCertPassword error *****"),p.log("Err Code : ",t.code,"\nErr Msg : ",t.message),a.uiUtil().errMsgBox(t.message,t.code)}finally{}}b="";Dialog.dispose();setTimeout(function(){c.focus()},10)},onCancel:function(){Dialog.dispose();setTimeout(function(){c.focus()},10)}});Dialog.show()}else c.focus();return!0}function P(c,b){if(null==c||0>=c.length||null==b)return!1;if(0<c.length&&-1<c.indexOf(".")){var f=c.split("."),f=f[f.length-1].toLowerCase();if("pfx"!=f&&"p12"!=f)return a.uiUtil().msgBox(b.IDS_MSGBOX_FILE_ERROR_NOT_PFX),!1}else return a.uiUtil().msgBox(b.IDS_MSGBOX_FILE_ERROR_READ),!1;return!0}function Q(c){if(null==c)return!1;if(4<=a.ESVS.Mode)a.nimservice()?(SSDialog=a.loadUI("storageselect")({type:"CERT_IMPORT",args:null,onConfirm:function(b,d){a.nimservice().ImportCert(b,d,function(b){"object"==typeof b?a.uiUtil().errMsgBox(b.msg,b.code):"ok"==b?(u("redraw",n,r,c,""),a.uiUtil().msgBox(c.IDS_MSGBOX_CERT_IMPORT_SUCCESS)):a.uiUtil().errMsgBox(c.IDS_MSGBOX_CERT_IMPORT_ERROR,b);SSDialog.dispose()})},onCancel:function(){SSDialog.dispose()}}),SSDialog.show()):a.uiUtil().msgBox(c.IDS_MSGBOX_NIM_ERROR_UNLOAD);else if(a.uiUtil().isItPortableDevice())a.uiUtil().ImportFromBackupStore();else{var b=document.getElementById("us-cert-manage-file-search-hidden");if("safari"==a.browserName&&6>parseFloat(a.browserVersion))return a.uiUtil().msgBox(c.IDS_MSGBOX_SEARCH_CERT_GUIDE_FOR_SAFARI),!1;if("opera"==a.browserName||"safari"==a.browserName||"msie"==a.browserName&&8===parseInt(a.browserVersion))b.style.display="block";b.value="";if(""!=b.value){var f=b.onchange,d=b.parentNode;d.removeChild(b);b=document.createElement("input");b.setAttribute("type","file",0);b.setAttribute("accept","application/x-pkcs12",0);b.setAttribute("id","us-cert-manage-file-search-hidden",0);b.className="us-layout-cert-manage-file-search-hidden";b.onchange=f;d.appendChild(b)}b.click()}return!0}function L(c,b){function f(b,c,e,g){if(0===b)a.uiUtil().msgBox(d.IDS_MSGBOX_CERT_IMPORT_SUCCESS),n===c&&r===e&&(a.CONST.__USFB_M_SMARTCARD.device===n&&0===r?s(n,r,d,g):s(n,r,d,""),(b=v())?h.redrawList(b.list,b.list.length):h.redrawList(null,0));else switch(b){case 4823E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SEC_TOKEN_PIN);break;case 4825E4:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SEC_TOKEN_PIN_LOCKED);break;case 4843E4:a.uiUtil().msgBox(d.IDS_MSGBOX_HSM_ERROR_CERT_ALREADY_EXISTS);break;case 4844E4:a.uiUtil().msgBox(d.IDS_MSGBOX_HSM_ERROR_MEMORY_TOO_SMALL);break;case 4846E4:a.uiUtil().msgBox(d.IDS_MSGBOX_HSM_ERROR_UNSUPPORT_KEY_LENGTH);break;case 49000004:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN);break;case 49000005:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SAVE_TOKEN_PIN_LOCKED);break;case 4123E4:b=a.plugin().GetLastErrorMessage();b=a.certUtil().getLocalDate(b);p.log("latestCertExpLocalDate : ",b);b=d.IDS_MSGBOX_CERT_COPY_ERROR_NEWEST_CERT+"\n\n"+d.IDS_NEWEST_CERT_EXPIRATION_DATE+b;a.uiUtil().msgBox(b);break;default:switch(e=0,e=a.CONST.__PF_M_LS.device===c?b:a.plugin().GetLastErrorCode(),e){case 3509:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_IMPORT_ERROR,e)}}}if(!c||!b)return!1;var d=b,g=null,e=null,l=document.getElementById("us-cert-manage-get-cert-btn");if("opera"==a.browserName||"safari"==a.browserName)c.style.display="none";if(window.FileReader){var k=c.files;if(0<k.length){var m=k[0];if(!0==P(m.name,d)){var t=new FileReader;t.readAsBinaryString?(t.readAsBinaryString(m),t.addEventListener("load",function(){var b=t.result,c=b.length;if(m.size===c)e=a.usWebToolkit.util.encode64(b,c);else return a.uiUtil().msgBox(d.IDS_MSGBOX_FILE_ERROR_READ),!1})):(t.readAsArrayBuffer(m),t.addEventListener("load",function(){var b=t.result,c=null;try{var g=String.fromCharCode.apply(null,Array.prototype.slice.apply(new Uint8Array(b)));try{c=decodeURIComponent(escape(g))}catch(f){if(f instanceof URIError)c=g;else throw f;}}catch(l){return a.uiUtil().msgBox(d.IDS_MSGBOX_FILE_ERROR_READ),!1}b=c.length;if(m.size===b)e=a.usWebToolkit.util.encode64(c,b);else return a.uiUtil().msgBox(d.IDS_MSGBOX_FILE_ERROR_READ),!1}))}else return setTimeout(function(){l.focus()},10),!1}else return setTimeout(function(){l.focus()},10),!1}else{if("msie"==a.browserName&&8===parseInt(a.browserVersion))k=document.getElementById("us-div-cert-manage"),k.onselectstart=function(){return!0},c.select(),g=document.selection.createRange().text,c.style.display="none",k.onselectstart=function(){return!1};else if("msie"==a.browserName&&9===parseInt(a.browserVersion)){if(g=c.value,-1<g.indexOf("fakepath"))return a.uiUtil().msgBox(d.IDS_MSGBOX_SEARCH_CERT_GUIDE_FOR_IE9),setTimeout(function(){l.focus()},10),!1}else g=c.value,p.log("file full path : ",g);if(!1==P(g,d))return setTimeout(function(){l.focus()},10),!1}Dialog=a.loadUI("password")({type:null,args:null,onConfirm:function(b){Dialog.dispose();SSDialog=a.loadUI("storageselect")({type:"CERT_IMPORT",args:null,onConfirm:function(c,h){if(a.CONST.__USFB_M_HSMKEY.device===c||a.CONST.__USFB_M_SMARTCARD.device===c){SSDialog.dispose();var k=null,k=a.CONST.__USFB_M_SMARTCARD.device===c?"PIN_SAVE_TOKEN":"PIN_SECURITY_TOKEN";PINDialog=a.loadUI("pin")({type:k,args:null,onConfirm:function(k){if(a.plugin().valid){var m=0,m=null!=g?a.plugin().ImportPfxCert_HSM(g,b,c,h,k):a.plugin().ImportPfxCertString_HSM(e,b,c,h,k);f(m,c,h,k)}else a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);b=k="";PINDialog.dispose();setTimeout(function(){l.focus()},10)},onCancel:function(){b="";PINDialog.dispose();setTimeout(function(){l.focus()},10)}});PINDialog.show()}else{if(a.CONST.__PF_M_LS.device===c){if(!a.PFSH)return a.uiUtil().msgBox("unsupport html5 storage"),!1;k=0;try{var m=a.PFSH.SetP12OnMemory(e,b),n=m.aluc[m.index];a.usWebToolkit.x509Certificate.parser(n.signcert,"Base64");var t=a.usWebToolkit.x509Certificate.getCertificatePoliciesOid(),r=a.certUtil().getIssuerEnName(t);a.PFSH.SaveUserCert(r,n,document.domain,!0)}catch(q){switch(p.log("***** SANDBOX.PFSH.SaveUserCert *****"),p.log("e.code : ",q.code,"e.message : ",q.message,"e.detail : ",q.detail),k=q.code,q.code){case 1E7:0<=q.detail.indexOf("115010")?a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_PASSWORD_IS_NOT_MATCHED):a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_IMPORT_ERROR,q.detail);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_CERT_IMPORT_ERROR,q.code)}}f(k,c,h,"")}else a.plugin().valid?(k=0,k=null!=g?a.plugin().ImportPfxCert(g,b,c,h):a.plugin().ImportPfxCertString(e,b,c,h),f(k,c,h,"")):a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);b="";SSDialog.dispose();setTimeout(function(){l.focus()},10)}},onCancel:function(){b="";SSDialog.dispose();setTimeout(function(){l.focus()},10)}});SSDialog.show()},onCancel:function(){Dialog.dispose();setTimeout(function(){l.focus()},10)}});Dialog.show();return!0}function R(c,b){if(!c||!b)return!1;if(!a.certsList)return a.uiUtil().msgBox(b.IDS_MSGBOX_COMMON_ERROR_NO_SELECTED_CERT),!1;var f=null,d=document.getElementById("us-cert-manage-put-cert-out-btn");4==a.ESVS.Mode||6==a.ESVS.Mode?a.nimservice()&&null!=a.nimservice()?a.nimservice().ExportCert(n,r,parseInt(h.selectedIndex()),"0",function(c){"object"==typeof c?a.uiUtil().errMsgBox(c.msg,c.code):"ok"==c?a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_EXPORT_SUCCESS):a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_EXPORT_ERROR,c)}):a.uiUtil().msgBox(b.IDS_MSGBOX_NIM_ERROR_UNLOAD):2&a.ESVS.Mode?(Dialog=a.loadUI("password")({type:null,args:null,onConfirm:function(c){var e=parseInt(h.selectedIndex());if(1&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)if(a.plugin().valid)if(0===a.plugin().CheckUserCertPassword(e,c))if((f=a.plugin().ExportPfxCertToTmpfile(e,c))&&0<f.length)a.uiUtil().msgBox(b.IDS_MSGBOX_CERT_EXPORT_SUCCESS+"\n\n"+f);else switch(c=a.plugin().GetLastErrorCode(),c){case 4013E4:a.uiUtil().msgBox(b.IDS_MSGBOX_HSM_ERROR_UNSUPPORT_LOW_PERFORM_MEDIA);break;default:a.uiUtil().errMsgBox(b.IDS_MSGBOX_CERT_EXPORT_ERROR,c)}else a.uiUtil().msgBox(b.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD);else a.uiUtil().msgBox(b.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);else{if(!a.PFUC)return c="",p.log("[error] SANDBOX.PFUC is null"),!1;try{var l=a.usWebToolkit.pkcs8.encryptedPrivateKeyFromBase64(a.PFUC[e].signpri),k=a.usWebToolkit.pkcs8.checkUserCertPassword(l,c),l="";p.log("ExportPFX : bRv=",k);if(!1===k)a.uiUtil().msgBox(b.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_PASSWORD);else if(a.uiUtil().isItPortableDevice()){var m=a.PFSH.GetP12ForBuToMo(e,"hex");p.log("ExportPFX To Mobile : jsonRv.key=",m.key);p.log("ExportPFX To Mobile : jsonRv.p12=",m.p12);a.uiUtil().ExportToBackupStore(m.p12,m.key);m=null}else{var m=a.PFSH.GetP12ForBuToPc(e,c),t=m.p12,q=m.dn,r=a.certUtil().getCN(q)+".p12";p.log("ExportPFX : fileName=",r);a.fileUtil().save(r,t);t=q=m=null}}catch(s){p.log("***** CheckUserCertPassword error *****"),p.log("Err Code : ",s.code,"\nErr Msg : ",s.message),a.uiUtil().errMsgBox(s.message,s.code)}finally{}}c="";Dialog.dispose();setTimeout(function(){d.focus()},10)},onCancel:function(){Dialog.dispose();setTimeout(function(){d.focus()},10)}}),Dialog.show()):a.uiUtil().msgBox(b.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD);return!0}function Y(c){if(!c)return!1;var b=a.loadUI("swinfo")({type:null,args:null,onConfirm:function(){b.dispose();c.focus()},onCancel:function(){b.dispose();c.focus()}});b.show();return!0}function K(){var a=document.getElementById("us-cert-manage-cert-copy-btn");a.readOnly=!1;a.disabled=!1}function S(){var a=document.getElementById("us-cert-manage-cert-copy-btn");a.readOnly=!0;a.disabled=!0}function H(){var a=document.getElementById("us-cert-manage-pw-change-btn");a.readOnly=!1;a.disabled=!1}function I(){var a=document.getElementById("us-cert-manage-put-cert-out-btn");a.readOnly=!1;a.disabled=!1}function T(){var a=document.getElementById("us-cert-manage-put-cert-out-btn");a.readOnly=!0;a.disabled=!0}function B(c){c==a.CONST.__PF_M_LS.device?(S(),H(),a.uiUtil().isItSupportingPFCertBackUp()?I():T()):c==a.CONST.__USFB_M_HDD.device?(K(),H(),I()):c==a.CONST.__USFB_M_DISK.device?(K(),H(),I()):c==a.CONST.__USFB_M_HSMKEY.device?(S(),c=document.getElementById("us-cert-manage-pw-change-btn"),c.readOnly=!0,c.disabled=!0,T()):(K(),H(),I())}function U(c,b,f,d){if(a.CONST.__USFB_M_DISK.device>c||!b||!f||!d)return!1;var g=a.loadUI("driveselect")({type:"DEVICE_REMOVABLE_DISK",args:b,onConfirm:function(b){0<b&&(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n?u("redraw",c,b,d,""):(b=s(c,b,d,""),0!=b?(a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b),h.redrawList(null,0)):(b=v())?h.redrawList(b.list,b.list.length):h.redrawList(null,0)));a.ESVS.Embedded?setTimeout(function(){g.dispose()},10):g.dispose();f.focus()},onCancel:function(){g.dispose();f.focus()}});g.show();return!0}function V(c,b,f,d){if(a.CONST.__USFB_M_DISK.device>c||!b||!f||!d)return!1;var g=a.loadUI("sectokenselect")({type:c,args:b,onConfirm:function(b){if(0<b)if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)u("redraw",c,b,d,"");else if(b=s(c,b,d,""),0!=b){switch(b){case 4812E4:case 4813E4:a.uiUtil().msgBox(d.IDS_MSGBOX_HSM_ERROR_CONNECTION);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,b)}h.redrawList(null,0)}else(b=v())?h.redrawList(b.list,b.list.length):h.redrawList(null,0);a.ESVS.Embedded?setTimeout(function(){g.dispose()},10):g.dispose();f.focus()},onCancel:function(){g.dispose();f.focus()}});g.show();return!0}function Z(c,b,f,d){if(a.CONST.__USFB_M_DISK.device>c||!b||!f||!d)return!1;var g=a.loadUI("driveselect")({type:"DEVICE_SAVE_TOKEN",args:b,onConfirm:function(b){g.dispose();if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)u("redraw",c,b,d,"");else if(a.plugin().valid){var l=a.plugin().CheckSmartCard();0===l?(PINDialog=a.loadUI("pin")({type:"PIN_SAVE_TOKEN",args:null,onConfirm:function(b){l=a.plugin().CheckPinNumberSCard(b);if(0!=l){switch(l){case 49000004:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN);break;case 49000005:a.uiUtil().msgBox(d.IDS_MSGBOX_PW_ERROR_SAVE_TOKEN_PIN_LOCKED);break;default:a.uiUtil().errMsgBox(d.IDS_MSGBOX_PW_ERROR_INPUT_WRONG_SAVE_TOKEN_PIN,e)}h.redrawList(null,0)}else{var e=s(c,0,d,b);0!=e?(a.uiUtil().errMsgBox(d.IDS_MSGBOX_COMMON_ERROR_GET_CERT,e),h.redrawList(null,0)):(b=v())?h.redrawList(b.list,b.list.length):h.redrawList(null,0)}PINDialog.dispose();setTimeout(function(){f.focus()},10)},onCancel:function(){PINDialog.dispose();setTimeout(function(){f.focus()},10)}}),PINDialog.show()):(a.uiUtil().msgBox(d.IDS_MSGBOX_SMART_CARD_UNCONNECTED),setTimeout(function(){f.focus()},10))}else a.uiUtil().msgBox(d.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),setTimeout(function(){f.focus()},10)},onCancel:function(){g.dispose();f.focus()}});g.show();return!0}function $(c,b){if(!c||!b)return!1;var f=0,d=null;n=a.CONST.__USFB_M_DISK.device;r=0;a.certsList&&(a.certsList=null);h.redrawList(null,-1);if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)if(a.nimservice())a.nimservice().GetDiskListNum(a.CONST.__USFB_M_DISK.device,function(e){if(0<e){for(var f=[],g=0;g<e;g++){var h=g+1,l={};l.index=h;l.name=a.nimservice().GetDiskDriveName(h);f[g]=l}d={list:f}}else return-1===e&&(e=a.nimservice().GetLastErrorCode(),f=a.nimservice().GetLastErrorMessage(),p.log("***** GetCertsFromRemovable *****"),p.log("Err Code : ",e,"\nErr Msg : ",f)),a.certsList=null,!1;U(a.CONST.__USFB_M_DISK.device,d,c,b)});else return a.uiUtil().msgBox(b.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1;else{if(a.plugin().valid)if(f=a.plugin().GetDiskListNum(),0<f){for(var g=[],e=0;e<f;e++){var l=e+1,k={};k.index=l;k.name=a.plugin().GetDiskDriveName(l);g[e]=k}d={list:g}}else return-1===f&&(f=a.plugin().GetLastErrorCode(),g=a.plugin().GetLastErrorMessage(),p.log("***** GetCertsFromRemovable *****"),p.log("Err Code : ",f,"\nErr Msg : ",g)),a.certsList=null,!1;else return a.uiUtil().msgBox(b.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),!1;U(a.CONST.__USFB_M_DISK.device,d,c,b)}return!0}function aa(c,b){if(!c||!b)return!1;var f=0,d=null;n=a.CONST.__USFB_M_HSMKEY.device;r=0;B(n);a.certsList&&(a.certsList=null);h.redrawList(null,-1);if(1&a.ESVS.Mode)if(a.plugin().valid){var g=[],f=a.plugin().GetHSMInstallListNum();if(0<f)for(var e=0;e<f;e++){var l=e+1,k={},m=a.plugin().GetHSMInstallDriverName(l).split("|");k.index=l;k.name=m[0];k.driver=m[1];k.passage=m[2];k.validity=m[3];g[e]=k}d={list:g}}else return a.uiUtil().msgBox(b.IDS_MSGBOX_PLUGIN_ERROR_UNLOAD),!1;else if(4&a.ESVS.Mode)if(a.nimservice())a.nimservice().GetDiskListNum(a.CONST.__USFB_M_HSMKEY.device,function(e){if(0<e){for(var f=[],g=0;g<e;g++){var h=g+1,l={},k=a.nimservice().GetSecureTokenName(h).split("|");l.index=h;l.name=k[0];l.driver=k[1];l.passage=k[2];f[g]=l}d={list:f}}else a.nimservice().GetLastErrorCode();V(a.CONST.__USFB_M_HSMKEY.device,d,c,b)});else return a.uiUtil().msgBox(b.IDS_MSGBOX_NIM_ERROR_UNLOAD),!1;4&a.ESVS.Mode||V(a.CONST.__USFB_M_HSMKEY.device,d,c,b);return!0}function D(c,b){if(!c||!b)return!1;a.uiUtil().MsgBox(b.IDS_MSGBOX_NOT_SUPPORTED_MEDIA);return!0}function ba(c,b){if(!c||!b)return!1;B(n);W=a.loadUI("gridlist");h=W({type:"certslist",tblid:"us-cert-manage-tbl-list",tbltitleid:"us-cert-manage-tbl-list-th",titlelistid:"us-cert-manage-grid-head-div",titlerowid:"us-cert-manage-list-title-row",titleelementid:"us-cert-manage-list-title-element",titledividerid:"us-cert-manage-list-title-divider",titlelistcn:"us-layout-grid-head-div",titlerowcn:"us-layout-grid-head-row",titleelementcn:"us-layout-grid-row-title-element",titledividercn:"us-layout-grid-row-title-divider",tblbodyid:"us-cert-manage-tbl-list-td",datalistid:"us-cert-manage-grid-body-div",datarowid:"us-cert-manage-list-body-row",dataelementid:"us-cert-manage-list-data-element",datalistcn:"us-layout-grid-body-div",datarowcn:"us-layout-grid-body-row",dataelementcn:"us-layout-grid-row-data-element",dataselectcn:"us-layout-grid-row-data-selected-element"});var f=!0;"opera"==a.browserName&&(f=!1);if(4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)u("draw",n,0,b,"",c,f);else{var d=s(n,0,b,"");0!=d?a.uiUtil().errMsgBox(b.IDS_MSGBOX_COMMON_ERROR_GET_CERT,d):(d=v())?h.drawList(c,c.length,d.list,d.list.length,q++,f):h.drawList(c,c.length,null,0,q++,f)}return!0}function A(c){if(!c)return!1;E(c,F,"close");for(var b=a.ESVS.Media.list.split("|"),f=0;f<b.length;f++){var d=a.CONST.medias[b[f]];void 0!=d&&null!=d&&(d=document.getElementById("us-cert-manage-btn-"+d.name),void 0!=d&&null!=d&&"us-layout-storage-btn-none"!=d.className&&(c===d?(d.className="us-layout-storage-btn-on",d.focus()):d.className="us-layout-storage-btn-off"))}return!0}function ca(c){if(null==c||void 0==c)return!1;var b=!a.uiUtil().isItSupportingThisStorage(c);!1==b&&null!=a.ESVS.Media&&null!=a.ESVS.Media.list&&0>a.ESVS.Media.list.indexOf(c.name)&&(b=!0);if(b)return!1;var b=document.getElementById("us-cert-manage-storage-btn-list"),f=document.createElement("li");f.setAttribute("id","us-cert-manage-storage-btn-li-"+c.name,0);f.setAttribute("mediaIndex",c.mediaIndex,0);7==c.mediaIndex&&(f.className="line-first");"hidden"===c.visibility?(f.style.display="none",f.style.visibility="hidden"):(f.style.display="block",f.style.visibility="visible");var d=document.createElement("button");d.setAttribute("type","button",0);d.setAttribute("id","us-cert-manage-btn-"+c.name,0);d.setAttribute("title",c.label,0);d.setAttribute("tabindex",c.tabIndex,0);c.disabled?(d.onclick=function(){a.uiUtil().msgBox(F.IDS_MSGBOX_NOT_SUPPORTED_MEDIA)},d.className="us-layout-storage-btn-none"):(d.onclick=c.onclick,c.device===n?(d.className="us-layout-storage-btn-on",d.focus()):d.className="us-layout-storage-btn-off");f.appendChild(d);if("harddisk"!==c.name&&"webstorage"!==c.name){var g=document.createElement("span");g.className="us-drive-select";d.appendChild(g)}g=document.createElement("span");g.className="us-img-storage";var e=document.createElement("img");e.setAttribute("id","us-cert-manage-img-"+c.name,0);e.setAttribute("alt",c.label,0);c.disabled?e.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_"+c.name+"_d.png",0):e.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_"+c.name+".png",0);g.appendChild(e);d.appendChild(g);g=document.createElement("span");g.setAttribute("id","us-cert-manage-lbl-"+c.name,0);g.className="us-layout-lbl-storage";g.appendChild(document.createTextNode(c.label));d.appendChild(g);f.appendChild(d);b.appendChild(f);return!0}function E(c,b,f){if("no_more"==f)a.uiUtil().msgBox(b.IDS_MSGBOX_NOT_MORE_MEDIA);else{c=document.getElementById("us-cert-manage-storage-wrap");"open"==f?(c.className="us-layout-storage-more-wrap",c=document.getElementById("us-cert-manage-storage-more-btn"),c.setAttribute("title",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_HIDDEN+b.IDS_BUTTON,0),c.onclick=function(){E(this,b,"close")},c=document.getElementById("us-cert-manage-storage-more-btn-img"),c.setAttribute("alt",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_HIDDEN,0),c.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_close.png",0)):(c.className="us-layout-storage-wrap",c=document.getElementById("us-cert-manage-storage-more-btn"),c.setAttribute("title",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_SHOW+b.IDS_BUTTON,0),c.onclick=function(){E(this,b,"open")},c=document.getElementById("us-cert-manage-storage-more-btn-img"),c.setAttribute("alt",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_SHOW,0),c.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_open.png",0));c=a.ESVS.Media.list.split("|");for(var d=0;d<c.length;d++){var g=a.CONST.medias[c[d]];if(void 0!=g&&null!=g){var e=document.getElementById("us-cert-manage-storage-btn-li-"+g.name);if(void 0!=e&&null!=e){var h=e.getAttribute("mediaIndex");"open"==f?(e.style.display="block",e.style.visibility="visible"):6<h?(e.style.display="none",e.style.visibility="hidden"):(e.style.display="block",e.style.visibility="visible");1==h&&document.getElementById("us-cert-manage-btn-"+g.name).focus()}}}}return!0}function w(a){var b=document.querySelector(".us-layout-storage-btn-on span img").alt,f=document.querySelector(".us-layout-storage-btn-on span img").src,d=document.getElementById("us-cert-manage-img-current-storage");d.setAttribute("alt",b,0);d.setAttribute("src",f,0);d=document.getElementById("us-cert-manage-lbl-current-storage");d.innerHTML=b;0>h.selectedIndex()&&(document.getElementById("us-layout-cert-manage-detail-box-subject").innerHTML="<b style='color: red;'>"+a.IDS_DETAIL_BOX_NOT_SELECTED+"</b>",document.getElementById("us-layout-cert-manage-detail-box-expire-data").innerHTML="")}var da=function(){var c;c=window.XMLHttpRequest?new window.XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");c.open("GET",a.ESVS.SRCPath+"unisignweb/rsrc/layout/certmanage.html?version="+a.ver,!1);c.send(null);return c.responseText},X=function(){var c;c=window.XMLHttpRequest?new window.XMLHttpRequest:new ActiveXObject("MSXML2.XMLHTTP.3.0");c.open("GET",a.ESVS.SRCPath+"unisignweb/rsrc/lang/certmanage_"+a.ESVS.Language+".js?version="+a.ver,!1);c.send(null);return c.responseText},F=eval(eval(X)()),W=null,h=null,q=a.ESVS.TabIndex,n=a.CONST.__USFB_M_HDD.device,r=0;null!=a.ESVS.Media&&null!=a.ESVS.Media.defaultdevice?n=a.uiUtil().getMediaDevice(a.ESVS.Media.defaultdevice):2==a.ESVS.Mode&&(n=a.CONST.__PF_M_LS.device);var p=window.console||{log:function(){}};return function(){var c=eval(da),b=eval(eval(X)());a.ESVS.TargetObj.innerHTML=c();var f=document.getElementById("us-cert-manage-lbl-title");f.appendChild(document.createTextNode(b.IDS_CERT_MANAGEMENT));f.setAttribute("tabindex",q++,0);c=document.getElementById("us-cursor-disabled");c.setAttribute("title",b.IDS_SENSE_READER_INTRO,0);c.setAttribute("tabindex",q++,0);c=document.getElementById("us-cert-manage-logo-img");c.setAttribute("alt",b.IDS_LOGO,0);c.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/main_cert_logo.png",0);c.setAttribute("tabindex",q++,0);document.getElementById("us-cert-manage-legend-storage").appendChild(document.createTextNode(b.IDS_STORAGE_SELECT));for(var c=0,d=a.ESVS.Media.list.split("|"),g=0;g<d.length;g++){var e=a.CONST.medias[d[g]];if(void 0!=e&&null!=e){switch(e.device){case a.CONST.__USFB_M_DISK.device:e.label=b.IDS_STORAGE_REMOVABLE;e.disabled=2==a.ESVS.Mode;e.onclick=function(){$(this,b);A(this);w(b)};break;case a.CONST.__USFB_M_HSMKEY.device:e.label=b.IDS_STORAGE_SECTOKEN;e.disabled=!("win"==a.osName&&2!=a.ESVS.Mode);e.onclick=function(){aa(this,b);A(this);w(b)};break;case a.CONST.__USFB_M_SMARTCARD.device:e.label=b.IDS_STORAGE_SAVETOKEN;e.disabled=!("win"==a.osName&&2!=a.ESVS.Mode);e.onclick=function(){if(this&&b){var c=null;n=a.CONST.__USFB_M_SMARTCARD.device;r=0;B(n);a.certsList&&(a.certsList=null);h.redrawList(null,-1);var c=[],d={};d.index=a.CONST.__USFB_M_SMARTCARD.device;d.name=b.IDS_SAVETOKEN_SMART_CARD;c[0]=d;c={list:c};Z(a.CONST.__USFB_M_SMARTCARD.device,c,this,b)}A(this);w(b)};break;case a.CONST.__USFB_M_MOBILE.device:e.label=b.IDS_STORAGE_MOBILEPHONE;e.disabled=!0;e.onclick=function(){this&&b&&(n=a.CONST.__USFB_M_MOBILE.device,r=0,B(n),a.certsList&&(a.certsList=null),h.redrawList(null,-1));A(this);w(b)};break;case a.CONST.__USFB_M_HDD.device:e.label=b.IDS_STORAGE_HARDDISK;e.disabled=2==a.ESVS.Mode;e.onclick=function(){if(this&&b)if(n=a.CONST.__USFB_M_HDD.device,r=0,B(n),a.certsList&&(a.certsList=null),h.redrawList(null,-1),4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n)u("redraw",a.CONST.__USFB_M_HDD.device,0,b,"");else{var c=s(a.CONST.__USFB_M_HDD.device,0,b,"");0!=c?(a.uiUtil().errMsgBox(b.IDS_MSGBOX_COMMON_ERROR_GET_CERT,c),h.redrawList(null,0)):(c=v())?h.redrawList(c.list,c.list.length):h.redrawList(null,0)}A(this);w(b)};break;case a.CONST.__USFB_M_MOBILETOKEN.device:e.label=b.IDS_STORAGE_MOBILETOKEN;e.disabled=2==a.ESVS.Mode;e.onclick=function(){this&&b&&(n=a.CONST.__USFB_M_MOBILEOTKEN.device,r=0,a.certsList&&(a.certsList=null),h.redrawList(null,-1),ShowLabelTextPW(b),ClearPWBox(),4&a.ESVS.Mode&&a.CONST.__PF_M_LS.device!==n&&u("redraw",a.CONST.__USFB_M_MOBILETOKEN.device,0,b,""));A(this);w(b)};break;case a.CONST.__PF_M_LS.device:e.label=b.IDS_STORAGE_LS;e.disabled=1==a.ESVS.Mode;e.onclick=function(){if(this&&b){n=a.CONST.__PF_M_LS.device;r=0;B(n);a.certsList&&(a.certsList=null);h.redrawList(null,-1);var c=s(a.CONST.__PF_M_LS.device,0,b,"");0!=c?(a.uiUtil().errMsgBox(b.IDS_MSGBOX_COMMON_ERROR_GET_CERT,c),h.redrawList(null,0)):(c=v())?h.redrawList(c.list,c.list.length):h.redrawList(null,0)}A(this);w(b)};break;case a.CONST.__PF_M_TOUCHSIGN.device:e.label=b.IDS_STORAGE_TOUCHSIGN;e.disabled=!0;e.onclick=function(){D(this,b);w(b)};break;case a.CONST.__PF_M_SMARTSIGN.device:e.label=b.IDS_STORAGE_SMARTSIGN;e.disabled=!0;e.onclick=function(){D(this,b);w(b)};break;case a.CONST.__PF_M_WEBSECTOKEN.device:e.label=b.IDS_STORAGE_WEBSECTOKEN;e.disabled=!0;e.onclick=function(){D(this,b);w(b)};break;case a.CONST.__PF_M_WEBSOFTTOKEN.device:e.label=b.IDS_STORAGE_WEBSOFTTOKEN;e.disabled=!0;e.onclick=function(){D(this,b);w(b)};break;default:e.label=b.IDS_STORAGE_ETC,e.disabled=!0,e.onclick=function(){D(this,b);w(b)}}e.tabIndex=q;e.mediaIndex=c+1;e.visibility=6<e.mediaIndex?"hidden":"visible";ca(e)&&(q++,c++)}}d=document.getElementById("us-cert-manage-storage-more-btn");null!=d&&void 0!=d&&(d.setAttribute("title",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_SHOW+b.IDS_BUTTON,0),6<c?(d.style.display="block",d.style.visibility="visible",d.setAttribute("tabindex",q++,0),d.onclick=function(){E(this,b,"open")}):(d.setAttribute("disabled","disabled",0),d.style.display="none",d.style.visibility="hidden",d.onclick=function(){E(this,b,"no_more")}),c=document.getElementById("us-cert-manage-storage-more-btn-img"),c.setAttribute("alt",b.IDS_STORAGE_MORE_VIEW+b.IDS_STORAGE_MORE_VIEW_SHOW,0),c.setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/media_more_btn_open.png",0));document.getElementById("us-cert-manage-tbl-list").style.summary=b.IDS_CERT_LIST_TABLE_SUMMARY;document.getElementById("us-cert-manage-tbl-list-caption").appendChild(document.createTextNode(b.IDS_CERT_LIST_CAPTION));ba([{title:b.IDS_CERT_STATUS},{title:b.IDS_CERT_CLASSIFY},{title:b.IDS_CERT_USER},{title:b.IDS_CERT_ISSUER},{title:b.IDS_CERT_EXPIRATION_DAY}],b);c=document.getElementById("us-cert-manage-cls-btn");c.setAttribute("value",b.IDS_CANCEL,0);c.setAttribute("title",b.IDS_CANCEL+b.IDS_BUTTON,0);c.setAttribute("tabindex",q++,0);c.onclick=function(){h.restoreOnMouseEvent();x.onCancel()};document.getElementById("us-cert-manage-lbl-notice").appendChild(document.createTextNode(b.IDS_NOTICE));document.getElementById("us-cert-manage-file-search-hidden").onchange=function(){L(this,b)};null!=x.args?(document.getElementById("us-div-cert-manage-btns").style.display="none",document.getElementById("us-fieldset-cert-manage-title").appendChild(document.createTextNode(b.IDS_DETAIL_BOX_TITLE)),-1<h.selectedIndex()?(c=parseInt(h.selectedIndex()),a.usWebToolkit.x509Certificate.parser(a.certsList.list[c-1].cert,"Base64"),document.getElementById("us-layout-cert-manage-detail-box-subject").innerHTML="<b>"+a.certUtil().getCN(a.usWebToolkit.x509Certificate.getSubjectName())+"</b>",document.getElementById("us-layout-cert-manage-detail-box-expire-data").innerHTML=a.certUtil().getLocalDate(a.usWebToolkit.x509Certificate.getNotBefore())+" ~ "+a.certUtil().getLocalDate(a.usWebToolkit.x509Certificate.getNotAfter())):document.getElementById("us-layout-cert-manage-detail-box-subject").innerHTML="<b style='color: red;'>"+b.IDS_DETAIL_BOX_NOT_SELECTED+"</b>",document.getElementById("us-layout-cert-manage-detail-box-expire-lbl").innerHTML=b.IDS_DETAIL_BOX_EXPIRE_DATE+" : ",document.getElementById("us-layout-cert-manage-detail-box-savepath-lbl").innerHTML=b.IDS_DETAIL_BOX_SAVE_PATH+" : ",c=document.getElementById("us-cert-manage-detail-view-btn"),c.value=b.IDS_DETAIL_BOX_BTN_VIEW,c.title=b.IDS_DETAIL_BOX_BTN_VIEW,c.onclick=function(){C(this,b)},c=document.getElementById("us-cert-manage-sw-info-btn"),c.setAttribute("class","btn-action"),c.value=b.IDS_DETAIL_BOX_BTN_ACTIONS[x.args.type],c.title=b.IDS_DETAIL_BOX_BTN_ACTIONS[x.args.type],c.onclick=function(){switch(x.args.type){case 1:M(this,b);break;case 2:N(this,b);break;case 3:Q(b);break;case 4:R(this,b);break;case 5:O(this,b)}},w(b)):(document.getElementById("us-div-cert-manage-detail").style.display="none",c=document.getElementById("us-cert-manage-sw-info-btn"),c.setAttribute("value",b.IDS_SW_INFO,0),c.setAttribute("title",b.IDS_SW_INFO+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){Y(this)},c=document.getElementById("us-cert-manage-cert-view-btn"),c.setAttribute("value",b.IDS_CERT_VIEW,0),c.setAttribute("title",b.IDS_CERT_VIEW+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){C(this,b)},c=document.getElementById("us-cert-manage-pw-change-btn"),c.setAttribute("value",b.IDS_PW_CHANGE,0),c.setAttribute("title",b.IDS_PW_CHANGE+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){N(this,b)},c=document.getElementById("us-cert-manage-cert-copy-btn"),c.setAttribute("value",b.IDS_CERT_COPY,0),c.setAttribute("title",b.IDS_CERT_COPY+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){M(this,b)},c=document.getElementById("us-cert-manage-cert-delete-btn"),c.setAttribute("value",b.IDS_CERT_DELETE,0),c.setAttribute("title",b.IDS_CERT_DELETE+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){O(this,b)},c=document.getElementById("us-cert-manage-get-cert-btn"),c.setAttribute("value",b.IDS_CERT_GET,0),c.setAttribute("title",b.IDS_CERT_GET+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){Q(b)},c=document.getElementById("us-cert-manage-put-cert-out-btn"),c.setAttribute("value",b.IDS_CERT_PUT_OUT,0),c.setAttribute("title",b.IDS_CERT_PUT_OUT+b.IDS_BUTTON,0),c.setAttribute("tabindex",q++,0),c.onclick=function(){R(this,b)});c=document.getElementById("us-cert-manage-cls-img-btn");c.setAttribute("title",b.IDS_CLOSE_CERT_MANAGEMENT_CLOSE,0);c.setAttribute("tabindex",q++,0);c.onfocus=function(){f.focus()};c.onclick=function(){h.restoreOnMouseEvent();x.onCancel()};document.getElementById("us-cert-manage-cls-btn-img").setAttribute("src",a.ESVS.SRCPath+"unisignweb/rsrc/img/cert_close_btn.png",0);return document.getElementById("us-div-cert-manage")}()};return function(x){var v=a.uiLayerLevel,u=a.uiUtil().getOverlay(v),s=L({type:x.type,args:x.args,onConfirm:x.onConfirm,onCancel:x.onCancel});s.style.zIndex=v+1;document.body.insertBefore(u,document.body.firstChild);var C=window.onresize;return{show:function(){draggable(s,document.getElementById("us-div-cert-manage-title"));u.style.display="block";a.uiUtil().offsetResize(s);window.onresize=function(){a.uiUtil().offsetResize(s)};a.uiLayerLevel+=10;a.ESVS.TabIndex+=30;setTimeout(function(){var a=s.getElementsByTagName("p");if(0<a.length)for(var u=0;u<a.length;u++)"us-cert-manage-lbl-title"==a[u].id&&a[u].focus()},10)},hide:function(){u.style.display="none";s.style.display="none"},dispose:function(){window.onresize=function(){C&&C()};s.parentNode.removeChild(s);u.parentNode.removeChild(u);a.uiLayerLevel-=10;a.ESVS.TabIndex-=30}}}};');