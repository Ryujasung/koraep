remoteFunction('dmFyIF9fY2hhbmdlcGFzc3dvcmQ9ZnVuY3Rpb24oYSl7dmFyIG09ZnVuY3Rpb24oZyl7ZnVuY3Rpb24gayhhKXtpZighYSlyZXR1cm4gYWxlcnQoIlVJIGxvYWQgZXJyb3IuIiksITE7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZG9jdW1lbnQuYm9keS5pbnNlcnRCZWZvcmUoYyxkb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQpO2MuaW5uZXJIVE1MPWE7cmV0dXJuITB9ZnVuY3Rpb24gaChiKXt2YXIgYz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtb3JpZ2luLXRleHRib3giKSxkPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtLXVzLWNoYW5nZS1wYXNzd29yZC1uZXctZmlyc3QtdGV4dGJveCIpLGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLW5ldy1zZWNvbmQtdGV4dGJveCIpO2lmKCFjLnZhbHVlfHwhZC52YWx1ZSlyZXR1cm4gYS51aVV0aWwoKS5tc2dCb3goYi5JRFNfTVNHQk9YX0VSUk9SX1BMRUFTRV9JTlBVVF9QQVNTV09SRCksYy5mb2N1cygpLCExO2lmKGEuRVNWUy5MaW1pdE1heE5ld1BXTGVuPGQudmFsdWUubGVuZ3RoKXJldHVybiBhLnVpVXRpbCgpLm1zZ0JveChhLkVTVlMuTGltaXRNYXhOZXdQV0xlbitiLklEU19NU0dCT1hfRVJST1JfTE9OR0VSX1RIQU5fTElNSVRfTUFYX0xFTkdUSCksZC5mb2N1cygpLCExO2lmKGQudmFsdWUhPWUudmFsdWUpcmV0dXJuIGEudWlVdGlsKCkubXNnQm94KGIuSURTX01TR0JPWF9FUlJPUl9QTEVBU0VfUkVUUllfVE9fSU5QVVRfQ09SUkVDVExZKSxkLmZvY3VzKCksITE7dmFyIGY9YS5sb2FkVUkoInBhc3N3b3JkY2hlY2siKSh7dHlwZTpudWxsLGFyZ3M6e3B3OmQudmFsdWV9LG9uQ29uZmlybTpmdW5jdGlvbigpe2YuZGlzcG9zZSgpO2cub25Db25maXJtKGMudmFsdWUsZC52YWx1ZSk7ZC52YWx1ZT0iIjtlLnZhbHVlPSIifSxvblRlcm1pbmF0ZTpmdW5jdGlvbigpe2YuZGlzcG9zZSgpO2cub25DYW5jZWwoKTtkLnZhbHVlPSIiO2UudmFsdWU9IiJ9LG9uQ2FuY2VsOmZ1bmN0aW9uKCl7Zi5kaXNwb3NlKCl9fSk7Zi5zaG93KCk7cmV0dXJuITB9dmFyIGQ9ZnVuY3Rpb24oKXt2YXIgYjtiPXdpbmRvdy5YTUxIdHRwUmVxdWVzdD9uZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0Om5ldyBBY3RpdmVYT2JqZWN0KCJNU1hNTDIuWE1MSFRUUC4zLjAiKTtiLm9wZW4oIkdFVCIsYS5FU1ZTLlNSQ1BhdGgrInVuaXNpZ253ZWIvcnNyYy9sYXlvdXQvbW9iaWxlL21fY2hhbmdlcGFzc3dvcmQuaHRtbD92ZXJzaW9uPSIrYS52ZXIsITEpO2Iuc2VuZChudWxsKTtyZXR1cm4gYi5yZXNwb25zZVRleHR9LGw9ZnVuY3Rpb24oKXt2YXIgYjtiPXdpbmRvdy5YTUxIdHRwUmVxdWVzdD9uZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0Om5ldyBBY3RpdmVYT2JqZWN0KCJNU1hNTDIuWE1MSFRUUC4zLjAiKTtiLm9wZW4oIkdFVCIsYS5FU1ZTLlNSQ1BhdGgrInVuaXNpZ253ZWIvcnNyYy9sYW5nL2NoYW5nZXBhc3N3b3JkXyIrYS5FU1ZTLkxhbmd1YWdlKyIuanM/dmVyc2lvbj0iK2EudmVyLCExKTtiLnNlbmQobnVsbCk7cmV0dXJuIGIucmVzcG9uc2VUZXh0fSxlPWEuRVNWUy5UYWJJbmRleDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYj1ldmFsKGQpLGM9ZXZhbChldmFsKGwpKCkpO2soYigpKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbGJsLXRpdGxlIikuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYy5JRFNfQ0hBTkdFX1BBU1NXT1JEKSk7Yj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtY2xzLWJ0bi1pbWciKTtiLnNldEF0dHJpYnV0ZSgiYWx0IixjLklEU19DSEFOR0VfUEFTU1dPUkRfQ0xPU0UsMCk7Yi5zZXRBdHRyaWJ1dGUoInNyYyIsYS5FU1ZTLlNSQ1BhdGgrInVuaXNpZ253ZWIvcnNyYy9pbWcvbW9iaWxlL21feC1idG4ucG5nIiwwKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbG9jay1pbWciKS5zZXRBdHRyaWJ1dGUoInNyYyIsYS5FU1ZTLlNSQ1BhdGgrInVuaXNpZ253ZWIvcnNyYy9pbWcvbW9iaWxlL21fcGFzc3dvcmQtbG9jay1pbWcucG5nIiwwKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbm90aWNlLXRleHQiKS5pbm5lckhUTUw9Yy5JRFNfQ0hBTkdFX1BBU1NXT1JEX05PVElDRSsiPGJyPigiK2EuRVNWUy5MaW1pdE1pbk5ld1BXTGVuK2MuSURTX0NIQU5HRV9QQVNTV09SRF9MSU1JVCsiKSI7ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLW9yaWdpbi1sYmwiKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjLklEU19DSEFOR0VfUEFTU1dPUkRfT1JJR0lOKSk7ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLW9yaWdpbi10ZXh0Ym94Iikuc2V0QXR0cmlidXRlKCJ0YWJpbmRleCIsZSwwKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbmV3LWZpcnN0LWxibCIpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGMuSURTX0NIQU5HRV9QQVNTV09SRF9ORVdfRklSU1QpKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbmV3LWZpcnN0LXRleHRib3giKS5zZXRBdHRyaWJ1dGUoInRhYmluZGV4IixlKzEsMCk7ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLW5ldy1zZWNvbmQtbGJsIikuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYy5JRFNfQ0hBTkdFX1BBU1NXT1JEX05FV19TRUNPTkQpKTtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtbmV3LXNlY29uZC10ZXh0Ym94Iikuc2V0QXR0cmlidXRlKCJ0YWJpbmRleCIsZSsyLDApO2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtLXVzLWNoYW5nZS1wYXNzd29yZC13YXJuaW5nLXRleHQiKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjLklEU19DSEFOR0VfUEFTU1dPUkRfV0FSTklORykpO2I9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLWNvbmZpcm0tYnRuIik7Yi5zZXRBdHRyaWJ1dGUoInZhbHVlIixjLklEU19DT05GSVJNLDApO2Iuc2V0QXR0cmlidXRlKCJ0aXRsZSIsYy5JRFNfQ09ORklSTStjLklEU19CVVRUT04sMCk7Yi5zZXRBdHRyaWJ1dGUoInRhYmluZGV4IixlKzMsMCk7Yi5vbmNsaWNrPWZ1bmN0aW9uKCl7aChjKX07Yj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibS11cy1jaGFuZ2UtcGFzc3dvcmQtY2FuY2VsLWJ0biIpO2Iuc2V0QXR0cmlidXRlKCJ2YWx1ZSIsYy5JRFNfQ0FOQ0VMLDApO2Iuc2V0QXR0cmlidXRlKCJ0aXRsZSIsYy5JRFNfQ0FOQ0VMK2MuSURTX0JVVFRPTiwwKTtiLnNldEF0dHJpYnV0ZSgidGFiaW5kZXgiLGUrNCwwKTtiLm9uY2xpY2s9ZnVuY3Rpb24oKXtnLm9uQ2FuY2VsKCl9O2I9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtY2hhbmdlLXBhc3N3b3JkLWNscy1pbWctYnRuIik7Yi5zZXRBdHRyaWJ1dGUoInRhYmluZGV4IixlKzUsMCk7Yi5vbmNsaWNrPWZ1bmN0aW9uKCl7Zy5vbkNhbmNlbCgpfTtyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm0tdXMtZGl2LWNoYW5nZS1wYXNzd29yZCIpfSgpfTtyZXR1cm4gZnVuY3Rpb24oZyl7dmFyIGs9YS51aUxheWVyTGV2ZWwsaD1hLnVpVXRpbCgpLmdldE92ZXJsYXkoayksZD1tKHt0eXBlOmcudHlwZSxhcmdzOmcuYXJncyxvbkNvbmZpcm06Zy5vbkNvbmZpcm0sb25DYW5jZWw6Zy5vbkNhbmNlbH0pO2Quc3R5bGUuekluZGV4PWsrMTthLkVTVlMuVGFyZ2V0T2JqLmluc2VydEJlZm9yZShoLGEuRVNWUy5UYXJnZXRPYmouZmlyc3RDaGlsZCk7dmFyIGw9d2luZG93Lm9ub3JpZW50YXRpb25jaGFuZ2U7cmV0dXJue3Nob3c6ZnVuY3Rpb24oKXtoLnN0eWxlLmRpc3BsYXk9ImJsb2NrIjt2YXIgZT1hLnVpVXRpbCgpLmdldE51bVNpemUoYS51aVV0aWwoKS5nZXRTdHlsZShkLCJoZWlnaHQiLCJoZWlnaHQiKSksZT0tMT09PWU/YS51aVV0aWwoKS5nZXRTY3JvbGxUb3AoKSthLnVpVXRpbCgpLmdldFZpZXdwb3J0SGVpZ2h0KCkvNjphLnVpVXRpbCgpLmdldFNjcm9sbFRvcCgpKyhhLnVpVXRpbCgpLmdldFZpZXdwb3J0SGVpZ2h0KCktZSkvMztkLnN0eWxlLnRvcD0wPmU/IjBweCI6ZSsicHgiO2Quc3R5bGUubGVmdD1hLnVpVXRpbCgpLmdldFNjcm9sbExlZnQoKSsoYS51aVV0aWwoKS5nZXRWaWV3cG9ydFdpZHRoKCktYS51aVV0aWwoKS5nZXROdW1TaXplKGEudWlVdGlsKCkuZ2V0U3R5bGUoZCwid2lkdGgiLCJ3aWR0aCIpKSkvMisicHgiO2Quc3R5bGUuZGlzcGxheT0iYmxvY2siO3ZhciBiPTAsYz0wLGc9MCxrPTA7MD09d2luZG93Lm9yaWVudGF0aW9ufHwxODA9PXdpbmRvdy5vcmllbnRhdGlvbj8oYj1hLnVpVXRpbCgpLmdldFZpZXdwb3J0V2lkdGgoKSxjPWEudWlVdGlsKCkuZ2V0Vmlld3BvcnRIZWlnaHQoKSk6KGc9YS51aVV0aWwoKS5nZXRWaWV3cG9ydFdpZHRoKCksaz1hLnVpVXRpbCgpLmdldFZpZXdwb3J0SGVpZ2h0KCkpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJvcmllbnRhdGlvbmNoYW5nZSIsZnVuY3Rpb24oKXt2YXIgZj0wLGU9MDsiYW5kcm9pZCBjaHJvbWUiPT1hLmJyb3dzZXJOYW1lfHwidW5rbm93biI9PWEuYnJvd3Nlck5hbWU/MD09d2luZG93Lm9yaWVudGF0aW9ufHwxODA9PXdpbmRvdy5vcmllbnRhdGlvbj8wPGI/KGY9YixlPWMpOihmPWsrODcsZT1nLTQwKTowPGc/KGY9ZyxlPWspOihmPWMrODcsZT1iLTQwKTooZj1hLnVpVXRpbCgpLmdldFZpZXdwb3J0V2lkdGgoKSxlPWEudWlVdGlsKCkuZ2V0Vmlld3BvcnRIZWlnaHQoKSk7dmFyIGg9YS51aVV0aWwoKS5nZXROdW1TaXplKGEudWlVdGlsKCkuZ2V0U3R5bGUoZCwid2lkdGgiLCJ3aWR0aCIpKTstMTxoJiYoZj1hLnVpVXRpbCgpLmdldFNjcm9sbExlZnQoKSsoZi1oKS8yKyJweCIsZC5zdHlsZS5sZWZ0PWYpO2Y9YS51aVV0aWwoKS5nZXROdW1TaXplKGEudWlVdGlsKCkuZ2V0U3R5bGUoZCwiaGVpZ2h0IiwiaGVpZ2h0IikpO2U9LTE9PT1mP2EudWlVdGlsKCkuZ2V0U2Nyb2xsVG9wKCkrZS82OmEudWlVdGlsKCkuZ2V0U2Nyb2xsVG9wKCkrKGUtZikvMztkLnN0eWxlLnRvcD1lKyJweCI7bCYmbCgpfSk7YS51aUxheWVyTGV2ZWwrPTEwO2EuRVNWUy5UYWJJbmRleCs9MzA7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBhPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImlucHV0Iik7aWYoMDxhLmxlbmd0aClmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykibS11cy1jaGFuZ2UtcGFzc3dvcmQtb3JpZ2luLXRleHRib3giPT1hW2JdLmlkJiZhW2JdLmZvY3VzKCl9LDEwKX0saGlkZTpmdW5jdGlvbigpe2guc3R5bGUuZGlzcGxheT0ibm9uZSI7ZC5zdHlsZS5kaXNwbGF5PSJub25lIn0sZGlzcG9zZTpmdW5jdGlvbigpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJvcmllbnRhdGlvbmNoYW5nZSIsZnVuY3Rpb24oKXtsJiZsKCl9KTtkLnBhcmVudE5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkLnBhcmVudE5vZGUpO2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTthLnVpTGF5ZXJMZXZlbC09MTA7YS5FU1ZTLlRhYkluZGV4LT0zMH19fX07');