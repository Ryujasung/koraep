remoteFunction('KGZ1bmN0aW9uKCl7ZnVuY3Rpb24geChoKXtmdW5jdGlvbiBzKGEsZSxkLGgpe2Zvcih2YXIgZz1bXSxiPTA7YjxhLmxlbmd0aDtiKyspZm9yKHZhciBrPTA7azxhW2JdLnNhZmVCYWdzLmxlbmd0aDtrKyspe3ZhciBjPWFbYl0uc2FmZUJhZ3Nba107aWYodm9pZCAwPT09aHx8Yy50eXBlPT09aCludWxsPT09ZT9nLnB1c2goYyk6dm9pZCAwIT09Yy5hdHRyaWJ1dGVzW2VdJiYwPD1jLmF0dHJpYnV0ZXNbZV0uaW5kZXhPZihkKSYmZy5wdXNoKGMpfXJldHVybiBnfWZ1bmN0aW9uIHEoZixlLGQsbil7ZT1hLmZyb21EZXIoZSk7aWYoZS50YWdDbGFzcyE9PWEuQ2xhc3MuVU5JVkVSU0FMfHxlLnR5cGUhPT1hLlR5cGUuU0VRVUVOQ0V8fCEwIT09ZS5jb25zdHJ1Y3RlZCl0aHJvd3tjb2RlOiIxMTUwMTEiLG1lc3NhZ2U6bVsiMTE1MDExIl0rIihQS0NTIzEyIEF1dGhlbnRpY2F0ZWRTYWZlIGV4cGVjdGVkIHRvIGJlIGEgU0VRVUVOQ0UgT0YgQ29udGVudEluZm8pIn07Zm9yKHZhciBnPTA7ZzxlLnZhbHVlLmxlbmd0aDtnKyspe3ZhciBiPXt9LGs9W107aWYoIWEudmFsaWRhdGUoZS52YWx1ZVtnXSxELGIsaykpdGhyb3d7Y29kZToiMTE1MDEyIixtZXNzYWdlOm1bIjExNTAxMiJdKyJDYW5ub3QgcmVhZCBDb250ZW50SW5mby4iLGVycm9yczprfTt2YXIgaz17ZW5jcnlwdGVkOiExfSxjPW51bGwsYz1iLmNvbnRlbnQudmFsdWVbMF07c3dpdGNoKGEuZGVyVG9PaWQoYi5jb250ZW50VHlwZSkpe2Nhc2UgbC5vaWRzLmRhdGE6aWYoYy50YWdDbGFzcyE9PWEuQ2xhc3MuVU5JVkVSU0FMfHxjLnR5cGUhPT1hLlR5cGUuT0NURVRTVFJJTkcpdGhyb3d7Y29kZToiMTE1MDEzIixtZXNzYWdlOm1bIjExNTAxMyJdfTtjPWMudmFsdWU7YnJlYWs7Y2FzZSBsLm9pZHMuZW5jcnlwdGVkRGF0YTppZih2b2lkIDA9PT1kKXRocm93e2NvZGU6IjExNTAxNCIsbWVzc2FnZTptWyIxMTUwMTQiXX07dmFyIHI9ZCxiPXt9LHA9W107aWYoIWEudmFsaWRhdGUoYyxoLnBrY3M3LmFzbjEuZW5jcnlwdGVkRGF0YVZhbGlkYXRvcixiLHApKXRocm93e2NvZGU6IjExNTAxNiIsbWVzc2FnZTptWyIxMTUwMTYiXSsiQ2Fubm90IHJlYWQgRW5jcnlwdGVkQ29udGVudEluZm8uIixlcnJvcnM6cH07Yz1hLmRlclRvT2lkKGIuY29udGVudFR5cGUpO2lmKGMhPT1sLm9pZHMuZGF0YSl0aHJvd3tjb2RlOiIxMTUwMTciLG1lc3NhZ2U6bVsiMTE1MDE3Il0rIihQS0NTIzEyIEVuY3J5cHRlZENvbnRlbnRJbmZvIENvbnRlbnRUeXBlIGlzIG5vdCBEYXRhLiBvaWQgOiAiK2MrIikifTtjPWEuZGVyVG9PaWQoYi5lbmNBbGdvcml0aG0pO2M9aC5wa2NzNS5wYmUuZ2V0Q2lwaGVyKGMsYi5lbmNQYXJhbWV0ZXIscik7Yj1oLnV0aWwuY3JlYXRlQnVmZmVyKGIuZW5jQ29udGVudCk7Yy51cGRhdGUoYik7aWYoIWMuZmluaXNoKCkpdGhyb3d7Y29kZToiMTE1MDE4IixtZXNzYWdlOm1bIjExNTAxOCJdKyJGYWlsZWQgdG8gZGVjcnlwdCBQS0NTIzEyIFNhZmVDb250ZW50cy4ifTtjPWMub3V0cHV0LmdldEJ5dGVzKCk7ay5lbmNyeXB0ZWQ9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvd3tjb2RlOiIxMTUwMTUiLG1lc3NhZ2U6bVsiMTE1MDE1Il0rIihjb250ZW50VHlwZToiK2EuZGVyVG9PaWQoYi5jb250ZW50VHlwZSkrIikifTt9ay5zYWZlQmFncz1DKGMsbik7Zi5zYWZlQ29udGVudHMucHVzaChrKX19ZnVuY3Rpb24geihmLGUsZCl7dmFyIG49bC5vaWRzWyJwYmVXaXRoU0hBQW5kMy1LZXlUcmlwbGVERVMtQ0JDIl07ZT1oLnBrY3M1LnBiZS5zZXRDaXBoZXIobixkLGUpO2UudXBkYXRlKGEudG9EZXIoZikpO2lmKCFlLmZpbmlzaCgpKXRocm93e2NvZGU6IjExNTAxOSIsbWVzc2FnZTptWyIxMTUwMTkiXX07Zj1oLnV0aWwuY3JlYXRlQnVmZmVyKCk7Zi5wdXRJbnQxNihkLmNvdW50KTtkPWEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5kYXRhKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PSUQsITEsYS5vaWRUb0RlcihuKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PQ1RFVFNUUklORywhMSxkLnNhbHQpLGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5JTlRFR0VSLCExLGYuZ2V0Qnl0ZXMoKSldKV0pLGEuY3JlYXRlKGEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQywwLCExLGUub3V0cHV0LmdldEJ5dGVzKCkpXSk7cmV0dXJuIGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5lbmNyeXB0ZWREYXRhKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLkNPTlRFWFRfU1BFQ0lGSUMsMCwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuSU5URUdFUiwhMSxTdHJpbmcuZnJvbUNoYXJDb2RlKDApKSxkXSldKV0pfWZ1bmN0aW9uIEMoZixlKXtmPWEuZnJvbURlcihmKTtpZihmLnRhZ0NsYXNzIT09YS5DbGFzcy5VTklWRVJTQUx8fGYudHlwZSE9PWEuVHlwZS5TRVFVRU5DRXx8ITAhPT1mLmNvbnN0cnVjdGVkKXRocm93e2NvZGU6IjExNTAyMCIsbWVzc2FnZTptWyIxMTUwMjAiXSsiUEtDUyMxMiBTYWZlQ29udGVudHMgZXhwZWN0ZWQgdG8gYmUgYSBTRVFVRU5DRSBPRiBTYWZlQmFnLiJ9O2Zvcih2YXIgZD1bXSxoPTA7aDxmLnZhbHVlLmxlbmd0aDtoKyspe3ZhciBnPXt9LGI9W107aWYoIWEudmFsaWRhdGUoZi52YWx1ZVtoXSxGLGcsYikpdGhyb3d7Y29kZToiMTE1MDIxIixtZXNzYWdlOm1bIjExNTAyMSJdKyJDYW5ub3QgcmVhZCBTYWZlQmFnLiIsZXJyb3JzOmJ9O3ZhciBrPXt0eXBlOmEuZGVyVG9PaWQoZy5iYWdJZCksYXR0cmlidXRlczp0KGcuYmFnQXR0cmlidXRlcyl9O2QucHVzaChrKTt2YXIgYyxyLHA9Zy5iYWdWYWx1ZS52YWx1ZVswXTtzd2l0Y2goay50eXBlKXtjYXNlIGwub2lkcy5wa2NzOFNocm91ZGVkS2V5QmFnOmlmKHZvaWQgMD09PWUpe2sua2V5PXA7Y29udGludWV9cD12LmRlY3J5cHRQcml2YXRlS2V5SW5mbyhwLGUpO2lmKG51bGw9PT1wKXRocm93e2NvZGU6IjExNTAyMiIsbWVzc2FnZTptWyIxMTUwMjIiXSsiVW5hYmxlIHRvIGRlY3J5cHQgUEtDUyM4IFNocm91ZGVkS2V5QmFnLCB3cm9uZyBwYXNzd29yZD8ifTtjYXNlIGwub2lkcy5rZXlCYWc6ay5rZXk9bC5wcml2YXRlS2V5RnJvbUFzbjEocCk7ay5yYW5kPXYuZ2V0UHJpdmF0ZUtleUF0dHJpYnV0ZXNSYW5kb20ocCk7Y29udGludWU7Y2FzZSBsLm9pZHMuY2VydEJhZzpjPUc7cj1mdW5jdGlvbigpe2lmKGEuZGVyVG9PaWQoZy5jZXJ0SWQpIT09bC5vaWRzLng1MDlDZXJ0aWZpY2F0ZSl0aHJvd3tjb2RlOiIxMTUwMjMiLG1lc3NhZ2U6bVsiMTE1MDIzIl0rIihVbnN1cHBvcnRlZCBjZXJ0aWZpY2F0ZSB0eXBlLCBvbmx5IFguNTA5IHN1cHBvcnRlZC4gb2lkOiIrYS5kZXJUb09pZChnLmNlcnRJZCkrIikifTtrLmNlcnQ9bC5jZXJ0aWZpY2F0ZUZyb21Bc24xKGEuZnJvbURlcihnLmNlcnQpLCEwKX07YnJlYWs7ZGVmYXVsdDp0aHJvd3tjb2RlOiIxMTUwMjQiLG1lc3NhZ2U6bVsiMTE1MDI0Il0rIihvaWQ6IitrLnR5cGUrIikifTt9aWYodm9pZCAwIT09YyYmIWEudmFsaWRhdGUocCxjLGcsYikpdGhyb3d7Y29kZToiMTE1MDI1IixtZXNzYWdlOm1bIjExNTAyNSJdK2MubmFtZSxlcnJvcnM6Yn07cigpfXJldHVybiBkfWZ1bmN0aW9uIHQoZil7dmFyIGU9e307aWYodm9pZCAwIT09Zilmb3IodmFyIGQ9MDtkPGYubGVuZ3RoO2QrKyl7dmFyIGg9e30sZz1bXTtpZighYS52YWxpZGF0ZShmW2RdLEgsaCxnKSl0aHJvd3tjb2RlOiIxMTUwMjYiLG1lc3NhZ2U6bVsiMTE1MDI2Il0rIkNhbm5vdCByZWFkIFBLQ1MjMTIgQmFnQXR0cmlidXRlLiB2YWxpZGF0b3I9Iit2YWxpZGF0b3IubmFtZSxlcnJvcnM6Z307Zz1hLmRlclRvT2lkKGgub2lkKTtpZih2b2lkIDAhPT1sLm9pZHNbZ10pe2VbbC5vaWRzW2ddXT1bXTtmb3IodmFyIGI9MDtiPGgudmFsdWVzLmxlbmd0aDtiKyspZVtsLm9pZHNbZ11dLnB1c2goaC52YWx1ZXNbYl0udmFsdWUpfX1yZXR1cm4gZX1mdW5jdGlvbiBBKCl7dmFyIGY9aC5yYW5kb20uZ2V0Qnl0ZXMoMjApO2lmKG51bGwhPT1mKXt2YXIgZj1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PSUQsITEsYS5vaWRUb0RlcihsLm9pZHMubG9jYWxLZXlJZCkuZ2V0Qnl0ZXMoKSksYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFVCwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9DVEVUU1RSSU5HLCExLGYpXSldKSxlPWEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVQsITAsW10pO2UudmFsdWUucHVzaChmKTtyZXR1cm4gZX10aHJvd3tjb2RlOiIxMTUwMjciLG1lc3NhZ2U6bVsiMTE1MDI3Il0sZXJyb3JzOmVycm9yc307fWZ1bmN0aW9uIHgoZixlLGQsbSl7cmV0dXJuIG51bGw9PT1lP2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5rZXlCYWcpLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQywwLCEwLFtmXSksZF0pOmEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5wa2NzOFNocm91ZGVkS2V5QmFnKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLkNPTlRFWFRfU1BFQ0lGSUMsMCwhMCxbaC5wa2NzOC5lbmNyeXB0UHJpdmF0ZUtleUluZm8oZixlLG0pXSksZF0pfWZ1bmN0aW9uIHkoZixlKXtyZXR1cm4gYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0lELCExLGEub2lkVG9EZXIobC5vaWRzLnBrY3M4U2hyb3VkZWRLZXlCYWcpLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQywwLCEwLFtmXSksZV0pfWZ1bmN0aW9uIEIoZixlKXsic3RyaW5nIj09PXR5cGVvZiBmJiYoZj1sLmNlcnRpZmljYXRlRnJvbVBlbShmKSk7dmFyIGQ9bC5jZXJ0aWZpY2F0ZVRvQXNuMShmKTtyZXR1cm4gYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0lELCExLGEub2lkVG9EZXIobC5vaWRzLmNlcnRCYWcpLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQywwLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PSUQsITEsYS5vaWRUb0RlcihsLm9pZHMueDUwOUNlcnRpZmljYXRlKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLkNPTlRFWFRfU1BFQ0lGSUMsMCwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9DVEVUU1RSSU5HLCExLGEudG9EZXIoZCkuZ2V0Qnl0ZXMoKSldKV0pXSksZV0pfXZhciBtPWguanN1c3Rvb2xraXRFcnJDb2RlPWguanN1c3Rvb2xraXRFcnJDb2RlfHx7fSxhPWguYXNuMSxsPWgucGtpPWgucGtpfHx7fSx2PWgucGtjczg9aC5wa2NzOHx8e30sdT1oLnBrY3MxMj1oLnBrY3MxMnx8e30sRD17bmFtZToiQ29udGVudEluZm8iLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFUVVFTkNFLGNvbnN0cnVjdGVkOiEwLHZhbHVlOlt7bmFtZToiQ29udGVudEluZm8uY29udGVudFR5cGUiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9JRCxjb25zdHJ1Y3RlZDohMSxjYXB0dXJlOiJjb250ZW50VHlwZSJ9LHtuYW1lOiJDb250ZW50SW5mby5jb250ZW50Iix0YWdDbGFzczphLkNsYXNzLkNPTlRFWFRfU1BFQ0lGSUMsY29uc3RydWN0ZWQ6ITAsY2FwdHVyZUFzbjE6ImNvbnRlbnQifV19LEU9e25hbWU6IlBGWCIsdGFnQ2xhc3M6YS5DbGFzcy5VTklWRVJTQUwsdHlwZTphLlR5cGUuU0VRVUVOQ0UsY29uc3RydWN0ZWQ6ITAsdmFsdWU6W3tuYW1lOiJQRlgudmVyc2lvbiIsdGFnQ2xhc3M6YS5DbGFzcy5VTklWRVJTQUwsdHlwZTphLlR5cGUuSU5URUdFUixjb25zdHJ1Y3RlZDohMSxjYXB0dXJlOiJ2ZXJzaW9uIn0sRCx7bmFtZToiUEZYLm1hY0RhdGEiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFUVVFTkNFLGNvbnN0cnVjdGVkOiEwLG9wdGlvbmFsOiEwLGNhcHR1cmVBc24xOiJtYWMiLHZhbHVlOlt7bmFtZToiUEZYLm1hY0RhdGEubWFjIix0YWdDbGFzczphLkNsYXNzLlVOSVZFUlNBTCx0eXBlOmEuVHlwZS5TRVFVRU5DRSxjb25zdHJ1Y3RlZDohMCx2YWx1ZTpbe25hbWU6IlBGWC5tYWNEYXRhLm1hYy5kaWdlc3RBbGdvcml0aG0iLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFUVVFTkNFLGNvbnN0cnVjdGVkOiEwLHZhbHVlOlt7bmFtZToiUEZYLm1hY0RhdGEubWFjLmRpZ2VzdEFsZ29yaXRobS5hbGdvcml0aG0iLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9JRCxjb25zdHJ1Y3RlZDohMSxjYXB0dXJlOiJtYWNBbGdvcml0aG0ifSx7bmFtZToiUEZYLm1hY0RhdGEubWFjLmRpZ2VzdEFsZ29yaXRobS5wYXJhbWV0ZXJzIix0YWdDbGFzczphLkNsYXNzLlVOSVZFUlNBTCxjYXB0dXJlQXNuMToibWFjQWxnb3JpdGhtUGFyYW1ldGVycyJ9XX0se25hbWU6IlBGWC5tYWNEYXRhLm1hYy5kaWdlc3QiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9DVEVUU1RSSU5HLGNvbnN0cnVjdGVkOiExLGNhcHR1cmU6Im1hY0RpZ2VzdCJ9XX0se25hbWU6IlBGWC5tYWNEYXRhLm1hY1NhbHQiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9DVEVUU1RSSU5HLGNvbnN0cnVjdGVkOiExLGNhcHR1cmU6Im1hY1NhbHQifSx7bmFtZToiUEZYLm1hY0RhdGEuaXRlcmF0aW9ucyIsdGFnQ2xhc3M6YS5DbGFzcy5VTklWRVJTQUwsdHlwZTphLlR5cGUuSU5URUdFUixjb25zdHJ1Y3RlZDohMSxvcHRpb25hbDohMCxjYXB0dXJlOiJtYWNJdGVyYXRpb25zIn1dfV19LEY9e25hbWU6IlNhZmVCYWciLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFUVVFTkNFLGNvbnN0cnVjdGVkOiEwLHZhbHVlOlt7bmFtZToiU2FmZUJhZy5iYWdJZCIsdGFnQ2xhc3M6YS5DbGFzcy5VTklWRVJTQUwsdHlwZTphLlR5cGUuT0lELGNvbnN0cnVjdGVkOiExLGNhcHR1cmU6ImJhZ0lkIn0se25hbWU6IlNhZmVCYWcuYmFnVmFsdWUiLHRhZ0NsYXNzOmEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQyxjb25zdHJ1Y3RlZDohMCxjYXB0dXJlQXNuMToiYmFnVmFsdWUifSx7bmFtZToiU2FmZUJhZy5iYWdBdHRyaWJ1dGVzIix0YWdDbGFzczphLkNsYXNzLlVOSVZFUlNBTCx0eXBlOmEuVHlwZS5TRVQsY29uc3RydWN0ZWQ6ITAsb3B0aW9uYWw6ITAsY2FwdHVyZToiYmFnQXR0cmlidXRlcyJ9XX0sSD17bmFtZToiQXR0cmlidXRlIix0YWdDbGFzczphLkNsYXNzLlVOSVZFUlNBTCx0eXBlOmEuVHlwZS5TRVFVRU5DRSxjb25zdHJ1Y3RlZDohMCx2YWx1ZTpbe25hbWU6IkF0dHJpYnV0ZS5hdHRySWQiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9JRCxjb25zdHJ1Y3RlZDohMSxjYXB0dXJlOiJvaWQifSx7bmFtZToiQXR0cmlidXRlLmF0dHJWYWx1ZXMiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFVCxjb25zdHJ1Y3RlZDohMCxjYXB0dXJlOiJ2YWx1ZXMifV19LEc9e25hbWU6IkNlcnRCYWciLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLlNFUVVFTkNFLGNvbnN0cnVjdGVkOiEwLHZhbHVlOlt7bmFtZToiQ2VydEJhZy5jZXJ0SWQiLHRhZ0NsYXNzOmEuQ2xhc3MuVU5JVkVSU0FMLHR5cGU6YS5UeXBlLk9JRCxjb25zdHJ1Y3RlZDohMSxjYXB0dXJlOiJjZXJ0SWQifSx7bmFtZToiQ2VydEJhZy5jZXJ0VmFsdWUiLHRhZ0NsYXNzOmEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQyxjb25zdHJ1Y3RlZDohMCx2YWx1ZTpbe25hbWU6IkNlcnRCYWcuY2VydFZhbHVlWzBdIix0YWdDbGFzczphLkNsYXNzLlVOSVZFUlNBTCx0eXBlOmEuQ2xhc3MuT0NURVRTVFJJTkcsY29uc3RydWN0ZWQ6ITEsY2FwdHVyZToiY2VydCJ9XX1dfTt1LmdldENlcnROS2V5RnJvbVBLQ1MxMj1mdW5jdGlvbihmLGUpe2lmKG51bGw9PWZ8fCJ1bmRlZmluZWQiPT10eXBlb2YgZil0aHJvd3tjb2RlOiIxMTUwMDEiLG1lc3NhZ2U6bVsiMTE1MDAxIl19O2lmKG51bGw9PWV8fCJ1bmRlZmluZWQiPT10eXBlb2YgZSl0aHJvd3tjb2RlOiIxMTUwMDIiLG1lc3NhZ2U6bVsiMTE1MDAyIl19O3ZhciBkPXt9LG49W107aWYoIWEudmFsaWRhdGUoZixFLGQsbikpdGhyb3d7Y29kZToiMTE1MDAzIixtZXNzYWdlOm1bIjExNTAwMyJdLGVycm9yczpufTt2YXIgZz17dmVyc2lvbjpkLnZlcnNpb24uY2hhckNvZGVBdCgwKSxzYWZlQ29udGVudHM6W10sZ2V0Q2VydEFuZEtleUZyb21QS0NTMTI6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXtzaWduOnt9fSxjPTA7YzxnLnNhZmVDb250ZW50c1swXS5zYWZlQmFncy5sZW5ndGg7YysrKXt2YXIgZD1nLnNhZmVDb250ZW50c1swXS5zYWZlQmFnc1tjXS5hdHRyaWJ1dGVzLmxvY2FsS2V5SWRbMF0sZT1zKGcuc2FmZUNvbnRlbnRzLCJsb2NhbEtleUlkIixkLGwub2lkcy5wa2NzOFNocm91ZGVkS2V5QmFnKTswPT1lLmxlbmd0aCYmKGU9cyhnLnNhZmVDb250ZW50cywibG9jYWxLZXlJZCIsZCxsLm9pZHMua2V5QmFnKSk7aWYoMj09ZS5sZW5ndGgpe3ZhciBmPXMoZy5zYWZlQ29udGVudHMsImxvY2FsS2V5SWQiLGQsbC5vaWRzLmNlcnRCYWcpO2Iuc2lnbi5jZXJ0PWcuc2FmZUNvbnRlbnRzWzFdLnNhZmVCYWdzWzBdLmNlcnQ7ZD12LnJzYVByaXZhdGVLZXlJbmZvKGwucHJpdmF0ZUtleVRvQXNuMShlWzBdLmtleSksZVswXS5yYW5kKTtiLnNpZ24ucHJpa2V5PXYuZW5jcnlwdFByaXZhdGVLZXlJbmZvKGQsYSx7YWxnb3JpdGhtOiJzZWVkIn0pO2Y9e307Zi5jZXJ0PWcuc2FmZUNvbnRlbnRzWzFdLnNhZmVCYWdzWzFdLmNlcnQ7ZD12LnJzYVByaXZhdGVLZXlJbmZvKGwucHJpdmF0ZUtleVRvQXNuMShlWzFdLmtleSksZVsxXS5yYW5kKTtmLnByaWtleT12LmVuY3J5cHRQcml2YXRlS2V5SW5mbyhkLGEse2FsZ29yaXRobToic2VlZCJ9KTtiLmttPWY7YnJlYWt9ZWxzZSBpZigxPT1lLmxlbmd0aClmPXMoZy5zYWZlQ29udGVudHMsImxvY2FsS2V5SWQiLGQsbC5vaWRzLmNlcnRCYWcpLGQ9di5yc2FQcml2YXRlS2V5SW5mbyhsLnByaXZhdGVLZXlUb0FzbjEoZVswXS5rZXkpLGVbMF0ucmFuZCksZD12LmVuY3J5cHRQcml2YXRlS2V5SW5mbyhkLGEse2FsZ29yaXRobToic2VlZCJ9KSxlPWZbMF0uY2VydCxlLmdldEV4dGVuc2lvbigia2V5VXNhZ2UiKS5rZXlFbmNpcGhlcm1lbnQ/KGY9e30sZi5jZXJ0PWUsZi5wcmlrZXk9ZCxiLmttPWYpOihiLnNpZ24uY2VydD1lLGIuc2lnbi5wcmlrZXk9ZCk7ZWxzZSB0aHJvd3tjb2RlOiIxMTUwMDQiLG1lc3NhZ2U6bVsiMTE1MDA0Il19O31yZXR1cm4gYn19O2lmKDMhPT1kLnZlcnNpb24uY2hhckNvZGVBdCgwKSl0aHJvd3tjb2RlOiIxMTUwMDUiLG1lc3NhZ2U6bVsiMTE1MDA1Il0rIih2ZXJzaW9uOiAiK2QudmVyc2lvbi5jaGFyQ29kZUF0KDApKyIpIn07aWYoYS5kZXJUb09pZChkLmNvbnRlbnRUeXBlKSE9PWwub2lkcy5kYXRhKXRocm93e2NvZGU6IjExNTAwNiIsbWVzc2FnZTptWyIxMTUwMDYiXSsiKG9pZCA6IithLmRlclRvT2lkKGQuY29udGVudFR5cGUpKyIpIn07bj1kLmNvbnRlbnQudmFsdWVbMF07aWYobi50YWdDbGFzcyE9PWEuQ2xhc3MuVU5JVkVSU0FMfHxuLnR5cGUhPT1hLlR5cGUuT0NURVRTVFJJTkcpdGhyb3d7Y29kZToiMTE1MDA3IixtZXNzYWdlOm1bIjExNTAwNyJdKyIoUEtDUyMxMiBhdXRoU2FmZSBjb250ZW50IGRhdGEgaXMgbm90IGFuIE9DVEVUIFNUUklORy4pIn07aWYoZC5tYWMpe3ZhciBiPW51bGwsaz0wLGM9YS5kZXJUb09pZChkLm1hY0FsZ29yaXRobSk7c3dpdGNoKGMpe2Nhc2UgbC5vaWRzLnNoYTE6Yj1oLm1kLnNoYTEuY3JlYXRlKCk7az0yMDticmVhaztjYXNlIGwub2lkcy5zaGEyNTY6Yj1oLm1kLnNoYTI1Ni5jcmVhdGUoKTtrPTMyO2JyZWFrO2Nhc2UgbC5vaWRzLm1kNTpiPWgubWQubWQ1LmNyZWF0ZSgpO2s9MTY7YnJlYWs7ZGVmYXVsdDp0aHJvd3tjb2RlOiIxMTUwMDgiLG1lc3NhZ2U6bVsiMTE1MDA4Il0rIihQS0NTIzEyIHVzZXMgdW5zdXBwb3J0ZWQgTUFDIGFsZ29yaXRobTogIitjKyIpIn07fWlmKG51bGw9PT1iKXRocm93e2NvZGU6IjExNTAwOSIsbWVzc2FnZTptWyIxMTUwMDkiXStjfTt2YXIgYz1uZXcgaC51dGlsLkJ5dGVCdWZmZXIoZC5tYWNTYWx0KSxyPSJtYWNJdGVyYXRpb25zImluIGQ/cGFyc2VJbnQoaC51dGlsLmJ5dGVzVG9IZXgoZC5tYWNJdGVyYXRpb25zKSwxNik6MSxrPXUuZ2VuZXJhdGVLZXkoZXx8IiIsYywzLHIsayxiKSxjPWguaG1hYy5jcmVhdGUoKTtjLnN0YXJ0KGIsayk7Yy51cGRhdGUobi52YWx1ZSk7aWYoYy5nZXRNYWMoKS50b0hleCgpIT09aC51dGlsLmJ5dGVzVG9IZXgoZC5tYWNEaWdlc3QpKXRocm93e2NvZGU6IjExNTAxMCIsbWVzc2FnZTptWyIxMTUwMTAiXX07fXEoZyxuLnZhbHVlLGUsZSk7cmV0dXJuIGd9O3UubWFrZVBLQ1MxMj1mdW5jdGlvbihmLGUsZCxuLGcsYil7aWYobnVsbD09Znx8InVuZGVmaW5lZCI9PXR5cGVvZiBmKXRocm93e2NvZGU6IjExNTAyOCIsbWVzc2FnZTptWyIxMTUwMjgiXX07aWYobnVsbD09ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBlKXRocm93e2NvZGU6IjExNTAyOSIsbWVzc2FnZTptWyIxMTUwMjkiXX07aWYobnVsbD09Z3x8InVuZGVmaW5lZCI9PXR5cGVvZiBnKXRocm93e2NvZGU6IjExNTAzMCIsbWVzc2FnZTptWyIxMTUwMzAiXX07Yj1ifHx7fTtiLnNhbHRTaXplPWIuc2FsdFNpemV8fDIwO2IuY291bnQ9Yi5jb3VudHx8MkUzO2IuZW5jQWxnb3JpdGhtPWIuZW5jQWxnb3JpdGhtfHwiM2RlcyI7Yi5hbGdvcml0aG09Yi5hbGdvcml0aG18fCIzZGVzIjtiLmdlbmVyYXRlTG9jYWxLZXlJZD1iLmdlbmVyYXRlTG9jYWxLZXlJZHx8ITA7Yi51c2VNYWM9Yi51c2VNYWN8fCEwOyJ1c2VNYWMiaW4gYnx8KGIudXNlTWFjPSEwKTsiZ2VuZXJhdGVMb2NhbEtleUlkImluIGJ8fChiLmdlbmVyYXRlTG9jYWxLZXlJZD0hMCk7dmFyIGs9W10sYz1BKCk7ay5wdXNoKGMpO251bGwhPT1kJiYidW5kZWZpbmVkIiE9dHlwZW9mIGQmJihjPUEoKSxrLnB1c2goYykpO2M9W107aWYobnVsbCE9PWUpe2U9aC5wa2NzOC5kZWNyeXB0UHJpdmF0ZUtleUluZm8oZSxnKTt2YXIgcj1udWxsLHA9YS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFtdKSxyPXgoZSxnLGtbMF0sYik7cC52YWx1ZS5wdXNoKHIpO251bGwhPT1uJiYidW5kZWZpbmVkIiE9dHlwZW9mIG4mJihuPWgucGtjczguZGVjcnlwdFByaXZhdGVLZXlJbmZvKG4sZykscj14KG4sZyxrWzFdLGIpLHAudmFsdWUucHVzaChyKSk7ZT1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PSUQsITEsYS5vaWRUb0RlcihsLm9pZHMuZGF0YSkuZ2V0Qnl0ZXMoKSksYS5jcmVhdGUoYS5DbGFzcy5DT05URVhUX1NQRUNJRklDLDAsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PQ1RFVFNUUklORywhMSxhLnRvRGVyKHApLmdldEJ5dGVzKCkpXSldKTtjLnB1c2goZSl9bnVsbCE9PWYmJihlPW51bGwsbj1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW10pLGU9QihmLGtbMF0pLG4udmFsdWUucHVzaChlKSxudWxsIT09ZCYmInVuZGVmaW5lZCIhPXR5cGVvZiBkJiYoZT1CKGQsa1sxXSksbi52YWx1ZS5wdXNoKGUpKSxmPXoobixnLGIpLGMucHVzaChmKSk7Zj1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsYyk7ZD12b2lkIDA7Yi51c2VNYWMmJihrPWgubWQuc2hhMS5jcmVhdGUoKSxkPW5ldyBoLnV0aWwuQnl0ZUJ1ZmZlcihoLnJhbmRvbS5nZXRCeXRlcyhiLnNhbHRTaXplKSksYj1iLmNvdW50LGc9dS5nZW5lcmF0ZUtleShnfHwiIixkLDMsYiwyMCksYz1oLmhtYWMuY3JlYXRlKCksYy5zdGFydChrLGcpLGMudXBkYXRlKGEudG9EZXIoZikuZ2V0Qnl0ZXMoKSksZz1jLmdldE1hYygpLGQ9YS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5zaGExKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuTlVMTCwhMSwiIildKSxhLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0NURVRTVFJJTkcsITEsZy5nZXRCeXRlcygpKV0pLGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PQ1RFVFNUUklORywhMSxkLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5JTlRFR0VSLCExLGgudXRpbC5oZXhUb0J5dGVzKGIudG9TdHJpbmcoMTYpKSldKSk7cmV0dXJuIGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLklOVEVHRVIsITEsU3RyaW5nLmZyb21DaGFyQ29kZSgzKSksYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0lELCExLGEub2lkVG9EZXIobC5vaWRzLmRhdGEpLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuQ09OVEVYVF9TUEVDSUZJQywwLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0NURVRTVFJJTkcsITEsYS50b0RlcihmKS5nZXRCeXRlcygpKV0pXSksZF0pfTt1Lm1ha2VQS0NTMTJGcm9tQ2VydE5FbmNQS0NTOD1mdW5jdGlvbihmLGUsZCxuLGcsYil7aWYobnVsbD09Znx8InVuZGVmaW5lZCI9PXR5cGVvZiBmKXRocm93e2NvZGU6IjExNTAzMSIsbWVzc2FnZTptWyIxMTUwMzEiXX07aWYobnVsbD09ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBlKXRocm93e2NvZGU6IjExNTAzMiIsbWVzc2FnZTptWyIxMTUwMzIiXX07aWYobnVsbD09Z3x8InVuZGVmaW5lZCI9PXR5cGVvZiBnKXRocm93e2NvZGU6IjExNTAzMyIsbWVzc2FnZTptWyIxMTUwMzMiXX07Yj1ifHx7fTtiLnNhbHRTaXplPWIuc2FsdFNpemV8fDIwO2IuY291bnQ9Yi5jb3VudHx8MkUzO2IuZW5jQWxnb3JpdGhtPWIuZW5jQWxnb3JpdGhtfHwiM2RlcyI7Yi5hbGdvcml0aG09Yi5hbGdvcml0aG18fCIzZGVzIjtiLmdlbmVyYXRlTG9jYWxLZXlJZD1iLmdlbmVyYXRlTG9jYWxLZXlJZHx8ITA7Yi51c2VNYWM9Yi51c2VNYWN8fCEwO2Iuc2FsdD1iLnNhbHR8fGgucmFuZG9tLmdldEJ5dGVzKGIuc2FsdFNpemUpOyJ1c2VNYWMiaW4gYnx8KGIudXNlTWFjPSEwKTsiZ2VuZXJhdGVMb2NhbEtleUlkImluIGJ8fChiLmdlbmVyYXRlTG9jYWxLZXlJZD0hMCk7dmFyIGs9W10sYz1BKCk7ay5wdXNoKGMpO251bGwhPT1kJiYidW5kZWZpbmVkIiE9dHlwZW9mIGQmJihjPUEoKSxrLnB1c2goYykpO2M9W107aWYobnVsbCE9PWUpe3ZhciByPW51bGwscD1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW10pLHI9eShlLGtbMF0pO3AudmFsdWUucHVzaChyKTtudWxsIT09biYmInVuZGVmaW5lZCIhPXR5cGVvZiBuJiYocj15KG4sa1sxXSkscC52YWx1ZS5wdXNoKHIpKTtlPWEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9JRCwhMSxhLm9pZFRvRGVyKGwub2lkcy5kYXRhKS5nZXRCeXRlcygpKSxhLmNyZWF0ZShhLkNsYXNzLkNPTlRFWFRfU1BFQ0lGSUMsMCwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9DVEVUU1RSSU5HLCExLGEudG9EZXIocCkuZ2V0Qnl0ZXMoKSldKV0pO2MucHVzaChlKX1udWxsIT09ZiYmKGU9bnVsbCxuPWEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbXSksZT1CKGYsa1swXSksbi52YWx1ZS5wdXNoKGUpLG51bGwhPT1kJiYidW5kZWZpbmVkIiE9dHlwZW9mIGQmJihlPUIoZCxrWzFdKSxuLnZhbHVlLnB1c2goZSkpLGY9eihuLGcsYiksYy5wdXNoKGYpKTtmPWEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxjKTtkPXZvaWQgMDtiLnVzZU1hYyYmKGs9aC5tZC5zaGExLmNyZWF0ZSgpLGQ9bmV3IGgudXRpbC5CeXRlQnVmZmVyKGgucmFuZG9tLmdldEJ5dGVzKGIuc2FsdFNpemUpKSxiPWIuY291bnQsZz11LmdlbmVyYXRlS2V5KGd8fCIiLGQsMyxiLDIwKSxjPWguaG1hYy5jcmVhdGUoKSxjLnN0YXJ0KGssZyksYy51cGRhdGUoYS50b0RlcihmKS5nZXRCeXRlcygpKSxnPWMuZ2V0TWFjKCksZD1hLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5TRVFVRU5DRSwhMCxbYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuT0lELCExLGEub2lkVG9EZXIobC5vaWRzLnNoYTEpLmdldEJ5dGVzKCkpLGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5OVUxMLCExLCIiKV0pLGEuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PQ1RFVFNUUklORywhMSxnLmdldEJ5dGVzKCkpXSksYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLk9DVEVUU1RSSU5HLCExLGQuZ2V0Qnl0ZXMoKSksYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLklOVEVHRVIsITEsaC51dGlsLmhleFRvQnl0ZXMoYi50b1N0cmluZygxNikpKV0pKTtyZXR1cm4gYS5jcmVhdGUoYS5DbGFzcy5VTklWRVJTQUwsYS5UeXBlLlNFUVVFTkNFLCEwLFthLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuSU5URUdFUiwhMSxTdHJpbmcuZnJvbUNoYXJDb2RlKDMpKSxhLmNyZWF0ZShhLkNsYXNzLlVOSVZFUlNBTCxhLlR5cGUuU0VRVUVOQ0UsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PSUQsITEsYS5vaWRUb0RlcihsLm9pZHMuZGF0YSkuZ2V0Qnl0ZXMoKSksYS5jcmVhdGUoYS5DbGFzcy5DT05URVhUX1NQRUNJRklDLDAsITAsW2EuY3JlYXRlKGEuQ2xhc3MuVU5JVkVSU0FMLGEuVHlwZS5PQ1RFVFNUUklORywhMSxhLnRvRGVyKGYpLmdldEJ5dGVzKCkpXSldKSxkXSl9O3UuZ2V0Q2VydE5LZXlGcm9tUEtDUzEyV2l0aEVuY1BLQ1M4PWZ1bmN0aW9uKGYsZSl7aWYobnVsbD09Znx8InVuZGVmaW5lZCI9PXR5cGVvZiBmKXRocm93e2NvZGU6IjExNTAzNCIsbWVzc2FnZTptWyIxMTUwMzQiXX07aWYobnVsbD09ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBlKXRocm93e2NvZGU6IjExNTAzNSIsbWVzc2FnZTptWyIxMTUwMzUiXX07dmFyIGQ9e30sbj1bXTtpZighYS52YWxpZGF0ZShmLEUsZCxuKSl0aHJvd3tjb2RlOiIxMTUwMzYiLG1lc3NhZ2U6bVsiMTE1MDM2Il0sZXJyb3JzOm59O3ZhciBnPXt2ZXJzaW9uOmQudmVyc2lvbi5jaGFyQ29kZUF0KDApLHNhZmVDb250ZW50czpbXSxnZXRDZXJ0QW5kS2V5RnJvbVBLQ1MxMjpmdW5jdGlvbigpe2Zvcih2YXIgYT17c2lnbjp7fX0sYj0wO2I8Zy5zYWZlQ29udGVudHNbMF0uc2FmZUJhZ3MubGVuZ3RoO2IrKyl7dmFyIGM9Zy5zYWZlQ29udGVudHNbMF0uc2FmZUJhZ3NbYl0uYXR0cmlidXRlcy5sb2NhbEtleUlkWzBdLGQ9cyhnLnNhZmVDb250ZW50cywibG9jYWxLZXlJZCIsYyxsLm9pZHMucGtjczhTaHJvdWRlZEtleUJhZyk7MD09ZC5sZW5ndGgmJihkPXMoZy5zYWZlQ29udGVudHMsImxvY2FsS2V5SWQiLGMsbC5vaWRzLmtleUJhZykpO2lmKDI9PWQubGVuZ3RoKXtjPXMoZy5zYWZlQ29udGVudHMsImxvY2FsS2V5SWQiLGMsbC5vaWRzLmNlcnRCYWcpO2Euc2lnbi5jZXJ0PWcuc2FmZUNvbnRlbnRzWzFdLnNhZmVCYWdzWzBdLmNlcnQ7YS5zaWduLnByaWtleT1kWzBdLmtleTtjPXt9O2MuY2VydD1nLnNhZmVDb250ZW50c1sxXS5zYWZlQmFnc1sxXS5jZXJ0O2MucHJpa2V5PWRbMV0ua2V5O2Eua209YzticmVha31lbHNlIGlmKDE9PWQubGVuZ3RoKXt2YXIgYz1zKGcuc2FmZUNvbnRlbnRzLCJsb2NhbEtleUlkIixjLGwub2lkcy5jZXJ0QmFnKSxkPWRbMF0ua2V5LGU9Y1swXS5jZXJ0O2UuZ2V0RXh0ZW5zaW9uKCJrZXlVc2FnZSIpLmtleUVuY2lwaGVybWVudD8oYz17fSxjLmNlcnQ9ZSxjLnByaWtleT1kLGEua209Yyk6KGEuc2lnbi5jZXJ0PWUsYS5zaWduLnByaWtleT1kKX1lbHNlIHRocm93e2NvZGU6IjExNTAzNyIsbWVzc2FnZTptWyIxMTUwMzciXX07fXJldHVybiBhfX07aWYoMyE9PWQudmVyc2lvbi5jaGFyQ29kZUF0KDApKXRocm93e2NvZGU6IjExNTAzOCIsbWVzc2FnZTptWyIxMTUwMzgiXSsiKHZlcnNpb24gOiAiK2QudmVyc2lvbi5jaGFyQ29kZUF0KDApKyIpIn07aWYoYS5kZXJUb09pZChkLmNvbnRlbnRUeXBlKSE9PWwub2lkcy5kYXRhKXRocm93e2NvZGU6IjExNTAzOSIsbWVzc2FnZTptWyIxMTUwMzkiXSsiKG9pZCA6ICIrYS5kZXJUb09pZChkLmNvbnRlbnRUeXBlKSsiKSJ9O249ZC5jb250ZW50LnZhbHVlWzBdO2lmKG4udGFnQ2xhc3MhPT1hLkNsYXNzLlVOSVZFUlNBTHx8bi50eXBlIT09YS5UeXBlLk9DVEVUU1RSSU5HKXRocm93e2NvZGU6IjExNTA0MCIsbWVzc2FnZTptWyIxMTUwNDAiXX07aWYoZC5tYWMpe3ZhciBiPW51bGwsaz0wLGM9YS5kZXJUb09pZChkLm1hY0FsZ29yaXRobSk7c3dpdGNoKGMpe2Nhc2UgbC5vaWRzLnNoYTE6Yj1oLm1kLnNoYTEuY3JlYXRlKCk7az0yMDticmVhaztjYXNlIGwub2lkcy5zaGEyNTY6Yj1oLm1kLnNoYTI1Ni5jcmVhdGUoKTtrPTMyO2JyZWFrO2Nhc2UgbC5vaWRzLm1kNTpiPWgubWQubWQ1LmNyZWF0ZSgpO2s9MTY7YnJlYWs7ZGVmYXVsdDp0aHJvd3tjb2RlOiIxMTUwNDEiLG1lc3NhZ2U6bVsiMTE1MDQxIl0rIigiK2MrIikifTt9aWYobnVsbD09PWIpdGhyb3d7Y29kZToiMTE1MDQyIixtZXNzYWdlOm1bIjExNTA0MiJdKyIoIitjKyIpIn07dmFyIGM9bmV3IGgudXRpbC5CeXRlQnVmZmVyKGQubWFjU2FsdCkscj0ibWFjSXRlcmF0aW9ucyJpbiBkP3BhcnNlSW50KGgudXRpbC5ieXRlc1RvSGV4KGQubWFjSXRlcmF0aW9ucyksMTYpOjEsaz11LmdlbmVyYXRlS2V5KGV8fCIiLGMsMyxyLGssYiksYz1oLmhtYWMuY3JlYXRlKCk7Yy5zdGFydChiLGspO2MudXBkYXRlKG4udmFsdWUpO2lmKGMuZ2V0TWFjKCkudG9IZXgoKSE9PWgudXRpbC5ieXRlc1RvSGV4KGQubWFjRGlnZXN0KSl0aHJvd3tjb2RlOiIxMTUwNDMiLG1lc3NhZ2U6bVsiMTE1MDQzIl19O31xKGcsbi52YWx1ZSxlKTtyZXR1cm4gZ307dS5nZW5lcmF0ZUtleT1mdW5jdGlvbihhLGUsZCxsLGcsYil7aWYobnVsbD09YXx8InVuZGVmaW5lZCI9PXR5cGVvZiBhKXRocm93e2NvZGU6IjExNTA0NCIsbWVzc2FnZTptWyIxMTUwNDQiXX07aWYobnVsbD09ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBlKXRocm93e2NvZGU6IjExNTA0NSIsbWVzc2FnZTptWyIxMTUwNDUiXX07aWYobnVsbD09ZHx8InVuZGVmaW5lZCI9PXR5cGVvZiBkKXRocm93e2NvZGU6IjExNTA0NiIsbWVzc2FnZTptWyIxMTUwNDYiXX07aWYobnVsbD09bHx8InVuZGVmaW5lZCI9PXR5cGVvZiBsKXRocm93e2NvZGU6IjExNTA0NyIsbWVzc2FnZTptWyIxMTUwNDciXX07aWYobnVsbD09Z3x8InVuZGVmaW5lZCI9PXR5cGVvZiBnKXRocm93e2NvZGU6IjExNTAwMSIsbWVzc2FnZTptWyIxMTUwMDEiXX07dmFyIGssYztpZigidW5kZWZpbmVkIj09PXR5cGVvZiBifHxudWxsPT09YiliPWgubWQuc2hhMS5jcmVhdGUoKTt2YXIgcj1iLmRpZ2VzdExlbmd0aCxwPWIuYmxvY2tMZW5ndGgscz1uZXcgaC51dGlsLkJ5dGVCdWZmZXIscT1uZXcgaC51dGlsLkJ5dGVCdWZmZXI7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKylxLnB1dEludDE2KGEuY2hhckNvZGVBdChjKSk7cS5wdXRJbnQxNigwKTthPXEubGVuZ3RoKCk7dmFyIHU9ZS5sZW5ndGgoKSx2PW5ldyBoLnV0aWwuQnl0ZUJ1ZmZlcjt2LmZpbGxXaXRoQnl0ZShkLHApO3ZhciB3PXAqTWF0aC5jZWlsKHUvcCk7ZD1uZXcgaC51dGlsLkJ5dGVCdWZmZXI7Zm9yKGM9MDtjPHc7YysrKWQucHV0Qnl0ZShlLmF0KGMldSkpO3c9cCpNYXRoLmNlaWwoYS9wKTtlPW5ldyBoLnV0aWwuQnl0ZUJ1ZmZlcjtmb3IoYz0wO2M8dztjKyspZS5wdXRCeXRlKHEuYXQoYyVhKSk7cT1kO3EucHV0QnVmZmVyKGUpO2U9TWF0aC5jZWlsKGcvcik7Zm9yKGQ9MTtkPD1lO2QrKyl7dz1uZXcgaC51dGlsLkJ5dGVCdWZmZXI7dy5wdXRCeXRlcyh2LmJ5dGVzKCkpO3cucHV0Qnl0ZXMocS5ieXRlcygpKTtmb3IoYz0wO2M8bDtjKyspYi5zdGFydCgpLGIudXBkYXRlKHcuZ2V0Qnl0ZXMoKSksdz1iLmRpZ2VzdCgpO3ZhciB4PW5ldyBoLnV0aWwuQnl0ZUJ1ZmZlcjtmb3IoYz0wO2M8cDtjKyspeC5wdXRCeXRlKHcuYXQoYyVyKSk7dmFyIEM9TWF0aC5jZWlsKHUvcCkrTWF0aC5jZWlsKGEvcCksej1uZXcgaC51dGlsLkJ5dGVCdWZmZXI7Zm9yKGs9MDtrPEM7aysrKXt2YXIgeT1uZXcgaC51dGlsLkJ5dGVCdWZmZXIocS5nZXRCeXRlcyhwKSksdD01MTE7Zm9yKGM9eC5sZW5ndGgoKS0xOzA8PWM7Yy0tKXQ+Pj04LHQrPXguYXQoYykreS5hdChjKSx5LnNldEF0KGMsdCYyNTUpO3oucHV0QnVmZmVyKHkpfXE9ejtzLnB1dEJ1ZmZlcih3KX1zLnRydW5jYXRlKHMubGVuZ3RoKCktZyk7cmV0dXJuIHN9fXZhciB5PSIuL2FzbjEgLi9zaGExIC4vcGtjczdhc24xIC4vcGtpIC4vdXRpbCAuL3JhbmRvbSAuL2htYWMgLi9qc3VzdG9vbGtpdEVyckNvZGUiLnNwbGl0KCIgIiksdD1udWxsOyJmdW5jdGlvbiIhPT10eXBlb2YgZGVmaW5lJiYoIm9iamVjdCI9PT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz90PWZ1bmN0aW9uKGgscyl7cyhyZXF1aXJlLG1vZHVsZSl9Oihjcm9zc2NlcnQ9d2luZG93LmNyb3NzY2VydD13aW5kb3cuY3Jvc3NjZXJ0fHx7fSx4KGNyb3NzY2VydCkpKTsodHx8ImZ1bmN0aW9uIj09PXR5cGVvZiBkZWZpbmUpJiYodHx8ZGVmaW5lKShbInJlcXVpcmUiLCJtb2R1bGUiXS5jb25jYXQoeSksZnVuY3Rpb24oaCxzKXtzLmV4cG9ydHM9ZnVuY3Rpb24ocSl7dmFyIHM9eS5tYXAoZnVuY3Rpb24ocSl7cmV0dXJuIGgocSl9KS5jb25jYXQoeCk7cT1xfHx7fTtxLmRlZmluZWQ9cS5kZWZpbmVkfHx7fTtpZihxLmRlZmluZWQucGtjczEyKXJldHVybiBxLnBrY3MxMjtxLmRlZmluZWQucGtjczEyPSEwO2Zvcih2YXIgdD0wO3Q8cy5sZW5ndGg7Kyt0KXNbdF0ocSk7cmV0dXJuIHEucGtjczEyfX0pfSkoKTs=');