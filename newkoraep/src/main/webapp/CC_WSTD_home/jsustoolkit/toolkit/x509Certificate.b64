remoteFunction('(function(){function r(d){var g=d.jsustoolkitErrCode=d.jsustoolkitErrCode||{},b=d.x509Certificate=d.x509Certificate||{},e=null,p=null,f=d.asn1,q={name:"CertificateListInfo",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,value:[{name:"CertificateListInfo.tbsCertList",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,captureAsn1:"TBSCertList"},{name:"CertificateListInfo.signatureAlgorithm",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,value:[{name:"CertificateListInfo.algorithm",tagClass:f.Class.UNIVERSAL,type:f.Type.OID,constructed:!1,capture:"signatureOid"},{name:"CertificateListInfo.parameters",tagClass:f.Class.UNIVERSAL,optional:!0,captureAsn1:"signatureParams"}]},{name:"CertificateListInfo.signatureValue",tagClass:f.Class.UNIVERSAL,type:f.Type.BITSTRING,constructed:!1,capture:"signature"}]},r={name:"tbsCertList",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertListInfo",value:[{name:"tbsCertListInfo.version",tagClass:f.Class.UNIVERSAL,type:f.Type.INTEGER,constructed:!1,optional:!0,capture:"certListVersion"},{name:"tbsCertListInfo.signature",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,value:[{name:"tbsCertListInfo.signature.algorithm",tagClass:f.Class.UNIVERSAL,type:f.Type.OID,constructed:!1,capture:"certListInfoSignatureOid"},{name:"tbsCertListInfo.signature.parameters",tagClass:f.Class.UNIVERSAL,optional:!0,captureAsn1:"certListInfoSignatureParams"}]},{name:"tbsCertListInfo.issuer",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,captureAsn1:"certListIssuer"},{name:"tbsCertListInfo.thisUpdate",tagClass:f.Class.UNIVERSAL,type:f.Type.UTCTIME,constructed:!1,capture:"thisUpdate"},{name:"tbsCertListInfo.nextUpdate",tagClass:f.Class.UNIVERSAL,type:f.Type.UTCTIME,constructed:!1,optional:!0,capture:"nextUpdate"},{name:"tbsCertListInfo.revokedCertificaates",tagClass:f.Class.UNIVERSAL,type:f.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"revokedCertificaates"},{name:"tbsCertListInfo.extensions",tagClass:f.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,captureAsn1:"certListInfoExtensions"}]},s="unspecified keyCompromise caCompromise affiliationChanged superseded cessationOfOperation certificateHold removeFromCRL".split(" ");b.parser=function(a,c){if(null==a||"undefined"==typeof a)throw{code:"112050",message:g["112050"]};if("PEM"==c)e=d.pki.certificateFromPem(a);else if("Base64"==c)e=d.pki.certificateFromBase64(a);else if("ASN1"==c)e=d.pki.certificateFromAsn1(a);else throw{code:"112051",message:g["112051"]};p=new b.certUtil;return e};b.getVersion=function(){return e.version+1};b.getSerialNumber=function(){return e.serialNumber};b.getSignAlgo=function(){return d.pki.oids[e.signatureOid]};b.getSignHashAlgo=function(){return b.getSignAlgo().substring(0,b.getSignAlgo().indexOf("with"))};b.getIssuerName=function(){return p.getDN(e.issuer)};b.getNotBefore=function(){return e.validity.notBefore};b.getNotAfter=function(){return e.validity.notAfter};b.getSubjectName=function(){return p.getDN(e.subject)};b.getSignature=function(){return d.util.bytesToHex(e.signature)};b.getPublickeyAlgo=function(){var a=d.pki.oids[e.publicKeyOid];null==a&&(a=e.publicKeyOid);return a};b.getPublickey=function(){return e.publicKeyOid==d.pki.oids.RSAEncryption?d.asn1.toDer(e.rsaPublicKey).toHex():d.asn1.toDer(e.publicKey.value[0]).toHex()};b.getAuthorityInfoAccess=function(){if(null==e.getExtension("authorityInfoAccess"))return"";var a=d.asn1.fromDer(e.getExtension("authorityInfoAccess").value).value[0];return"AccessMethod ="+d.pki.oids[d.asn1.derToOid(a.value[0].value)]+"("+d.asn1.derToOid(a.value[0].value)+")\nAlternativeName = "+a.value[1].value};b.getAuthorityKeyIndentifier=function(){if(null==e.getExtension("authorityKeyIdentifier"))return"";var a=d.asn1.fromDer(e.getExtension("authorityKeyIdentifier").value);return a.value[2]?"KeyID ="+d.util.bytesToHex(a.value[0].value)+"\nCertificate SerialNumber="+d.util.bytesToHex(a.value[2].value)+"\n":"KeyID ="+d.util.bytesToHex(a.value[0].value)+"\n"};b.getSubjectKeyIdentifier=function(){return null==e.getExtension("subjectKeyIdentifier")?"":d.util.bytesToHex(d.asn1.fromDer(e.getExtension("subjectKeyIdentifier").value).value)};b.getKeyUsage=function(){var a=e.getExtension("keyUsage"),c="";null!==a&&(a.digitalSignature&&(c+="digitalSignature,"),a.nonRepudiation&&(c+="nonRepudiation,"),a.keyEncipherment&&(c+="keyEncipherment,"),a.dataEncipherment&&(c+="dataEncipherment,"),a.keyAgreement&&(c+="keyAgreement,"),a.keyCertSign&&(c+="keyCertSign,"),a.cRLSign&&(c+="cRLSign,"),a.encipherOnly&&(c+="encipherOnly,"),a.decipherOnly&&(c+="decipherOnly,"),c=c.substring(0,c.length-1));return c};b.getCertificatePoliciesOid=function(){if(null==e.getExtension("certificatePolicies"))return"";var a=d.asn1.fromDer(e.getExtension("certificatePolicies").value),c=a.value[0];a.value[1]&&(c=a.value[1]);return d.asn1.derToOid(c.value[0].value)};b.getCertificatePoliciesCPS=function(){if(null!=e.getExtension("certificatePolicies")){var a=d.asn1.fromDer(e.getExtension("certificatePolicies").value),c=a.value[0].value[1];a.value[1]&&(c=a.value[1].value[1]);if(null==c)return"";for(a=0;a<c.value.length;a++)if("cps"==d.pki.oids[d.asn1.derToOid(c.value[a].value[0].value)])return c.value[a].value[1].value}return""};b.getCertificatePoliciesUserNotice=function(){if(null!=e.getExtension("certificatePolicies")){var a=d.asn1.fromDer(e.getExtension("certificatePolicies").value),c=a.value[0].value[1];a.value[1]&&(c=a.value[1].value[1]);if(null==c)return"";for(a=0;a<c.value.length;a++)if("unotice"==d.pki.oids[d.asn1.derToOid(c.value[a].value[0].value)])return c.value[a].value[1].value[0].value}return""};b.getSubjectAltName=function(){if(null==e.getExtension("subjectAltName"))return"";for(var a=d.asn1.fromDer(e.getExtension("subjectAltName").value),c="",b=0;b<a.value.length;b++)1==a.value[b].type?c+="RFC822Name = "+a.value[b].value:0==a.value[b].type&&(c+="Other Name: "+d.asn1.derToOid(a.value[b].value[0].value)+"="+d.asn1.toDer(a.value[b].value[1].value[0]).toHex()),b!=a.value.length-1&&(c+="\n");return c};b.getcRLDistributionPoints=function(){if(null==e.getExtension("cRLDistributionPoints"))return"";var a=d.asn1.fromDer(e.getExtension("cRLDistributionPoints").value);return a.value[1]?a.value[1].value[0].value[0].value[0].value:a.value[0].value[0].value[0].value[0].value};b.verifyCRL=function(a,c){var e={verify:!1},n=new Date;if(n<b.getNotBefore()||n>b.getNotAfter())e.verify=!1,e.revocationDate=b.getNotAfter(),e.reason="Certificate has expired.";else{var h={},n={},k=[];c=f.fromDer(c);if(!f.validate(c,q,h,k))throw{code:"112052",message:g["112052"]};if(!f.validate(h.TBSCertList,r,n,k))throw{code:"112053",message:g["112053"]};if(!f.fromDer(n.certListInfoExtensions.value[0].value[0].value[1].value).value[0].value==f.fromDer(a.getExtension("subjectKeyIdentifier").value).value)throw{code:"112054",message:g["112054"]};k=d.util.createBuffer(h.signature);++k.read;var k=k.getBytes(),l=h.TBSCertList,m=f.derToOid(h.signatureOid),h=k;if(null==a||"undefined"==typeof a)throw{code:"112053",message:g["112053"]};if(null==l||"undefined"==typeof l)throw{code:"112054",message:g["112054"]};if(null==m||"undefined"==typeof m)throw{code:"112055",message:g["112055"]};if(null==h||"undefined"==typeof h)throw{code:"112056",message:g["112056"]};var p=!1,k=null;if(a.signatureOid in d.pki.oids)switch(d.pki.oids[a.signatureOid]){case "sha1WithRSAEncryption":k=d.md.sha1.create();break;case "md5WithRSAEncryption":k=d.md.md5.create();break;case "sha256WithRSAEncryption":k=d.md.sha256.create();break;case "RSASSA-PSS":k=d.md.sha256.create()}else throw{code:"112057",message:g["112057"]};l=f.toDer(l);k.update(l.getBytes());if(null!==k){l=void 0;m=d.pki.oids[m];switch(m){case "sha1WithRSAEncryption":case "sha256WithRSAEncryption":l=void 0;break;case "RSASSA-PSS":m=oids[child.signatureParameters.mgf.hash.algorithmOid];if(void 0===m||void 0===d.md[m])throw{code:"112028",message:g["112028"]+"(oid:"+child.signatureParameters.mgf.hash.algorithmOid+")"};l=oids[child.signatureParameters.mgf.algorithmOid];if(void 0===l||void 0===d.mgf[l])throw{code:"112029",message:g["112029"]+"(oid:"+child.signatureParameters.mgf.algorithmOid+")"};l=d.mgf[l].create(d.md[m].create());m=oids[child.signatureParameters.hash.algorithmOid];if(void 0===m||void 0===d.md[m])throw{code:"112030",message:g["112030"]+"(oid:"+child.signatureParameters.hash.algorithmOid+")"};l=d.pss.create(d.md[m].create(),l,child.signatureParameters.saltLength)}p=a.publicKey.verify(k.digest().getBytes(),h,l)}if(p)if(h=f.fromDer(n.certListInfoExtensions.value[0].value[2].value[2].value).value[0].value[0].value[0].value,b.getcRLDistributionPoints()==h){for(h=0;h<n.revokedCertificaates.value.length;h++)if(b.getSerialNumber()==d.util.bytesToHex(n.revokedCertificaates.value[h].value[0].value)){e.verify=!1;e.revocationDate=f.utcTimeToDate(n.revokedCertificaates.value[h].value[1].value);e.reason=s[f.fromDer(n.revokedCertificaates.value[h].value[2].value[0].value[1].value).value.charCodeAt(0)];break}"undefined"==typeof e.revocationDate&&(e.verify=!0)}else e.verify=!1,e.reason="IssuingDistributionPoint is not CRLDP path.";else e.verify=!1,e.reason="CRL signature verify failed."}return e};b.certUtil=function(){};b.certUtil.prototype.getDN=function(a){for(var c="",b=0;b<a.attributes.length;b++)c=c+a.attributes[a.attributes.length-(b+1)].shortName+"="+d.util.createBuffer(a.attributes[a.attributes.length-(b+1)].value).toString(),b!=a.attributes.length-1&&(c+=",");return c}}var s=["./pki","./oids","./jsustoolkitErrCode"],q=null;"function"!==typeof define&&("object"===typeof module&&module.exports?q=function(d,g){g(require,module)}:(crosscert=window.crosscert=window.crosscert||{},r(crosscert)));(q||"function"===typeof define)&&(q||define)(["require","module"].concat(s),function(d,g){g.exports=function(b){var e=s.map(function(b){return d(b)}).concat(r);b=b||{};b.defined=b.defined||{};if(b.defined.x509Certificate)return b.x509Certificate;b.defined.x509Certificate=!0;for(var g=0;g<e.length;++g)e[g](b);return b.x509Certificate}})})();');