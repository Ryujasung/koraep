<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.mapper.ce.ep.EPCE9000301Mapper">

    <!-- 반환관리 도매업자 구분  -->
	<select id="epce9000301_select"  resultType="hashmap">
			SELECT
				ETC_CD,ETC_CD_NM 
			FROM 
				EPCN_ETC_CD  A
			JOIN (SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E
			ON A.LANG_SE_CD = E.LANG_SE_CD
			WHERE 1=1
			AND GRP_CD='B001'
			AND ETC_CD IN( 'W1','W2')
	</select>
	<!-- 반환관리 생산자  -->
	<select id="epce9000301_select2"  resultType="hashmap">
			SELECT 
				BIZRID
				,BIZRNO
				,BIZRNM
				,BIZRID||';'||BIZRNO AS BIZRID_NO
			FROM 
				EPCN_BRCH_INFO 
			WHERE  1=1
			AND BIZR_TP_CD  in('M1','M2')
			AND BRCH_NO 	='9999999999'
			AND STAT_CD	='Y'
	</select>
	
	<!-- 반환관리 도매업자 조회  -->
	<select id="epce9000301_select3"  resultType="hashmap">
			SELECT 
				BIZRID AS CUST_BIZRID
				,BIZRNO AS CUST_BIZRNO
				,BIZRNM AS CUST_BIZRNM
				,BIZRID||';'||BIZRNO AS CUST_BIZRID_NO
			FROM 
				EPCN_BRCH_INFO 
			WHERE  1=1
			<if test="BIZR_TP_CD == null ">
			AND BIZR_TP_CD  IN('W1','W2')
			</if>
			<if test="BIZR_TP_CD !='' and  BIZR_TP_CD !=null ">
			AND BIZR_TP_CD  = #{BIZR_TP_CD}
			</if>
	</select>
	
	<!-- 반환관리 조회 -->
	<select id="epce9000301_select4"   parameterType="map" resultType="hashmap">
        <!-- <if test='excelYn == null or excelYn == "" '>
            SELECT 
                    *
             FROM (
        </if> -->
    	SELECT   ROW_NUMBER()OVER(ORDER BY A.REG_SQ DESC) AS PNO,
			         A.REG_SQ,
			         <!-- <![CDATA['<a href="javascript:link();" target="_self" class="gridLink">'||TO_CHAR(TO_DATE(A.RTRVL_DT, 'yyyymmdd'),'yyyy-mm-dd')||'</a>' AS RTRVL_DT , ]]> -->
			         TO_CHAR(TO_DATE(A.RTRVL_DT, 'yyyymmdd'),'yyyy-mm-dd') AS RTRVL_DT , 
			         A.WHSDL_BIZRNM,
			         A.WHSDL_BIZRNO,
			         A.RCS_NO,
			         A.RCS_NM,
			         A.RTRVL_REG_DT,
			         A.AREA_CD,
			         EPCN_ETC_NM(A.AREA_CD , 'B010') AS AREA_NM,
			         A.RTN_QTY,
			         A.CPCT_CD,
			         EPCN_ETC_NM(A.CPCT_CD, 'E001') AS CPCT_NM,
			         A.PRPS_CD,
			         EPCN_ETC_NM(A.PRPS_CD , 'E002') AS PRPS_NM, 
			         A.RTN_GTN,
			         A.INT_STAT_NM,
			         A.STAT_NM,
			         A.LOC_GOV
			FROM     EPCM_RCS_LST A
			WHERE 1=1
			            AND  A.RTRVL_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
			        <if test="RCS_NM !=''  and RCS_NM !=null">
			            AND A.RCS_NM like '%'||#{RCS_NM}||'%'
			        </if>
			        <if test="WHSDL_BIZRNM !=''  and WHSDL_BIZRNM !=null">
			            AND A.WHSDL_BIZRNO like '%'||#{WHSDL_BIZRNM}||'%'
			        </if>
			        <if test="STAT_NM !=''  and STAT_NM !=null">
			            AND A.STAT_NM = #{STAT_NM}
			        </if>
			        <if test="AREA_CD !=''  and AREA_CD !=null">
			            AND A.AREA_CD = #{AREA_CD}
			        </if>
			        <if test="INT_STAT_NM !=''  and INT_STAT_NM !=null">
			            AND A.INT_STAT_NM = #{INT_STAT_NM}
			        </if>
			        <if test="CPCT_CD !=''  and CPCT_CD !=null">
			            AND A.CPCT_CD = #{CPCT_CD}
			        </if>
                
           <!-- <if test='excelYn == null or excelYn == "" '>
                       
               )     
                WHERE PNO BETWEEN (#{ROWS_PER_PAGE}*(#{CURRENT_PAGE}-1))+1 AND #{ROWS_PER_PAGE}*#{CURRENT_PAGE}
        </if> -->
    
	</select>
			<!--  멀티SELECTBOX 리스트 조회 방법
			 	<if test="WHSDL_LIST !=null and WHSDL_LIST.size >0" >
							AND	A.WHSDL_BIZRID || ';' || A.WHSDL_BIZRNO IN
				        <foreach collection="WHSDL_LIST"  item="type"  open="(" close=")" separator=",">
				            #{type.WHSDL_BIZRID_NO}
				        </foreach>
			 	</if>	
		 	  -->
	
	<!-- 반환관리 조회 카운트 -->
	<select id="epce9000301_select4_cnt" parameterType="map" resultType="hashmap">
	    SELECT SUM(A.CNT) AS CNT
                    , SUM(A.FH_RTN_QTY_TOT)         AS FH_RTN_QTY_TOT
                    , SUM(A.FB_RTN_QTY_TOT)         AS FB_RTN_QTY_TOT
                    , SUM(A.DRCT_RTN_QTY_TOT)       AS DRCT_RTN_QTY_TOT
                    , SUM(A.RTN_QTY_TOT)            AS RTN_QTY_TOT
                    , SUM(A.CFM_QTY_TOT)            AS CFM_QTY_TOT
                    , SUM(A.RTN_GTN_TOT)            AS RTN_GTN_TOT
                    , SUM(A.RTN_WHSL_FEE_TOT)       AS RTN_WHSL_FEE_TOT
                    , SUM(A.RTN_WHSL_FEE_STAX_TOT)  AS RTN_WHSL_FEE_STAX_TOT
                    , SUM(A.RTN_RTL_FEE_TOT)        AS RTN_RTL_FEE_TOT
                    , SUM(A.ATM_TOT)                AS ATM_TOT
        FROM (
    			SELECT   
     		  			COUNT(1) AS CNT
    					, SUM(A.FH_RTN_QTY_TOT) AS FH_RTN_QTY_TOT
    					, SUM(A.FB_RTN_QTY_TOT) AS FB_RTN_QTY_TOT
    					, SUM(A.DRCT_RTN_QTY_TOT) AS DRCT_RTN_QTY_TOT
    					, SUM(A.FH_RTN_QTY_TOT +A.FB_RTN_QTY_TOT +A.DRCT_RTN_QTY_TOT) AS RTN_QTY_TOT
    					, SUM(B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT) AS CFM_QTY_TOT
    					, SUM(A.RTN_GTN_TOT) AS RTN_GTN_TOT
    					, SUM(A.RTN_WHSL_FEE_TOT) AS RTN_WHSL_FEE_TOT
    					, SUM(A.RTN_WHSL_FEE_STAX_TOT) AS RTN_WHSL_FEE_STAX_TOT
    					, SUM(A.RTN_RTL_FEE_TOT) AS RTN_RTL_FEE_TOT
    					, SUM(A.RTN_GTN_TOT + A.RTN_WHSL_FEE_TOT + A.RTN_WHSL_FEE_STAX_TOT + A.RTN_RTL_FEE_TOT) AS ATM_TOT
    			FROM 	EPCM_RTN_MST A
    		 		   ,EPCM_CFM_MST B
    		 		   ,EPCN_DTSS_CUST_INFO	C
    		 		   ,EPCN_BRCH_INFO D
    		 		   ,EPGM_PAY_INFO_LST F
    			WHERE 1=1
    			AND  A.RTN_DOC_NO = B.RTN_DOC_NO(+)
    			AND A.WHSDL_BIZRID = C.CUST_BIZRID
    			AND A.WHSDL_BIZRNO = C.CUST_BIZRNO	
    			AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
    			AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
    			AND A.MFC_BIZRID = C.MFC_BIZRID
    			AND A.MFC_BIZRNO = C.MFC_BIZRNO
    			AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
    			AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
    			AND A.WHSDL_BIZRID = D.BIZRID
    			AND A.WHSDL_BIZRNO = D.BIZRNO	
    			AND A.WHSDL_BRCH_ID = D.BRCH_ID
    			AND A.WHSDL_BRCH_NO = D.BRCH_NO	
    			AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
    			<if test="SEARCH_GBN.equalsIgnoreCase('1') ">
    				AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="SEARCH_GBN.equalsIgnoreCase('2') ">
    				AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="SEARCH_GBN.equalsIgnoreCase('3') ">
    				AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
    				AND A.RTN_STAT_CD = #{RTN_STAT_CD}
    			</if>
    			 <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
    				AND A.MFC_BIZRID 	= #{MFC_BIZRID}
    				AND A.MFC_BIZRNO 	= #{MFC_BIZRNO}
    			</if>
    			<if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
    				AND A.MFC_BRCH_ID 	= #{MFC_BRCH_ID}
    				AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
    			</if>
    			<if test="SYS_SE !=''  and SYS_SE !=null">
    				AND A.SYS_SE		= #{SYS_SE}
    			</if>
    			<if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
    				AND C.BIZR_TP_CD = #{BIZR_TP_CD}
    			</if>
    			<if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
    				AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
    				AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
    			</if>
    			<if test="AREA_CD !=''  and AREA_CD !=null">
    				AND D.AREA_CD = #{AREA_CD}
    			</if>
    			
    			AND EXISTS (
    		                   SELECT 'X'
    		                     FROM EPCN_BRCH_INFO S1
    			                          ,EPCN_ATH_GRP_USER S2
    			                          ,EPCN_ATH_GRP_BIZR S3
    		                   WHERE 1=1
    		                       AND A.WHSDL_BIZRID = S1.BIZRID
    		                       AND A.WHSDL_BIZRNO = S1.BIZRNO
    		                       AND A.WHSDL_BRCH_ID = S1.BRCH_ID
    		                       AND A.WHSDL_BRCH_NO = S1.BRCH_NO
    		                       AND S2.USER_ID = #{T_USER_ID}
    		                       AND S2.ATH_GRP_CD = S3.ATH_GRP_CD AND S2.BIZRID = S3.BIZRID AND S2.BIZRNO = S3.BIZRNO
    		                       AND S3.BIZR_ATH_SE = 'A' /* 권한구분 : 지역 */
    		                       AND S1.AREA_CD = S3.AREA_CD
    	                  )
            UNION ALL              
                          
            SELECT   
                        COUNT(1) AS CNT
                        , SUM(A.FH_RTN_QTY_TOT) AS FH_RTN_QTY_TOT
                        , SUM(A.FB_RTN_QTY_TOT) AS FB_RTN_QTY_TOT
                        , SUM(A.DRCT_RTN_QTY_TOT) AS DRCT_RTN_QTY_TOT
                        , SUM(A.FH_RTN_QTY_TOT +A.FB_RTN_QTY_TOT +A.DRCT_RTN_QTY_TOT) AS RTN_QTY_TOT
                        , SUM(B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT) AS CFM_QTY_TOT
                        , SUM(A.RTN_GTN_TOT) AS RTN_GTN_TOT
                        , SUM(A.RTN_WHSL_FEE_TOT) AS RTN_WHSL_FEE_TOT
                        , SUM(A.RTN_WHSL_FEE_STAX_TOT) AS RTN_WHSL_FEE_STAX_TOT
                        , SUM(A.RTN_RTL_FEE_TOT) AS RTN_RTL_FEE_TOT
                        , SUM(A.RTN_GTN_TOT + A.RTN_WHSL_FEE_TOT + A.RTN_WHSL_FEE_STAX_TOT + A.RTN_RTL_FEE_TOT) AS ATM_TOT
                FROM    EPCM_RTN_MST_TMP A
                       ,EPCM_CFM_MST B
                       ,EPCN_DTSS_CUST_INFO C
                       ,EPCN_BRCH_INFO D
                       ,EPGM_PAY_INFO_LST F
                WHERE 1=1
                AND  A.RTN_DOC_NO = B.RTN_DOC_NO(+)
                AND A.WHSDL_BIZRID = C.CUST_BIZRID
                AND A.WHSDL_BIZRNO = C.CUST_BIZRNO  
                AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
                AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
                AND A.MFC_BIZRID = C.MFC_BIZRID
                AND A.MFC_BIZRNO = C.MFC_BIZRNO
                AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
                AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
                AND A.WHSDL_BIZRID = D.BIZRID
                AND A.WHSDL_BIZRNO = D.BIZRNO   
                AND A.WHSDL_BRCH_ID = D.BRCH_ID
                AND A.WHSDL_BRCH_NO = D.BRCH_NO 
                AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
                AND A.REG_YN = 'N'
                <if test="SEARCH_GBN.equalsIgnoreCase('1') ">
                    AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="SEARCH_GBN.equalsIgnoreCase('2') ">
                    AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="SEARCH_GBN.equalsIgnoreCase('3') ">
                    AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
                    AND A.RTN_STAT_CD = #{RTN_STAT_CD}
                </if>
                 <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
                    AND A.MFC_BIZRID    = #{MFC_BIZRID}
                    AND A.MFC_BIZRNO    = #{MFC_BIZRNO}
                </if>
                <if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
                    AND A.MFC_BRCH_ID   = #{MFC_BRCH_ID}
                    AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
                </if>
                <if test="SYS_SE !=''  and SYS_SE !=null">
                    AND A.SYS_SE        = #{SYS_SE}
                </if>
                <if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
                    AND C.BIZR_TP_CD = #{BIZR_TP_CD}
                </if>
                <if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
                    AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
                    AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
                </if>
                <if test="AREA_CD !=''  and AREA_CD !=null">
                    AND D.AREA_CD = #{AREA_CD}
                </if>
                
                AND EXISTS (
                               SELECT 'X'
                                 FROM EPCN_BRCH_INFO S1
                                          ,EPCN_ATH_GRP_USER S2
                                          ,EPCN_ATH_GRP_BIZR S3
                               WHERE 1=1
                                   AND A.WHSDL_BIZRID = S1.BIZRID
                                   AND A.WHSDL_BIZRNO = S1.BIZRNO
                                   AND A.WHSDL_BRCH_ID = S1.BRCH_ID
                                   AND A.WHSDL_BRCH_NO = S1.BRCH_NO
                                   AND S2.USER_ID = #{T_USER_ID}
                                   AND S2.ATH_GRP_CD = S3.ATH_GRP_CD AND S2.BIZRID = S3.BIZRID AND S2.BIZRNO = S3.BIZRNO
                                   AND S3.BIZR_ATH_SE = 'A' /* 권한구분 : 지역 */
                                   AND S1.AREA_CD = S3.AREA_CD
                          )
        ) A
	</select>
	
	<!-- 반환내역상세조회(20200402추가) -->
	<select id="epce9000301_select4_1"   parameterType="map" resultType="hashmap">
        <if test='excelYn == null or excelYn == "" '>
            SELECT 
                    *
             FROM (
        </if>
    
                SELECT ROW_NUMBER()OVER(ORDER BY A1.RTN_REG_DT DESC, A1.WHSDL_BIZRID ,A1.MFC_BIZRID ,A1.MFC_BRCH_ID, A1.RTN_DOC_NO) AS PNO ,
                      A1.RTN_DOC_NO ,
                      A1.RTN_REG_DT ,
                      TO_CHAR(TO_DATE(A1.RTN_DT, 'yyyymmdd'),'yyyy-mm-dd') AS RTN_DT ,
                      A1.RTN_DT AS RTN_DT_ORI ,
                      A1.RTN_STAT_CD,
                      A1.STAT_CD_NM ,
                      A1.CUST_BIZRNM ,
                      A1.AREA_CD ,
                      A1.AREA_NM ,
                      A1.FH_RTN_QTY_TOT ,
                      A1.FB_RTN_QTY_TOT ,
                      A1.DRCT_RTN_QTY_TOT ,
                      A1.FH_RTN_QTY_TOT+ A1.FB_RTN_QTY_TOT + A1.DRCT_RTN_QTY_TOT AS QTY_TOT ,
                      A1.BIZR_TP_CD ,
                      A1.BIZR_TP_CD_ORI ,
                      A1.WHSDL_BIZRNO ,
                      A1.WHSDL_BIZRNO_ORI ,
                      A1.WHSDL_BIZRID ,
                      A1.WHSDL_BRCH_ID ,
                      A1.WHSDL_BRCH_NO ,
                      A1.MFC_BIZRID ,
                      A1.MFC_BIZRNO ,
                      A1.MFC_BRCH_ID ,
                      A1.MFC_BRCH_NO ,
                      A1.RTN_QTY_TOT ,
                      A1.CFM_QTY_TOT ,
                      A1.RTN_GTN_TOT ,
                      A1.RTN_WHSL_FEE_TOT ,
                      A1.RTN_WHSL_FEE_STAX_TOT ,
                      A1.RTN_RTL_FEE_TOT ,
                      A1.ATM_TOT ,
                      A1.MFC_BIZRNM ,
                      A1.MFC_BRCH_NM ,
                      A1.CUST_BRCH_NM ,
                      A1.WRHS_CFM_DT ,
                      A1.CAR_NO ,
                      A1.SYS_SE ,
                      A1.REAL_PAY_DT ,
                      A1.GBN ,
                      A1.PRPS_CD 
					 ,A1.CTNR_NM 
					 ,A1.CTNR_CD 
					 ,A1.CPCT_NM 
					 ,A1.BOX_QTY 
					 ,A1.RTN_QTY 
				     ,A1.RTN_GTN_UTPC 
					 ,A1.RTN_GTN 
					 ,A1.RTN_WHSL_FEE_UTPC 
					 ,A1.RTN_WHSL_FEE 
					 ,A1.RTN_WHSL_FEE_STAX 
					 ,A1.RTN_RTL_FEE_UTPC 
					 ,A1.RTN_RTL_FEE 
				 	 ,A1.AMT_TOT 
					 ,A1.RMK   
					 ,A1.RMK_C 
					 ,Q1.CFM_QTY

                 FROM
                      (SELECT A.RTN_DOC_NO,
                             A.RTN_REG_DT ,
                             A.RTN_DT ,
                             A.RTN_DT AS RTN_DT_ORI ,
                             A.RTN_STAT_CD,
                             EPCN_ETC_NM(A.RTN_STAT_CD , 'D021') AS STAT_CD_NM ,
                             C.CUST_BIZRNM ,
                             D.AREA_CD ,
                             EPCN_ETC_NM(D.AREA_CD , 'B010') AS AREA_NM ,
                             A.FH_RTN_QTY_TOT ,
                             A.FB_RTN_QTY_TOT ,
                             A.DRCT_RTN_QTY_TOT ,
                             A.FH_RTN_QTY_TOT+ A.FB_RTN_QTY_TOT + A.DRCT_RTN_QTY_TOT AS QTY_TOT ,
                             EPCN_ETC_NM(C.BIZR_TP_CD , 'B001') AS BIZR_TP_CD ,
                             C.BIZR_TP_CD AS BIZR_TP_CD_ORI ,
                             PI_DECRYPT(A.WHSDL_BIZRNO) AS WHSDL_BIZRNO ,
                             A.WHSDL_BIZRNO AS WHSDL_BIZRNO_ORI ,
                             A.WHSDL_BIZRID ,
                             A.WHSDL_BRCH_ID ,
                             A.WHSDL_BRCH_NO ,
                             A.MFC_BIZRID ,
                             A.MFC_BIZRNO ,
                             A.MFC_BRCH_ID ,
                             A.MFC_BRCH_NO ,
                             A.FH_RTN_QTY_TOT +A.FB_RTN_QTY_TOT +A.DRCT_RTN_QTY_TOT AS RTN_QTY_TOT ,
                             B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT AS CFM_QTY_TOT ,
                             A.RTN_GTN_TOT ,
                             A.RTN_WHSL_FEE_TOT ,
                             A.RTN_WHSL_FEE_STAX_TOT ,
                             A.RTN_RTL_FEE_TOT ,
                             A.RTN_GTN_TOT + A.RTN_WHSL_FEE_TOT + A.RTN_WHSL_FEE_STAX_TOT + A.RTN_RTL_FEE_TOT AS ATM_TOT ,
                             C.MFC_BIZRNM ,
                             C.MFC_BRCH_NM ,
                             C.CUST_BRCH_NM ,
                             A.WRHS_CFM_DT ,
                             A.CAR_NO ,
                             EPCN_ETC_NM(A.SYS_SE , 'S004') AS SYS_SE ,
                             TO_CHAR(TO_DATE(F.REAL_PAY_DT || F.REAL_PAY_TM, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') AS REAL_PAY_DT ,
                             'ORI' AS GBN ,
                             EPCN_ETC_NM(Z.PRPS_CD , 'E002') AS PRPS_CD 
							,Z.CTNR_NM 
							,X.CTNR_CD 
							,EPCN_ETC_NM(Z.CPCT_CD , 'E001') AS CPCT_NM 
							,NVL(X.BOX_QTY,'0') AS BOX_QTY 
							,X.RTN_QTY 
						    ,X.RTN_GTN_UTPC 
							,X.RTN_GTN 
							,X.RTN_WHSL_FEE_UTPC 
							,X.RTN_WHSL_FEE 
							,X.RTN_WHSL_FEE_STAX 
							,X.RTN_RTL_FEE_UTPC 
							,X.RTN_RTL_FEE 
							,X.RTN_GTN +X.RTN_WHSL_FEE+X.RTN_WHSL_FEE_STAX +X.RTN_RTL_FEE  AS AMT_TOT 
							,X.RMK 
							,SUBSTR(X.RMK ,3) AS RMK_C 
							, A.WRHS_DOC_NO
							
                        FROM EPCM_RTN_MST A ,
                             EPCM_CFM_MST B ,
                             EPCN_DTSS_CUST_INFO C ,
                             EPCN_BRCH_INFO D ,
                             EPGM_PAY_INFO_LST F ,
                             (SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E ,
                             EPCM_RTN_INFO X ,
		                     EPCN_STD_CTNR_CD Z

                       WHERE 1=1
                             AND A.RTN_DOC_NO = B.RTN_DOC_NO(+)
                             AND A.WHSDL_BIZRID = C.CUST_BIZRID
                             AND A.WHSDL_BIZRNO = C.CUST_BIZRNO
                             AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
                             AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
                             AND A.MFC_BIZRID = C.MFC_BIZRID
                             AND A.MFC_BIZRNO = C.MFC_BIZRNO
                             AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
                             AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
                             AND A.WHSDL_BIZRID = D.BIZRID
                             AND A.WHSDL_BIZRNO = D.BIZRNO
                             AND A.WHSDL_BRCH_ID = D.BRCH_ID
                             AND A.WHSDL_BRCH_NO = D.BRCH_NO
                             AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
                             AND A.RTN_DOC_NO =X.RTN_DOC_NO
							 AND X.CTNR_CD = Z.CTNR_CD
							 AND Z.LANG_SE_CD = E.LANG_SE_CD
                        <if test="SEARCH_GBN.equalsIgnoreCase('1') ">
                            AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="SEARCH_GBN.equalsIgnoreCase('2') ">
                            AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="SEARCH_GBN.equalsIgnoreCase('3') ">
                            AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
                            AND A.RTN_STAT_CD = #{RTN_STAT_CD}
                        </if>
                         <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
                            AND A.MFC_BIZRID    = #{MFC_BIZRID}
                            AND A.MFC_BIZRNO    = #{MFC_BIZRNO}
                        </if>
                        <if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
                            AND A.MFC_BRCH_ID   = #{MFC_BRCH_ID}
                            AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
                        </if>
                        <if test="SYS_SE !=''  and SYS_SE !=null">
                            AND A.SYS_SE        = #{SYS_SE}
                        </if>
                        <if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
                            AND C.BIZR_TP_CD = #{BIZR_TP_CD}
                        </if>
                        <if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
                            AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
                            AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
                        </if>
                        <if test="CTNR_LIST !=null and CTNR_LIST.size >0" >
						 AND	Z.CTNR_CD IN
					       <foreach collection="CTNR_LIST"  item="type"  open="(" close=")" separator=",">
							   #{type.CTNR_CD}
						   </foreach>
					    </if>
                             AND EXISTS 
                             (SELECT 'X' 
                               FROM EPCN_BRCH_INFO S1 , 
                                    EPCN_ATH_GRP_USER S2 , 
                                    EPCN_ATH_GRP_BIZR S3 
                              WHERE 1=1 
                                    AND A.WHSDL_BIZRID = S1.BIZRID 
                                    AND A.WHSDL_BIZRNO = S1.BIZRNO 
                                    AND A.WHSDL_BRCH_ID = S1.BRCH_ID 
                                    AND A.WHSDL_BRCH_NO = S1.BRCH_NO 
                                    AND S2.USER_ID = #{T_USER_ID} 
                                    AND S2.ATH_GRP_CD = S3.ATH_GRP_CD 
                                    AND S2.BIZRID = S3.BIZRID 
                                    AND S2.BIZRNO = S3.BIZRNO 
                                    AND S3.BIZR_ATH_SE = 'A' 
                                    /* 권한구분 : 지역 */ 
                                    AND S1.AREA_CD = S3.AREA_CD 
                             ) 
                          UNION ALL 
                       SELECT A.RTN_DOC_NO ,
                             A.RTN_REG_DT ,
                             A.RTN_DT ,
                             A.RTN_DT AS RTN_DT_ORI ,
                             A.RTN_STAT_CD ,
                             EPCN_ETC_NM(A.RTN_STAT_CD , 'D021') AS STAT_CD_NM ,
                             C.CUST_BIZRNM ,
                             D.AREA_CD ,
                             EPCN_ETC_NM(D.AREA_CD , 'B010') AS AREA_NM ,
                             A.FH_RTN_QTY_TOT ,
                             A.FB_RTN_QTY_TOT ,
                             A.DRCT_RTN_QTY_TOT ,
                             A.FH_RTN_QTY_TOT+ A.FB_RTN_QTY_TOT + A.DRCT_RTN_QTY_TOT AS QTY_TOT ,
                             EPCN_ETC_NM(C.BIZR_TP_CD , 'B001') AS BIZR_TP_CD ,
                             C.BIZR_TP_CD AS BIZR_TP_CD_ORI ,
                             PI_DECRYPT(A.WHSDL_BIZRNO) AS WHSDL_BIZRNO ,
                             A.WHSDL_BIZRNO AS WHSDL_BIZRNO_ORI ,
                             A.WHSDL_BIZRID ,
                             A.WHSDL_BRCH_ID ,
                             A.WHSDL_BRCH_NO ,
                             A.MFC_BIZRID ,
                             A.MFC_BIZRNO ,
                             A.MFC_BRCH_ID ,
                             A.MFC_BRCH_NO ,
                             A.FH_RTN_QTY_TOT +A.FB_RTN_QTY_TOT +A.DRCT_RTN_QTY_TOT AS RTN_QTY_TOT ,
                             B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT AS CFM_QTY_TOT ,
                             A.RTN_GTN_TOT ,
                             A.RTN_WHSL_FEE_TOT ,
                             A.RTN_WHSL_FEE_STAX_TOT ,
                             A.RTN_RTL_FEE_TOT ,
                             A.RTN_GTN_TOT + A.RTN_WHSL_FEE_TOT + A.RTN_WHSL_FEE_STAX_TOT + A.RTN_RTL_FEE_TOT AS ATM_TOT ,
                             C.MFC_BIZRNM ,
                             C.MFC_BRCH_NM ,
                             C.CUST_BRCH_NM ,
                             A.WRHS_CFM_DT ,
                             A.CAR_NO ,
                             EPCN_ETC_NM(A.SYS_SE , 'S004') AS SYS_SE ,
                             TO_CHAR(TO_DATE(F.REAL_PAY_DT || F.REAL_PAY_TM, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') AS REAL_PAY_DT ,
                             'TMP' AS GBN ,
                             EPCN_ETC_NM(Z.PRPS_CD , 'E002') AS PRPS_CD
							,Z.CTNR_NM
							,X.CTNR_CD
							,EPCN_ETC_NM(Z.CPCT_CD , 'E001') AS CPCT_NM
							,NVL(X.BOX_QTY,'0') AS BOX_QTY
							,X.RTN_QTY
						    ,X.RTN_GTN_UTPC
							,X.RTN_GTN
							,X.RTN_WHSL_FEE_UTPC
							,X.RTN_WHSL_FEE
							,X.RTN_WHSL_FEE_STAX
							,X.RTN_RTL_FEE_UTPC
							,X.RTN_RTL_FEE
							,X.RTN_GTN +X.RTN_WHSL_FEE+X.RTN_WHSL_FEE_STAX +X.RTN_RTL_FEE  AS AMT_TOT
							,X.RMK
							,SUBSTR(X.RMK ,3) AS RMK_C
							, A.WRHS_DOC_NO
							
                        FROM EPCM_RTN_MST_TMP A ,
                             EPCM_CFM_MST B ,
                             EPCN_DTSS_CUST_INFO C ,
                             EPCN_BRCH_INFO D ,
                             EPGM_PAY_INFO_LST F ,
                             (SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E ,
                             EPCM_RTN_INFO_tmp X ,
		                     EPCN_STD_CTNR_CD Z
                       WHERE 1=1
                             AND A.RTN_DOC_NO = B.RTN_DOC_NO(+)
                             AND A.WHSDL_BIZRID = C.CUST_BIZRID
                             AND A.WHSDL_BIZRNO = C.CUST_BIZRNO
                             AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
                             AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
                             AND A.MFC_BIZRID = C.MFC_BIZRID
                             AND A.MFC_BIZRNO = C.MFC_BIZRNO
                             AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
                             AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
                             AND A.WHSDL_BIZRID = D.BIZRID
                             AND A.WHSDL_BIZRNO = D.BIZRNO
                             AND A.WHSDL_BRCH_ID = D.BRCH_ID
                             AND A.WHSDL_BRCH_NO = D.BRCH_NO
                             AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
                             AND A.REG_YN = 'N'
                             AND A.RTN_DOC_NO =X.RTN_DOC_NO
							 AND X.CTNR_CD = Z.CTNR_CD
							 AND Z.LANG_SE_CD = E.LANG_SE_CD
                        <if test="SEARCH_GBN.equalsIgnoreCase('1') ">
                            AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="SEARCH_GBN.equalsIgnoreCase('2') ">
                            AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="SEARCH_GBN.equalsIgnoreCase('3') ">
                            AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                        </if>
                        <if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
                            AND A.RTN_STAT_CD = #{RTN_STAT_CD}
                        </if>
                         <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
                            AND A.MFC_BIZRID    = #{MFC_BIZRID}
                            AND A.MFC_BIZRNO    = #{MFC_BIZRNO}
                        </if>
                        <if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
                            AND A.MFC_BRCH_ID   = #{MFC_BRCH_ID}
                            AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
                        </if>
                        <if test="SYS_SE !=''  and SYS_SE !=null">
                            AND A.SYS_SE        = #{SYS_SE}
                        </if>
                        <if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
                            AND C.BIZR_TP_CD = #{BIZR_TP_CD}
                        </if>
                        <if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
                            AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
                            AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
                        </if>
                        <if test="CTNR_LIST !=null and CTNR_LIST.size >0" >
						 AND	Z.CTNR_CD IN
					       <foreach collection="CTNR_LIST"  item="type"  open="(" close=")" separator=",">
							   #{type.CTNR_CD}
						   </foreach>
					    </if>
                             AND EXISTS 
                             (SELECT 'X' 
                               FROM EPCN_BRCH_INFO S1 , 
                                    EPCN_ATH_GRP_USER S2 , 
                                    EPCN_ATH_GRP_BIZR S3 
                              WHERE 1=1 
                                    AND A.WHSDL_BIZRID = S1.BIZRID 
                                    AND A.WHSDL_BIZRNO = S1.BIZRNO 
                                    AND A.WHSDL_BRCH_ID = S1.BRCH_ID 
                                    AND A.WHSDL_BRCH_NO = S1.BRCH_NO 
                                    AND S2.USER_ID = #{T_USER_ID} 
                                    AND S2.ATH_GRP_CD = S3.ATH_GRP_CD 
                                    AND S2.BIZRID = S3.BIZRID 
                                    AND S2.BIZRNO = S3.BIZRNO 
                                    AND S3.BIZR_ATH_SE = 'A' 
                                    /* 권한구분 : 지역 */ 
                                    AND S1.AREA_CD = S3.AREA_CD 
                             )  
                      ) A1 
                      
                      LEFT JOIN 
                       (SELECT Q.WRHS_DOC_NO,Q.CTNR_CD,Q.CFM_QTY FROM epcm_cfm_info Q   )  Q1
                      ON Q1.WRHS_DOC_NO = A1.WRHS_DOC_NO
                       AND Q1.CTNR_CD = A1.CTNR_CD
                       
             ORDER BY A1.RTN_REG_DT DESC,A1.WHSDL_BIZRID ,A1.MFC_BIZRID ,A1.MFC_BRCH_ID,A1.RTN_DOC_NO
           <if test='excelYn == null or excelYn == "" '>
                       
               )     
                WHERE PNO BETWEEN (#{ROWS_PER_PAGE}*(#{CURRENT_PAGE}-1))+1 AND #{ROWS_PER_PAGE}*#{CURRENT_PAGE}
        </if>
    
	</select>
	
	<!-- 반환내역상세 조회 카운트(20200402 추가) -->
	<select id="epce9000301_select4_1_cnt" parameterType="map" resultType="hashmap">
	    SELECT COUNT(1) AS CNT
                        , SUM(A.BOX_QTY_TOT) AS BOX_QTY_TOT
                        , SUM(A.RTN_QTY_TOT) AS RTN_QTY_TOT
                        , SUM(A.RTN_GTN_UTPC_TOT) AS RTN_GTN_UTPC_TOT
                        , SUM(A.RTN_GTN_TOT) AS RTN_GTN_TOT
                        , SUM(A.RTN_WHSL_FEE_UTPC_TOT) AS RTN_WHSL_FEE_UTPC_TOT
                        , SUM(A.RTN_WHSL_FEE_TOT) AS RTN_WHSL_FEE_TOT
                        , SUM(A.RTN_RTL_FEE_UTPC_TOT) AS RTN_RTL_FEE_UTPC_TOT
                        , SUM(A.RTN_RTL_FEE_TOT) AS RTN_RTL_FEE_TOT
                        , SUM(A.RTN_WHSL_FEE_STAX_TOT) AS RTN_WHSL_FEE_STAX_TOT
                        , SUM(A.ATM_TOT) AS ATM_TOT
                        , SUM(A.CFM_QTY_TOT) AS CFM_QTY_TOT
                        , SUM(Q1.CFM_QTY) AS CFM_QTY
        FROM (
    			SELECT   
     		  			
                         SUM(NVL(X.BOX_QTY,'0')) AS BOX_QTY_TOT
                        , SUM(X.RTN_QTY) AS RTN_QTY_TOT
                        , SUM(X.RTN_GTN_UTPC) AS RTN_GTN_UTPC_TOT
                        , SUM(X.RTN_GTN) AS RTN_GTN_TOT
                        , SUM(X.RTN_WHSL_FEE_UTPC) AS RTN_WHSL_FEE_UTPC_TOT
                        , SUM(X.RTN_WHSL_FEE) AS RTN_WHSL_FEE_TOT
                        , SUM(X.RTN_RTL_FEE_UTPC) AS RTN_RTL_FEE_UTPC_TOT
                        , SUM(X.RTN_RTL_FEE) AS RTN_RTL_FEE_TOT
                        , SUM(X.RTN_WHSL_FEE_STAX) AS RTN_WHSL_FEE_STAX_TOT
                        , SUM(X.RTN_GTN +X.RTN_WHSL_FEE+X.RTN_WHSL_FEE_STAX +X.RTN_RTL_FEE) AS ATM_TOT
                        , SUM(B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT) AS CFM_QTY_TOT
                        , A.WRHS_DOC_NO
                        , X.CTNR_CD
                        
    			FROM 	EPCM_RTN_MST A
    		 		   ,EPCM_CFM_MST B
    		 		   ,EPCN_DTSS_CUST_INFO	C
    		 		   ,EPCN_BRCH_INFO D
    		 		   ,EPGM_PAY_INFO_LST F
    		 		   ,(SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E 
		          	   ,EPCM_RTN_INFO X 
		               ,EPCN_STD_CTNR_CD Z
    			WHERE 1=1
    			AND  A.RTN_DOC_NO = B.RTN_DOC_NO(+)
    			AND A.WHSDL_BIZRID = C.CUST_BIZRID
    			AND A.WHSDL_BIZRNO = C.CUST_BIZRNO	
    			AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
    			AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
    			AND A.MFC_BIZRID = C.MFC_BIZRID
    			AND A.MFC_BIZRNO = C.MFC_BIZRNO
    			AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
    			AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
    			AND A.WHSDL_BIZRID = D.BIZRID
    			AND A.WHSDL_BIZRNO = D.BIZRNO	
    			AND A.WHSDL_BRCH_ID = D.BRCH_ID
    			AND A.WHSDL_BRCH_NO = D.BRCH_NO	
    			AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
    			AND A.RTN_DOC_NO =X.RTN_DOC_NO
				AND X.CTNR_CD = Z.CTNR_CD
				AND Z.LANG_SE_CD = E.LANG_SE_CD
    			<if test="SEARCH_GBN.equalsIgnoreCase('1') ">
    				AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="SEARCH_GBN.equalsIgnoreCase('2') ">
    				AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="SEARCH_GBN.equalsIgnoreCase('3') ">
    				AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
    			</if>
    			<if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
    				AND A.RTN_STAT_CD = #{RTN_STAT_CD}
    			</if>
    			 <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
    				AND A.MFC_BIZRID 	= #{MFC_BIZRID}
    				AND A.MFC_BIZRNO 	= #{MFC_BIZRNO}
    			</if>
    			<if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
    				AND A.MFC_BRCH_ID 	= #{MFC_BRCH_ID}
    				AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
    			</if>
    			<if test="SYS_SE !=''  and SYS_SE !=null">
    				AND A.SYS_SE		= #{SYS_SE}
    			</if>
    			<if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
    				AND C.BIZR_TP_CD = #{BIZR_TP_CD}
    			</if>
    			<if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
    				AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
    				AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
    			</if>
    			<if test="CTNR_LIST !=null and CTNR_LIST.size >0" >
				  	AND	Z.CTNR_CD IN
			       <foreach collection="CTNR_LIST"  item="type"  open="(" close=")" separator=",">
					   #{type.CTNR_CD}
				   </foreach>
			    </if>
    			AND EXISTS (
    		                   SELECT 'X'
    		                     FROM EPCN_BRCH_INFO S1
    			                          ,EPCN_ATH_GRP_USER S2
    			                          ,EPCN_ATH_GRP_BIZR S3
    		                   WHERE 1=1
    		                       AND A.WHSDL_BIZRID = S1.BIZRID
    		                       AND A.WHSDL_BIZRNO = S1.BIZRNO
    		                       AND A.WHSDL_BRCH_ID = S1.BRCH_ID
    		                       AND A.WHSDL_BRCH_NO = S1.BRCH_NO
    		                       AND S2.USER_ID = #{T_USER_ID}
    		                       AND S2.ATH_GRP_CD = S3.ATH_GRP_CD AND S2.BIZRID = S3.BIZRID AND S2.BIZRNO = S3.BIZRNO
    		                       AND S3.BIZR_ATH_SE = 'A' /* 권한구분 : 지역 */
    		                       AND S1.AREA_CD = S3.AREA_CD
    	                  )
    	                  
  	                  GROUP BY A.WRHS_DOC_NO, X.CTNR_CD
            UNION ALL              
                          
            SELECT   
                        
                         SUM(NVL(X.BOX_QTY,'0')) AS BOX_QTY_TOT
                        , SUM(X.RTN_QTY) AS RTN_QTY_TOT
                        , SUM(X.RTN_GTN_UTPC) AS RTN_GTN_UTPC_TOT
                        , SUM(X.RTN_GTN) AS RTN_GTN_TOT
                        , SUM(X.RTN_WHSL_FEE_UTPC) AS RTN_WHSL_FEE_UTPC_TOT
                        , SUM(X.RTN_WHSL_FEE) AS RTN_WHSL_FEE_TOT
                        , SUM(X.RTN_RTL_FEE_UTPC) AS RTN_RTL_FEE_UTPC_TOT
                        , SUM(X.RTN_RTL_FEE) AS RTN_RTL_FEE_TOT
                        , SUM(X.RTN_WHSL_FEE_STAX) AS RTN_WHSL_FEE_STAX_TOT
                        , SUM(X.RTN_GTN +X.RTN_WHSL_FEE+X.RTN_WHSL_FEE_STAX +X.RTN_RTL_FEE) AS ATM_TOT
                        , SUM(B.FH_CFM_QTY_TOT +B.FB_CFM_QTY_TOT +B.DRCT_CFM_QTY_TOT) AS CFM_QTY_TOT
                        , A.WRHS_DOC_NO
                        , X.CTNR_CD
                        
                FROM    EPCM_RTN_MST_TMP A
                       ,EPCM_CFM_MST B
                       ,EPCN_DTSS_CUST_INFO C
                       ,EPCN_BRCH_INFO D
                       ,EPGM_PAY_INFO_LST F
                       ,(SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E 
		          	   ,EPCM_RTN_INFO_tmp X 
		               ,EPCN_STD_CTNR_CD Z
                WHERE 1=1
                AND  A.RTN_DOC_NO = B.RTN_DOC_NO(+)
                AND A.WHSDL_BIZRID = C.CUST_BIZRID
                AND A.WHSDL_BIZRNO = C.CUST_BIZRNO  
                AND A.WHSDL_BRCH_ID = C.CUST_BRCH_ID
                AND A.WHSDL_BRCH_NO = C.CUST_BRCH_NO
                AND A.MFC_BIZRID = C.MFC_BIZRID
                AND A.MFC_BIZRNO = C.MFC_BIZRNO
                AND A.MFC_BRCH_ID = C.MFC_BRCH_ID
                AND A.MFC_BRCH_NO = C.MFC_BRCH_NO
                AND A.WHSDL_BIZRID = D.BIZRID
                AND A.WHSDL_BIZRNO = D.BIZRNO   
                AND A.WHSDL_BRCH_ID = D.BRCH_ID
                AND A.WHSDL_BRCH_NO = D.BRCH_NO 
                AND B.PAY_DOC_NO = F.PAY_DOC_NO(+)
                AND A.REG_YN = 'N'
                AND A.RTN_DOC_NO =X.RTN_DOC_NO
				AND X.CTNR_CD = Z.CTNR_CD
				AND Z.LANG_SE_CD = E.LANG_SE_CD
                <if test="SEARCH_GBN.equalsIgnoreCase('1') ">
                    AND  A.RTN_REG_DT BETWEEN  REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="SEARCH_GBN.equalsIgnoreCase('2') ">
                    AND  A.RTN_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="SEARCH_GBN.equalsIgnoreCase('3') ">
                    AND  A.WRHS_CFM_DT  BETWEEN   REPLACE(#{START_DT}, '-') AND  REPLACE(#{END_DT}, '-')
                </if>
                <if test="RTN_STAT_CD !=''  and RTN_STAT_CD !=null">
                    AND A.RTN_STAT_CD = #{RTN_STAT_CD}
                </if>
                 <if test="MFC_BIZRID !=''  and MFC_BIZRID !=null">
                    AND A.MFC_BIZRID    = #{MFC_BIZRID}
                    AND A.MFC_BIZRNO    = #{MFC_BIZRNO}
                </if>
                <if test="MFC_BRCH_ID !=''  and MFC_BRCH_ID !=null">
                    AND A.MFC_BRCH_ID   = #{MFC_BRCH_ID}
                    AND A.MFC_BRCH_NO = #{MFC_BRCH_NO}
                </if>
                <if test="SYS_SE !=''  and SYS_SE !=null">
                    AND A.SYS_SE        = #{SYS_SE}
                </if>
                <if test="BIZR_TP_CD !=''  and BIZR_TP_CD !=null">
                    AND C.BIZR_TP_CD = #{BIZR_TP_CD}
                </if>
                <if test="WHSDL_BIZRID !=''  and WHSDL_BIZRID !=null">
                    AND A.WHSDL_BIZRID = #{WHSDL_BIZRID}
                    AND A.WHSDL_BIZRNO = #{WHSDL_BIZRNO}
                </if>
                <if test="CTNR_LIST !=null and CTNR_LIST.size >0" >
				  	AND	Z.CTNR_CD IN
			       <foreach collection="CTNR_LIST"  item="type"  open="(" close=")" separator=",">
					   #{type.CTNR_CD}
				   </foreach>
			    </if>
                AND EXISTS (
                               SELECT 'X'
                                 FROM EPCN_BRCH_INFO S1
                                          ,EPCN_ATH_GRP_USER S2
                                          ,EPCN_ATH_GRP_BIZR S3
                               WHERE 1=1
                                   AND A.WHSDL_BIZRID = S1.BIZRID
                                   AND A.WHSDL_BIZRNO = S1.BIZRNO
                                   AND A.WHSDL_BRCH_ID = S1.BRCH_ID
                                   AND A.WHSDL_BRCH_NO = S1.BRCH_NO
                                   AND S2.USER_ID = #{T_USER_ID}
                                   AND S2.ATH_GRP_CD = S3.ATH_GRP_CD AND S2.BIZRID = S3.BIZRID AND S2.BIZRNO = S3.BIZRNO
                                   AND S3.BIZR_ATH_SE = 'A' /* 권한구분 : 지역 */
                                   AND S1.AREA_CD = S3.AREA_CD
                          )
                    GROUP BY A.WRHS_DOC_NO, X.CTNR_CD
        ) A
        
        LEFT JOIN
                       (SELECT Q.WRHS_DOC_NO,Q.CTNR_CD,Q.CFM_QTY FROM epcm_cfm_info Q   )  Q1
                      ON Q1.WRHS_DOC_NO = A.WRHS_DOC_NO
                       AND Q1.CTNR_CD = A.CTNR_CD
        
	</select>
	
	<!-- 반환관리 실태조사변경시  상태값 체크 -->
	<select id="epce9000301_select5" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM EPCM_RTN_MST 
		WHERE 1=1
		AND	RTN_DOC_NO 	 =	#{RTN_DOC_NO}
		AND RTN_STAT_CD		!= 'RG'
		AND  RTN_STAT_CD  	!=	'WC'
		AND  RTN_STAT_CD  	!=	'WJ'
	</select>

    <!-- 반환관리 반환등록요청 일괄확인 상태값 체크 -->
    <select id="epce9000301_select7" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM EPCM_RTN_MST_TMP 
        WHERE 1=1
        AND RTN_DOC_NO  =  #{RTN_DOC_NO}
        AND RTN_STAT_CD != 'RA'
        AND REG_YN      = 'N'
    </select>
    
	<!-- 반환내역서변경 등록시 반환등록상태인지 조회 -->
	<select id="epce9000301_select6" parameterType="map" resultType="int">
        SELECT COUNT(*) AS CNT 
        FROM 
              <if test="GBN.equalsIgnoreCase('ORI') ">
              EPCM_RTN_MST
              </if>
              <if test="GBN.equalsIgnoreCase('TMP') ">
              EPCM_RTN_MST_TMP
              </if>
        WHERE 1=1 
              AND RTN_DOC_NO =#{RTN_DOC_NO} 
              <if test="GBN.equalsIgnoreCase('ORI') ">
              AND RTN_STAT_CD != 'RG' 
              </if>
              <if test="GBN.equalsIgnoreCase('TMP') ">
              AND RTN_STAT_CD != 'RA' 
              </if>
	</select>
	
	<!-- 실태조사 -->
	<insert 	id="epce9000301_insert" parameterType="map" >	
				INSERT 
					INTO EPCM_RSRC_REQ_INFO
						(	                      
							RSRC_DOC_NO             
							,RTN_DOC_NO             
							,REQ_BRCH_ID            
							,REQ_BRCH_NO            
							,REQ_BIZRID             
							,REQ_BIZRNO             
							,REQ_BIZR_TP_CD         
							,RTN_STAT_CD            
							,REQ_RTN_STAT_CD        
							,REG_RTN_STAT_CD        
							,REQ_ID                 
							,REQ_DTTM      
						)
                		VALUES
						(
							 #{RSRC_DOC_NO}             
							,#{RTN_DOC_NO}             			
							,#{REQ_BRCH_ID}            			
							,#{REQ_BRCH_NO}           			
							,#{REQ_BIZRID}             			
							,#{REQ_BIZRNO}             			
							,#{REQ_BIZR_TP_CD}         			
							,#{RTN_STAT_CD}            			
							,#{RTN_STAT_CD}        			
							,(SELECT RTN_STAT_CD  FROM EPCM_RTN_MST WHERE RTN_DOC_NO=#{RTN_DOC_NO})       			
							,#{REQ_ID}                 			
							,SYSDATE    			
						)			
		</insert>	
	
	<!-- 반환관리 삭제 -->
	<delete id="epce9000301_delete" parameterType="map">

                DELETE FROM 
                EPCM_RCS_LST 
                WHERE REG_SQ= #{REG_SQ}
	</delete>
	
	<!-- 반환관리 실태조사 변경 -->
	<update id="epce9000301_update" parameterType="map">
		    UPDATE 
		    			EPCM_RTN_MST     
		    SET    
		    			RTN_STAT_CD			= #{RTN_STAT_CD}
		    			,BF_RTN_STAT_CD	= RTN_STAT_CD
		    			,UPD_PRSN_ID			= #{REQ_ID}
						,UPD_DTTM			= SYSDATE
		    WHERE 1=1
		    AND		RTN_DOC_NO 		=	#{RTN_DOC_NO}
	</update>
    
    <!-- 반환등록요청 일괄확인 -->
    <update id="epce9000301_insert2" parameterType="map" >
        INSERT
			INTO   EPCM_RCS_LST VALUES
			       (
			              '',
			              #{RTRVL_DT},
			              <!-- #{WHSDL_BIZRNM}, -->
			              (select WHSDL_BIZRNM from EPCM_RCS_INFO where RCS_NM = #{RCS_NM}),
			              (select WHSDL_BIZRNO from EPCM_RCS_INFO where RCS_NM = #{RCS_NM}),
			              <!-- #{WHSDL_BIZRNO}, -->
			              <!-- #{RCS_NO}, -->
			              (select RCS_NO from EPCM_RCS_INFO where RCS_NM = #{RCS_NM}),
			              #{RCS_NM},
			              to_char(sysdate,'yyyymmdd'),
			              <!-- #{AREA_CD}, -->
			              (select AREA_CD from EPCM_RCS_INFO where RCS_NM = #{RCS_NM}),
			              #{RTN_QTY},
			              #{CPCT_CD},
			              #{PRPS_CD},
			              #{RTN_GTN},
			              '웹시스템',
			              '회수확인',
			              (select LOC_GOV from EPCM_RCS_INFO where RCS_NM = #{RCS_NM}),
			              <!-- #{LOC_GOV}, -->
			              #{REG_PRSN_ID},
			              sysdate,
			              '',
			              ''
			       )
    </update>   
    
    <!-- 검사 -->    
     <select id="epce9000301_check" parameterType="map" resultType="int">
<!-- 		SELECT 
			CASE 
		  	WHEN START_DT <= #{RTRVL_DT} AND END_DT >= #{RTRVL_DT}
		    	THEN 1
		    ELSE 0
		      END AS RESULT
		FROM EPCM_RCS_INFO 
		WHERE RCS_NM = #{RCS_NM} -->
		
		SELECT COUNT(*)
		FROM
			(SELECT RCS_NM 
			FROM EPCM_RCS_INFO 
			WHERE RCS_NM = #{RCS_NM} 
			AND #{RTRVL_DT} BETWEEN START_DT AND END_DT)
    </select> 
    
    <!-- 수정 -->
    <update id="epce9000342_update" parameterType="map" >
       UPDATE EPCM_RCS_LST
		SET    RTRVL_DT = #{RTRVL_DT},
			       RTN_QTY = #{RTN_QTY},
			       CPCT_CD = #{CPCT_CD},
			       PRPS_CD = #{PRPS_CD},
			       RTN_GTN = #{RTN_GTN},
			       UPD_PRSN_ID = #{REG_PRSN_ID},
			       UPD_DTTM = SYSDATE
       WHERE REG_SQ = #{REG_SQ}
    </update>     
    <select id="epce9000331_select4"   parameterType="map" resultType="hashmap">
			SELECT 
			 		  #{RTRVL_DT} as RTRVL_DT,
			 		  #{RCS_NM} as RCS_NM,
			 		  #{RTN_QTY} as RTN_QTY,
			 		  #{CPCT_CD} as CPCT_CD,
			 		  #{PRPS_CD} as PRPS_CD,
			 		  #{RTN_GTN} as RTN_GTN
					FROM   dual
    
	</select>
	
<!-- 	  
/***********************************************************************************************************************************************
 *	반환내역서 상세조회
 ************************************************************************************************************************************************/
  --> 	    
	<!-- 반환내역서 상세조회 공급자부분  -->
	<select id="epce9000364_select"  resultType="hashmap" parameterType="map">
			 SELECT 
						A.RTN_DT
						,A.CAR_NO
						,B.BIZRNM 						 AS MFC_BIZRNM
						,ECL_DECRYPT(B.BIZRNO)	 AS MFC_BIZRNO	
						,B.RPST_NM					 AS MFC_RPST_NM
						,D.BRCH_NM					 AS MFC_BRCH_NM
						,B.RPST_TEL_NO1||'-'||B.RPST_TEL_NO2||'-'||B.RPST_TEL_NO3 AS MFC_RPST_TEL_NO
						,B.ADDR1||' '||B.ADDR2 		 AS MFC_ADDR
						,C.BIZRNM						 AS WHSDL_BIZRNM
						,ECL_DECRYPT(C.BIZRNO)	 AS WHSDL_BIZRNO
						,C.RPST_NM					 AS WHSDL_RPST_NM		
						,C.RPST_TEL_NO1||'-'||C.RPST_TEL_NO2||'-'||C.RPST_TEL_NO3 AS WHSDL_RPST_TEL_NO
						,C.ADDR1||' '||C.ADDR2 		 AS WHSDL_ADDR
						
			FROM
             	<if test="GBN.equalsIgnoreCase('ORI') ">
                         EPCM_RTN_MST A
                </if>
                <if test="GBN.equalsIgnoreCase('TMP') ">
                         EPCM_RTN_MST_TMP A
                </if>			
						,EPCN_BIZR_INFO B			 
						,EPCN_BIZR_INFO C 		
						,EPCN_BRCH_INFO D			
			WHERE 1=1
			AND 		A.MFC_BIZRID  	 	= B.BIZRID
			AND		A.MFC_BIZRNO 	 	= B.BIZRNO
			AND 		A.WHSDL_BIZRID  	= C.BIZRID
			AND		A.WHSDL_BIZRNO 	= C.BIZRNO
			AND	    A.RTN_DOC_NO		= #{RTN_DOC_NO}
			AND		A.MFC_BIZRID 		= #{MFC_BIZRID}
			AND		A.MFC_BIZRNO 		= #{MFC_BIZRNO}
			AND		A.WHSDL_BIZRID 	= #{WHSDL_BIZRID}
			AND		A.WHSDL_BIZRNO 	= ECL_ENCRYPT(#{WHSDL_BIZRNO})
			AND 		D.BRCH_ID 				= #{MFC_BRCH_ID}
			AND 		D.BRCH_NO 			= #{MFC_BRCH_NO}	
			
	</select>
	
	<!-- 반환내역서 상세조회 그리드 쪽  -->
	<select id="epce9000364_select2"  resultType="hashmap" parameterType="map">
		  		SELECT 
						EPCN_ETC_NM(C.PRPS_CD , 'E002') AS PRPS_CD
						,C.CTNR_NM
						,A.CTNR_CD
						,EPCN_ETC_NM(C.CPCT_CD , 'E001') AS CPCT_NM
						,NVL(A.BOX_QTY,'0') AS BOX_QTY
						,A.RTN_QTY
					    ,A.RTN_GTN_UTPC
						,A.RTN_GTN
						,A.RTN_WHSL_FEE_UTPC
						,A.RTN_WHSL_FEE
						,A.RTN_WHSL_FEE_STAX
						,A.RTN_RTL_FEE_UTPC
						,A.RTN_RTL_FEE
						,A.RTN_GTN +A.RTN_WHSL_FEE+A.RTN_WHSL_FEE_STAX +A.RTN_RTL_FEE  AS AMT_TOT
						,B.RTN_STAT_CD
						,A.RMK   
						,SUBSTR(A.RMK ,3) AS RMK_C
				FROM
                <if test="GBN.equalsIgnoreCase('ORI') "> 	
					EPCM_RTN_INFO A
                    ,EPCM_RTN_MST B
                </if>
                <if test="GBN.equalsIgnoreCase('TMP') ">
                    EPCM_RTN_INFO_TMP A
                    ,EPCM_RTN_MST_TMP B
                </if>
					,EPCN_STD_CTNR_CD C
					,(SELECT LANG_SE_CD FROM EPCN_LANG_CD WHERE USE_YN = 'Y' AND STD_YN = 'Y' AND ROWNUM = '1') E
				WHERE  1=1
				AND A.RTN_DOC_NO = B.RTN_DOC_NO
				AND A.CTNR_CD = C.CTNR_CD
				AND C.LANG_SE_CD = E.LANG_SE_CD
				AND A.RTN_DOC_NO = #{RTN_DOC_NO}
	
	</select>
	
	<!-- 도매업자 조회	 -->
	<select id="rcs_nm_select_all" parameterType="map" resultType="hashmap">
		  SELECT 
			  RCS_NM,
			  RCS_NO 
		  FROM 
		  EPCM_RCS_INFO
      WHERE RCS_BIZR_CD = 'Y'
      AND rcs_nm IS NOT null
	</select>
	
	<!-- 도매업자 조회	 -->
	<select id="rcs_nm_select" parameterType="map" resultType="hashmap">
		  SELECT RCS_NM,
			       RCS_NO
			FROM   EPCM_RCS_INFO
			WHERE  BIZRNO =#{BIZRNO}
	</select>
	
	 <select id="whsdlList"  parameterType="map"  resultType="hashmap">
		  	SELECT WHSDL_BIZRNO AS RCS_NO, WHSDL_BIZRNM AS RCS_NM
 	 		FROM EPCM_RCS_INFO 
 	 		WHERE WHSDL_BIZRNO IS NOT NULL
 		 	GROUP BY WHSDL_BIZRNO, WHSDL_BIZRNM
	 </select>
</mapper>